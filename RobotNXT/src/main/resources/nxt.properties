robot.plugin.factory = de.fhg.iais.roberta.factory.RobotFactory
robot.plugin.compiler.resources.dir = RobotNXT/

robot.plugin.fileExtension.source = nxc
robot.plugin.fileExtension.binary = rxe

# directory to store (temporarily) the generated user programs
crosscompiler.basedirrobot.configuration.= ../OpenRobertaServer/userProjects/

# the resources needed for program compilation
robot.resources.dir = ./resources/

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = /nxt.program.toolbox.beginner.xml
robot.program.toolbox.expert = /nxt.program.toolbox.expert.xml
robot.program.default = /nxt.program.default.xml
robot.configuration.toolbox = /nxt.configuration.toolbox.xml
robot.configuration.default = /nxt.configuration.default.xml

robot.configuration = true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = old-S
robot.configuration.old.toplevelblock = robBrick_EV3-Brick

# robot's long name to display
robot.real.name = NXT
robot.vendor = na
# robot's info for further information
robot.info = https://de.wikipedia.org/wiki/Lego_Mindstorms_NXT

# simulation available?
robot.sim = true
# multiple robot simulation available
robot.multisim = true

robot.connection = token

robot.descriptor = classpath:/nxt.yml
robot.helperMethods = classpath:/nxt.methods.yml

robot.plugin.worker.validate.robot = de.fhg.iais.roberta.worker.NxtBrickValidatorWorker
robot.plugin.worker.validate.sim = de.fhg.iais.roberta.worker.NxtSimValidatorWorker
robot.plugin.worker.collect.hardware = de.fhg.iais.roberta.worker.NxtUsedHardwareCollectorWorker
robot.plugin.worker.collect.method = de.fhg.iais.roberta.worker.NxtUsedMethodCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.NxtCxxGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.compile = de.fhg.iais.roberta.worker.NxtCompilerWorker
robot.plugin.worker.transfer = de.fhg.iais.roberta.worker.TransferWorker

robot.plugin.worker.generatesimulation = de.fhg.iais.roberta.worker.NxtStackMachineGeneratorWorker

robot.plugin.workflow.showsource = validate.robot,collect.hardware,collect.method,generate
robot.plugin.workflow.compile = validate.robot,collect.hardware,collect.method,generate,setup,compile
robot.plugin.workflow.run = validate.robot,collect.hardware,collect.method,generate,setup,compile,transfer
robot.plugin.workflow.getsimulationcode = validate.sim,collect.hardware,collect.method,generatesimulation
robot.plugin.workflow.runnative = setup,compile,transfer
robot.plugin.workflow.compilenative = setup,compile