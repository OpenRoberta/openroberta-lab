#define WHEELDIAMETER 5.6
#define TRACKWIDTH 12.0
#define MAXLINES 8
#define MIN(X, Y) (((X) < (Y)) ? (X) : (Y))
#define MAX(X, Y) (((X) > (Y)) ? (X) : (Y))
#define M_PI PI
#define M_E 2.718281828459045
#define M_GOLDEN_RATIO 1.61803398875
#define M_SQRT2 1.41421356237
#define M_SQRT1_2 0.707106781187
#define M_INFINITY 0x7f800000
#include "NEPODefs.h" // contains NEPO declarations for the NXC NXT API resources

float ___item;
bool ___item2;
string ___item3;
int ___item4;
int ___item5;
float ___item6[3];
bool ___item7[3];
string ___item8[3];
int ___item9[3];
int ___item10[3];
task main() {
    ___item = 0;
    ___item2 = true;
    ___item3 = "";
    ___item4 = INPUT_WHITECOLOR;
    ___item5 = NULL;
    float _____item6[] = {0, 0, 0};
    ___item6 = _____item6;
    bool _____item7[] = {true, true, true};
    ___item7 = _____item7;
    string _____item8[] = {"", "", ""};
    ___item8 = _____item8;
    int _____item9[] = {INPUT_WHITECOLOR, INPUT_WHITECOLOR, INPUT_WHITECOLOR};
    ___item9 = _____item9;
    int _____item10[] = {NULL, NULL, NULL};
    ___item10 = _____item10;
    SetSensor(S1, SENSOR_TOUCH);
    SetSensor(S3, SENSOR_COLORFULL);
    SetSensor(S2, SENSOR_SOUND);
    NumOut(0, (MAXLINES - 1) * MAXLINES, ___item);
    BoolOut(0, (MAXLINES - 1) * MAXLINES, ___item2);
    TextOut(0, (MAXLINES - 1) * MAXLINES, ___item3);
    ColorOut(0, (MAXLINES - 1) * MAXLINES, ___item4);
    NumOut(0, (MAXLINES - 1) * MAXLINES, ___item5);
    ClearScreen();
    NumOut(0, (MAXLINES - 1) * MAXLINES, 0);
    BoolOut(0, (MAXLINES - 1) * MAXLINES, true);
    TextOut(0, (MAXLINES - 1) * MAXLINES, "");
    ColorOut(0, (MAXLINES - 1) * MAXLINES, INPUT_WHITECOLOR);
    NumOut(0, (MAXLINES - 1) * MAXLINES, NULL);
    NumOut(0, (MAXLINES - 1) * MAXLINES, (sqrt(213) + 213));
    BoolOut(0, (MAXLINES - 1) * MAXLINES, true && true);
    NumOut(0, (MAXLINES - 1) * MAXLINES, ( (213 + 213) ) == sqrt(213));
    NumOut(0, (MAXLINES - 1) * MAXLINES, ___item6[sanitiseFromStart(ArrayLen(___item6), 0)]);
    BoolOut(0, (MAXLINES - 1) * MAXLINES, ___item7[sanitiseFromStart(ArrayLen(___item7), 0)]);
    TextOut(0, (MAXLINES - 1) * MAXLINES, ___item8[sanitiseFromStart(ArrayLen(___item8), 0)]);
    NumOut(0, (MAXLINES - 1) * MAXLINES, ___item9[sanitiseFromStart(ArrayLen(___item9), 0)]);
    NumOut(0, (MAXLINES - 1) * MAXLINES, ___item10[sanitiseFromStart(ArrayLen(___item10), 0)]);
    NumOut(0, (MAXLINES - 1) * MAXLINES, Sensor(S1));
    BoolOut(0, (MAXLINES - 1) * MAXLINES, ( ( true ) ? ( true ) : ( true) ));
    ColorOut(0, (MAXLINES - 1) * MAXLINES, SensorColor(S3, "COLOUR"));
    NumOut(0, (MAXLINES - 1) * MAXLINES, Sensor(S2));
}

