# robot's default program location, if any (preinstalled)
# attention, please leave out the file extension, this will be automatically added during runtime, 
# see "robot.plugin.fileExtension.binary"
robot.factory.default = ../firmware/calliope-firmware-v3.2.0

robot.plugin.group = calliope
robot.plugin.factory = de.fhg.iais.roberta.factory.RobotFactory
robot.plugin.compiler.resources.dir = RobotMbed/libs2017/

robot.plugin.fileExtension.source = cpp
robot.plugin.fileExtension.binary = hex
# set the location to the directory containing arm-none-eabi-g++, if it is not accesable from the PATH (ex. /usr/bin/)
# robot.plugin.compiler.dir =

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = /calliope/program.toolbox.beginner.xml
robot.program.toolbox.expert = /calliope/program.toolbox.expert.xml
robot.program.default = /calliope/program.default.xml
robot.configuration.toolbox = /calliope/configuration.toolbox.xml
robot.configuration.default = /calliope/configuration.default.xml

# robot's long name to display
robot.real.name = Calliope mini
robot.vendor = na

# robot's info for further information
robot.info = https://calliope.cc/ueber-mini
robot.configuration = false
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = old-S
robot.configuration.old.toplevelblock = mbedBrick_Calliope-Brick

# simulation available?
robot.sim = true

# flag that compiled programs are send back to the client
robot.connection = autoConnection

robot.descriptor = classpath:/mbed.yml
robot.helperMethods = classpath:/common.methods.yml

robot.plugin.worker.validate.robot = de.fhg.iais.roberta.worker.MbedBoardValidatorWorker
robot.plugin.worker.validate.sim = de.fhg.iais.roberta.worker.CalliopeSimValidatorWorker
robot.plugin.worker.collect.hardware = de.fhg.iais.roberta.worker.MbedUsedHardwareCollectorWorker
robot.plugin.worker.collect.method = de.fhg.iais.roberta.worker.MbedUsedMethodCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.CalliopeCxxGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.compile = de.fhg.iais.roberta.worker.CalliopeCompilerWorker
robot.plugin.worker.generatesimulation = de.fhg.iais.roberta.worker.MbedStackMachineGeneratorWorker
robot.plugin.worker.resetFirmware = de.fhg.iais.roberta.worker.MbedResetFirmwareWorker

robot.plugin.workflow.showsource = validate.robot,collect.hardware,collect.method,generate
robot.plugin.workflow.compile = validate.robot,collect.hardware,collect.method,generate,setup,compile
robot.plugin.workflow.run = validate.robot,collect.hardware,collect.method,generate,setup,compile
robot.plugin.workflow.getsimulationcode = validate.sim,collect.hardware,collect.method,generatesimulation
robot.plugin.workflow.runnative = setup,compile
robot.plugin.workflow.compilenative = setup,compile
robot.plugin.workflow.reset = resetFirmware
