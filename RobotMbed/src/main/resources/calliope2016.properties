# robot's default program location, if any (preinstalled)
# attention, please leave out the file extension, this will be automatically added during runtime, 
# see "robot.plugin.fileExtension.binary"
robot.factory.default=../firmware/firmware
robot.plugin.group=calliope
robot.plugin.factory=de.fhg.iais.roberta.factory.RobotFactory
robot.plugin.compiler.resources.dir=RobotMbed/libs2016/
robot.plugin.fileExtension.source=cpp
robot.plugin.fileExtension.binary=hex
# set the location to the directory containing arm-none-eabi-g++, if it is not accesable from the PATH (ex. /usr/bin/)
# robot.plugin.compiler.dir =
# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner=/calliope/program.toolbox.beginner.xml
robot.program.toolbox.expert=/calliope/program.toolbox.expert.xml
robot.program.default=/calliope/program.default.xml
robot.configuration.toolbox=/calliope/configuration.toolbox.xml
robot.configuration.default=/calliope/configuration.default.xml
# robot's long name to display
robot.real.name=Calliope mini 2016
robot.vendor=na
# robot's info for further information
robot.info.de=https://calliope.cc/
robot.info.en=https://calliope.cc/en/
robot.beta=true
robot.configuration=true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type=new
# still necessary for backwards compatibility with old configurations
robot.configuration.old.toplevelblock=mbedBrick_Calliope-Brick
# simulation available?
robot.sim=true
# flag that compiled programs are send back to the client
robot.connection=autoConnection
robot.descriptor=classpath:/mbed.yml
robot.helperMethods=classpath:/calliope.methods.yml

robot.plugin.worker.validate.and.collect=de.fhg.iais.roberta.worker.Calliope2016ValidatorAndCollectorWorker
robot.plugin.worker.validate.and.collect.sim=de.fhg.iais.roberta.worker.CalliopeSimValidatorAndCollectorWorker
robot.plugin.worker.generate=de.fhg.iais.roberta.worker.CalliopeCxxGeneratorWorker
robot.plugin.worker.setup=de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.compile=de.fhg.iais.roberta.worker.CalliopeCompilerWorker
robot.plugin.worker.generatesimulation=de.fhg.iais.roberta.worker.MbedStackMachineGeneratorWorker
robot.plugin.worker.resetFirmware=de.fhg.iais.roberta.worker.MbedResetFirmwareWorker
robot.plugin.worker.transform.two2three=de.fhg.iais.roberta.worker.MbedTwo2ThreeTransformerWorker
robot.plugin.worker.transform.three2threeone=de.fhg.iais.roberta.worker.MbedThree2ThreeOneTransformerWorker

robot.plugin.workflow.showsource=validate.and.collect,generate
robot.plugin.workflow.compile=validate.and.collect,generate,setup,compile
robot.plugin.workflow.run=validate.and.collect,generate,setup,compile
robot.plugin.workflow.getsimulationcode=validate.and.collect.sim,generatesimulation
robot.plugin.workflow.runnative=setup,compile
robot.plugin.workflow.compilenative=setup,compile
robot.plugin.workflow.reset=resetFirmware
robot.plugin.workflow.transform=transform.two2three,transform.three2threeone
