robot.plugin.group = calliope

robot.factory.default = firmware/CalliopeV3
robot.plugin.compiler.resources.dir = RobotMbed/
robot.real.name = Calliope mini v3
robot.vendor = 0xd28

robot.has.bluetooth = true

# robot's default program location, if any (preinstalled)
# attention, please leave out the file extension, this will be automatically added during runtime,
# see "robot.plugin.fileExtension.binary"
# set the location to the directory containing arm-none-eabi-g++, if it is not accesable from the PATH (ex. /usr/bin/)
# robot.plugin.compiler.dir =

robot.plugin.fileExtension.source = py
robot.plugin.fileExtension.binary = hex

robot.program.toolbox.beginner = /calliopeV3/program.toolbox.beginner.xml
robot.program.toolbox.expert = /calliopeV3/program.toolbox.expert.xml
robot.program.default = /calliopeV3/program.default.xml
robot.program.default.nn = /calliopeV3/program.default.nn.xml
robot.configuration.toolbox = /calliopeV3/configuration.toolbox.xml
robot.configuration.default = /calliopeV3/configuration.default.xml

robot.info.de = https://calliope.cc/
robot.info.en = https://calliope.cc/en/

robot.configuration = true
robot.configuration.type = new
robot.pluginSim = calliopeV3
robot.announcement = beta

# still necessary for backwards compatibility with old configurations
robot.configuration.old.toplevelblock = mbedBrick_Calliope-Brick

robot.connection = autoConnection

robot.nn = false
robot.nn.activations = linear,relu,tanh,sigmoid,bool

robot.helperMethods = classpath:/calliope.methods.yml

robot.plugin.worker.validate.and.collect = de.fhg.iais.roberta.worker.validate.CalliopeV3ValidatorAndCollectorWorker
robot.plugin.worker.validate.and.collect.sim = de.fhg.iais.roberta.worker.validate.CalliopeV3SimValidatorAndCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.codegen.CalliopeV3PythonGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.compile = de.fhg.iais.roberta.worker.CalliopeV3CompilerWorker
robot.plugin.worker.generatesimulation = de.fhg.iais.roberta.worker.codegen.CalliopeV3StackMachineGeneratorWorker
robot.plugin.worker.resetFirmware = de.fhg.iais.roberta.worker.MbedResetFirmwareWorker
robot.plugin.worker.regenerateNepo = de.fhg.iais.roberta.worker.RegenerateNepoWorker

robot.plugin.workflow.showsource = validate.and.collect,generate,regenerateNepo
robot.plugin.workflow.compile = validate.and.collect,generate,setup,compile,regenerateNepo
robot.plugin.workflow.run = validate.and.collect,generate,setup,compile,regenerateNepo
robot.plugin.workflow.getsimulationcode = validate.and.collect.sim,generatesimulation,regenerateNepo
robot.plugin.workflow.runnative = setup,compile
robot.plugin.workflow.compilenative = setup,compile
robot.plugin.workflow.reset = resetFirmware
