robot.plugin.group = orb
robot.plugin.factory = de.fhg.iais.roberta.factory.EV3Factory

robot.plugin.fileExtension.source = json
robot.plugin.fileExtension.binary = json

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = /orb.program.toolbox.beginner.xml
robot.program.toolbox.expert = /orb.program.toolbox.expert.xml
robot.program.default = /ev3.program.default.xml
robot.configuration.toolbox = /orb.configuration.toolbox.xml
robot.configuration.default = /ev3.configuration.default.xml

robot.configuration = true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = old-S
robot.configuration.old.toplevelblock = robBrick_EV3-Brick

# robot's long name to display
robot.real.name = OpenRobertaRobot
robot.vendor = na

# robot's info for further information
robot.info.en = http://www.lejos.org/ev3.php

# simulation available?
robot.sim = false
# multiple robot simulation available
robot.multisim = false

robot.connection = webview

robot.descriptor = classpath:/ev3.yml
robot.helperMethods = classpath:/common.methods.yml

robot.plugin.worker.validate.and.collect = de.fhg.iais.roberta.worker.validate.OrbValidatorAndCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.codegen.OrbStackMachineGeneratorWorker
robot.plugin.worker.transform.two2three=de.fhg.iais.roberta.worker.Two2ThreeTransformerWorker
robot.plugin.worker.transform.three2threeone=de.fhg.iais.roberta.worker.Three2ThreeOneTransformerWorker

robot.plugin.workflow.showsource = validate.and.collect,generate
robot.plugin.workflow.compile = validate.and.collect,generate
robot.plugin.workflow.run = validate.and.collect,generate
robot.plugin.workflow.transform=transform.two2three,transform.three2threeone
