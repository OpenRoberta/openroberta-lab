#include classpath:/ev3.properties

robot.plugin.compiler.resources.dir = RobotEV3/crossCompilerResources/
robot.plugin.update.dir = RobotEV3/updateResources/
robot.plugin.fileExtension.source = cpp
robot.plugin.fileExtension.binary = uf2

robot.real.name = EV3 c4ev3
robot.vendorId = na
# robot.announcement = beta
# robot's info for further information
robot.info.en = https://c4ev3.github.io/


robot.helperMethods = classpath:/common.methods.yml
robot.plugin.worker.validate.and.collect = de.fhg.iais.roberta.worker.validate.Ev3ValidatorAndCollectorWorker
robot.plugin.worker.validate.and.collect.sim = de.fhg.iais.roberta.worker.validate.Ev3SimValidatorAndCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.codegen.Ev3CxxGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.compile = de.fhg.iais.roberta.worker.compile.Ev3C4ev3CompilerWorker
robot.plugin.worker.generatesimulation = de.fhg.iais.roberta.worker.codegen.Ev3StackMachineGeneratorWorker

robot.plugin.workflow.showsource = validate.and.collect,generate
robot.plugin.workflow.compile = validate.and.collect,generate,setup,compile
robot.plugin.workflow.run = validate.and.collect,generate,setup,compile
robot.plugin.workflow.getsimulationcode = validate.and.collect.sim,generatesimulation
robot.plugin.workflow.runnative = setup,compile
robot.plugin.workflow.compilenative = setup,compile
