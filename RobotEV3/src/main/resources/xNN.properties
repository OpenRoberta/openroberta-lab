robot.plugin.compiler.resources.dir = RobotEV3/crossCompilerResources/lejos_v1/
robot.plugin.update.dir = RobotEV3/updateResources/lejos_v1/

robot.plugin.fileExtension.source = java
robot.plugin.fileExtension.binary = jar
# robot specific toolboxes, default program and configuration
robot.configuration.default = /ev3.configuration.default.xml
robot.configuration.toolbox = /ev3.configuration.toolbox.xml
robot.program.toolbox.beginner = /ev3.program.toolbox.beginner.xml
robot.program.toolbox.expert = /ev3.program.toolbox.expert.xml
robot.program.default = /ev3.program.default.xml

robot.configuration = true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = old-S
robot.configuration.old.toplevelblock = robBrick_EV3-Brick
# robot's long name to display
robot.real.name = Open Roberta xNN
robot.vendor = na

# robot's info for further information
robot.info.en = https://lejos.sourceforge.io/ev3.php
robot.multisim = true

# legal values for robot.nn are: always, selectable, never. Selectable means, that the user can select nn on the start page
robot.nn = always
robot.nn.activations = linear,relu,tanh,sigmoid,bool
robot.textly = always
robot.helperMethods = classpath:/common.methods.yml
robot.runtime.version = ${ev3runtime.v1.version}
robot.menu.version = ${ev3runtime.v1.version}
robot.class.textlyJava = de.fhg.iais.roberta.textlyJava.Ev3TextlyJavaVisitor
robot.plugin.worker.typecheck = de.fhg.iais.roberta.worker.validate.Ev3TypecheckWorker
robot.plugin.worker.validate.and.collect = de.fhg.iais.roberta.worker.validate.Ev3ValidatorAndCollectorWorker
robot.plugin.worker.validate.and.collect.sim = de.fhg.iais.roberta.worker.validate.Ev3SimValidatorAndCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.codegen.Ev3JavaGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.compile = de.fhg.iais.roberta.worker.compile.Ev3LejosCompilerWorker
robot.plugin.worker.transfer = de.fhg.iais.roberta.worker.TransferWorker
robot.plugin.worker.generatesimulation = de.fhg.iais.roberta.worker.codegen.Ev3StackMachineGeneratorWorker
robot.plugin.worker.regenerateNepo = de.fhg.iais.roberta.worker.codegen.Ev3RegenerateNepoWorker
robot.plugin.worker.textlyToAst = de.fhg.iais.roberta.worker.Ev3TextlyToNepoWorker

robot.plugin.workflow.showsource = validate.and.collect,typecheck,generate,regenerateNepo
robot.plugin.workflow.compile = validate.and.collect,typecheck,generate,setup,compile,regenerateNepo
robot.plugin.workflow.run = validate.and.collect,typecheck,generate,setup,compile,regenerateNepo,transfer
robot.plugin.workflow.getsimulationcode = validate.and.collect.sim,typecheck,generatesimulation,regenerateNepo
robot.plugin.workflow.runnative = setup,compile,transfer
robot.plugin.workflow.compilenative = setup,compile
robot.plugin.workflow.textlyToNepo = textlyToAst,validate.and.collect,typecheck,generate,regenerateNepo
