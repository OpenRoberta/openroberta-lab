robot.plugin.group = ev3
robot.plugin.factory = de.fhg.iais.roberta.factory.EV3Factory
robot.plugin.compiler.resources.dir = RobotEV3/crossCompilerResources/
robot.plugin.update.dir = RobotEV3/updateResources/ev3dev/

robot.plugin.fileExtension.source = py
robot.plugin.fileExtension.binary = py

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = /ev3.program.toolbox.beginner.xml
robot.program.toolbox.expert = /ev3.program.toolbox.expert.xml
robot.program.default = /ev3.program.default.xml
robot.configuration.toolbox = /ev3.configuration.toolbox.xml
robot.configuration.default = /ev3.configuration.default.xml

robot.configuration = true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = old-S
robot.configuration.old.toplevelblock = robBrick_EV3-Brick

# robot's long name to display
robot.real.name = EV3dev
robot.vendor = na

robot.beta = true

# robot's info for further information
robot.info = http://www.ev3dev.org/

# simulation available?
robot.sim = true
# multiple robot simulation available
robot.multisim = true

robot.connection = token
robot.descriptor = classpath:/ev3.yml
robot.helperMethods = classpath:/ev3dev.methods.yml

# Uncomment once a 1.7.5 has been released
# robot.menu.version = 1.7.5

robot.plugin.worker.validate.robot = de.fhg.iais.roberta.worker.validate.Ev3BrickValidatorWorker
robot.plugin.worker.validate.sim = de.fhg.iais.roberta.worker.validate.Ev3SimValidatorWorker
robot.plugin.worker.collect.hardware = de.fhg.iais.roberta.worker.collect.Ev3UsedHardwareCollectorWorker
robot.plugin.worker.collect.method = de.fhg.iais.roberta.worker.collect.Ev3UsedMethodCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.codegen.Ev3PythonGeneratorWorker
robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.save = de.fhg.iais.roberta.worker.SaveWorker
robot.plugin.worker.transfer = de.fhg.iais.roberta.worker.TransferWorker
robot.plugin.worker.generatesimulation = de.fhg.iais.roberta.worker.codegen.Ev3StackMachineGeneratorWorker


robot.plugin.workflow.showsource = validate.robot,collect.hardware,collect.method,generate
robot.plugin.workflow.compile = validate.robot,collect.hardware,collect.method,generate,setup,save
robot.plugin.workflow.run = validate.robot,collect.hardware,collect.method,generate,setup,save,transfer
robot.plugin.workflow.getsimulationcode = validate.sim,collect.hardware,generatesimulation
robot.plugin.workflow.runnative = setup,save,transfer
robot.plugin.workflow.compilenative = setup,save
