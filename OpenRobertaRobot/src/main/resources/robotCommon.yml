block:
  COLOR_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
      type: [robSensors_colour_getSample,sim_colour_getSample]
  LIGHT_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
      type: [robSensors_light_getSample,sim_light_getSample]
  VEMLLIGHT_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.VemlLightSensor
      type: [robSensors_lightveml_getSample]
  SOUND_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor
      type: [robSensors_sound_getSample]
  TOUCH_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor
      type: [sim_touch_isPressed,robSensors_touch_getSample]
  VOLTAGE_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.VoltageSensor
      type: [robSensors_battery_getSample,robSensors_potentiometer_getSample]
  COMPASS_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
      type: [robSensors_compass_getSample,mbedsensors_compass_getsample,robSensors_compass_calibrate]
  ULTRASONIC_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor
      type: [robSensors_ultrasonic_getSample,sim_ultrasonic_getSample]
  INFRARED_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
      type: [robSensors_infrared_getSample]
  IRSEEKER_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.IRSeekerSensor
      type: [robSensors_irseeker_getSample]
  ENCODER_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
      type: [robSensors_encoder_getSample,robSensors_encoder_reset]
  KEYS_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.KeysSensor
      type: [robSensors_key_getSample]
  MOISTURE_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.MoistureSensor
      type: [robSensors_moisture_getSample]
  HUMIDITY_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor
      type: [robSensors_humidity_getSample]
  MOTION_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.MotionSensor
      type: [robSensors_motion_getSample]
  DROP_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.DropSensor
      type: [robSensors_drop_getSample]
  PULSE_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.PulseSensor
      type: [robSensors_pulse_getSample]
  RFID_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor
      type: [robSensors_rfid_getSample]
  PIN_READ_VALUE :
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
      type: [mbedSensors_pin_getSample,robsensors_pin_getsample,robsensors_out_getsample]
  PIN_WRITE_VALUE :
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.generic.PinWriteValueAction
      type: [mbedActions_write_to_pin,robActions_write_pin]
  ACCELEROMETER_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
      type: [mbedSensors_acceleration_getSample,robsensors_accelerometer_getsample]
  GYRO_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
      type: [robSensors_gyro_getSample,robSensors_gyro_reset,mbedsensors_rotation_getsample]
  GESTURE_SENSING :
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
      type: [robSensors_gesture_getSample]
  TIMER_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor
      type: [robSensors_timer_getSample,robSensors_timer_reset,mbedSensors_timer_reset]
  TEMPERATURE_SENSING:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
      type: [robSensors_temperature_getSample,mbedsensors_temperature_getsample]
  SENSOR_GET_SAMPLE:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.GetSampleSensor
      type: [robSensors_getSample,robSensors_getSample_ardu,sim_getSample,mbedsensors_getsample]
  PIN_TOUCH_SENSING :
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinTouchSensor
      type: [robsensors_pintouch_getsample]
  STRING_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.StringConst
      type: [text]
  COLOR_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.ColorConst
      type: [robColour_picker,naoColour_picker,mbedColour_picker]
  RGB_COLOR :
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.RgbColor
      type: [robColour_rgb,mbedColour_rgb,naoColour_rgb]
  NULL_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.NullConst
      type: [logic_null]
  BOOL_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.BoolConst
      type: [logic_boolean]
  NUM_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.NumConst
      type: [math_number, math_integer]
  MATH_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.MathConst
      type: [math_constant]
  CONNECTION_CONST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.ConnectConst
      type: [robCommunication_connection]
  EMPTY_LIST:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.EmptyList
      type: [lists_create_empty]
  VAR:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.Var
      type: [variables_get]
  VAR_DECLARATION:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.VarDeclaration
      type: [robLocalVariables_declare,robGlobalvariables_declare]
  UNARY:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.Unary
      type: [logic_negate]
  BINARY:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.Binary
      type: [logic_compare,logic_operation,math_arithmetic,math_change,robMath_change,math_modulo,robText_append]
  EVAL:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.EvalExpr
      type: [robActions_eval_expr]
  START_ACTIVITY_TASK:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.blocksequence.StartActivityTask
      type: [robControls_start_activity]
  IF_STMT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.IfStmt
      type: [logic_ternary,controls_if,robControls_if,robControls_ifElse]
  REPEAT_STMT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.RepeatStmt
      type: [robControls_loopForever,robControls_loopForever_ardu,controls_whileUntil,controls_for,robControls_for,controls_repeat_ext,controls_repeat,controls_forEach,robControls_forEach]
  ASSIGN_STMT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.AssignStmt
      type: [variables_set]
  STMT_FLOW_CONTROL:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.StmtFlowCon
      type: [controls_flow_statements]
  WAIT_STMT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.WaitStmt
      type: [robControls_wait_for,robControls_wait,naocontrols_wait_for,mbedControls_wait_for]
  WAIT_TIME:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.WaitTimeStmt
      type: [robControls_wait_time]
  DEBUG_STMT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.DebugAction
      type: [robActions_debug]
  TURN_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.differential.TurnAction
      type: [robActions_motorDiff_turn,robActions_motorDiff_turn_for]
  DRIVE_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.differential.DriveAction
      type: [robActions_motorDiff_on,robActions_motorDiff_on_for]
  CURVE_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.differential.CurveAction
      type: [robActions_motorDiff_curve,robActions_motorDiff_curve_for]
  SHOW_TEXT_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.display.ShowTextAction
      type: [robActions_display_text,robActions_display_text_i2c]
  TONE_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.sound.ToneAction
      type: [robActions_play_tone,mbedActions_play_tone]
  PLAY_NOTE_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.sound.PlayNoteAction
      type: [mbedActions_play_note]
  LIGHT_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.light.LightAction
      type: [robActions_brickLight_on,sim_LED_on,robActions_sensorLight_on,robActions_led_on]
  CLEAR_DISPLAY_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.display.ClearDisplayAction
      type: [robActions_display_clear,robActions_display_clear_i2c,mbedActions_display_clear, mBotActions_display_clear]
  MOTOR_ON_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.MotorOnAction
      type: [robActions_motor_on,robActions_motor_on_for,sim_motor_on,sim_motor_on_for,robActions_motor_on_for_ardu,mbedActions_motor_on,vorwerkActions_motor_on_for]
  MOTOR_GET_POWER_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.MotorGetPowerAction
      type: [robActions_motor_getPower]
  MOTOR_SET_POWER_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.MotorSetPowerAction
      type: [robActions_motor_setPower]
  MOTOR_STOP_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.MotorStopAction
      type: [robActions_motor_stop,sim_motor_stop,mbedActions_motor_stop,makeblockActions_motor_stop,vorwerkActions_motor_stop]
  PLAY_FILE_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.sound.PlayFileAction
      type: [robActions_play_file,vorwerkActions_play_file]
  VOLUME_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.sound.VolumeAction
      type: [robActions_play_setVolume,robActions_play_getVolume]
  SET_LANGUAGE :
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.speech.SetLanguageAction
      type: [robActions_setLanguage,naoActions_setLanguage]
  SAY_TEXT :
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.speech.SayTextAction
      type: [robActions_sayText,robActions_sayText_parameters,naoActions_sayText]
  LIGHT_STATUS_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.light.LightStatusAction
      type: [robActions_brickLight_off,robActions_brickLight_reset,robActions,mbedActions_leds_off,robActions_led_off]
  STOP_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.motor.differential.MotorDriveStopAction
      type: [robActions_motorDiff_stop]
  MAIN_TASK:
      category: TASK
      implementor: de.fhg.iais.roberta.syntax.lang.blocksequence.MainTask
      type: [robControls_start,robControls_start_ardu,mbedcontrols_start]
  ACTIVITY_TASK:
      category: TASK
      implementor: de.fhg.iais.roberta.syntax.lang.blocksequence.ActivityTask
      type: [robControls_activity]
  TEXT_INDEX_OF_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.IndexOfFunct
      type: [lists_indexOf,robLists_indexOf]
  GET_SUB_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.GetSubFunct
      type: [lists_getSublist,robLists_getSublist]
  MATH_SINGLE_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.MathSingleFunct
      type: [math_round,math_trig,math_single]
  MATH_ON_LIST_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.MathOnListFunct
      type: [math_on_list]
  MATH_CONSTRAIN_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.MathConstrainFunct
      type: [math_constrain]
  MATH_RANDOM_INT_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.MathRandomIntFunct
      type: [math_random_int]
  MATH_RANDOM_FLOAT_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.MathRandomFloatFunct
      type: [math_random_float]
  MATH_NUM_PROP_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.MathNumPropFunct
      type: [math_number_property]
  LENGTH_OF_IS_EMPTY_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.LengthOfIsEmptyFunct
      type: [lists_length,robLists_length,lists_isEmpty,robLists_isEmpty]
  TEXT_JOIN_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.TextJoinFunct
      type: [robText_join,text_join]
  TEXT_PRINT_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.TextPrintFunct
      type: [text_print]
  TEXT_COMMENT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.StmtTextComment
      type: [text_comment]
  LIST_REPEAT_FUNCT:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.ListRepeat
      type: [lists_repeat,robLists_repeat]
  LIST_CREATE:
      category: EXPR
      implementor: de.fhg.iais.roberta.syntax.lang.expr.ListCreate
      type: [lists_create_with,robLists_create_with]
  LIST_INDEX_OF:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.ListGetIndex
      type: [lists_getIndex,robLists_getIndex]
  LIST_SET_INDEX:
      category: FUNCTION
      implementor: de.fhg.iais.roberta.syntax.lang.functions.ListSetIndex
      type: [lists_setIndex,robLists_setIndex]
  METHOD_IF_RETURN:
      category: METHOD
      implementor: de.fhg.iais.roberta.syntax.lang.methods.MethodIfReturn
      type: [robProcedures_ifreturn]
  METHOD_VOID:
      category: METHOD
      implementor: de.fhg.iais.roberta.syntax.lang.methods.MethodVoid
      type: [robProcedures_defnoreturn]
  METHOD_CALL:
      category: METHOD
      implementor: de.fhg.iais.roberta.syntax.lang.methods.MethodCall
      type: [robProcedures_callnoreturn,robProcedures_callreturn]
  METHOD_RETURN:
      category: METHOD
      implementor: de.fhg.iais.roberta.syntax.lang.methods.MethodReturn
      type: [robProcedures_defreturn]
  BLUETOOTH_CHECK_CONNECT_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.communication.BluetoothCheckConnectAction
      type: [robCommunication_checkConnection]
  BLUETOOTH_CONNECT_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.communication.BluetoothConnectAction
      type: [robCommunication_startConnection]
  BLUETOOTH_SEND_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.communication.BluetoothSendAction
      type: [robCommunication_sendBlock]
  BLUETOOTH_WAIT_FOR_CONNECTION_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.communication.BluetoothWaitForConnectionAction
      type: [robCommunication_waitForConnection]
  BLUETOOTH_RECEIVED_ACTION:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.communication.BluetoothReceiveAction
      type: [robCommunication_receiveBlock]
  WRITE_TO_SERIAL:
      category: ACTOR
      implementor: de.fhg.iais.roberta.syntax.action.serial.SerialWriteAction
      type: [robActions_serial_print]
  ASSERT_STMT:
      category: STMT
      implementor: de.fhg.iais.roberta.syntax.lang.stmt.AssertStmt
      type: [robActions_assert]
  PARTICLE_SENSOR_GETSAMPLE:
      category: SENSOR
      implementor: de.fhg.iais.roberta.syntax.sensor.generic.ParticleSensor
      type: [robSensors_particle_getSample]
  
wait:
  ACCELERATION :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
        sensor: ACCELERATION
        mode: ACCELERATION
  ACCELEROMETER_VALUE_1 :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
        sensor: ACCELERATION
        mode: DEFAULT
  ACCELEROMETER_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
        sensor: ACCELEROMETER
        mode: DEFAULT
  ACCELEROMETER_X_1 :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
        sensor: ACCELERATION
        mode: X
  ACCELEROMETER_X :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
        sensor: ACCELEROMETER
        mode: X
  ACCELEROMETER_Y_1 :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
        sensor: ACCELERATION
        mode: Y
  ACCELEROMETER_Y :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
        sensor: ACCELEROMETER
        mode: Y
  ACCELEROMETER_Z_1 :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
        sensor: ACCELERATION
        mode: Z
  ACCELEROMETER_Z :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
        sensor: ACCELEROMETER
        mode: Z
  COLOUR_AMBIENTLIGHT :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
        sensor: COLOUR
        mode: AMBIENTLIGHT
  COLOUR_COLOUR :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
        sensor: COLOUR
        mode: COLOUR
  COLOUR_LIGHT :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
        sensor: COLOUR
        mode: LIGHT
  COMPASS_ANGLE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
        sensor: COMPASS
        mode: ANGLE
  COMPASS_COMPASS :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
        sensor: COMPASS
        mode: COMPASS
  COMPASS_X :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
        sensor: COMPASS
        mode: X
  COMPASS_Y :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
        sensor: COMPASS
        mode: Y
  COMPASS_Z :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
        sensor: COMPASS
        mode: Z
  DROP_OFF_DISTANCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.DropSensor
        sensor: DROP_OFF
        mode: DISTANCE
  DROP_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.DropSensor
        sensor: DROP
        mode: VALUE
  ELECTRICCURRENT_VALUE_1 :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.ElectricSensor
        sensor: ELECTRIC_CURRENT
        mode: VALUE
  ENCODER_DEGREE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
        sensor: ENCODER
        mode: DEGREE
  ENCODER_DISTANCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
        sensor: ENCODER
        mode: DISTANCE
  ENCODER_ROTATION :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
        sensor: ENCODER
        mode: ROTATION
  FLAME_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.FlameSensor
        sensor: FLAME
        mode: FLAME_VALUE
  GESTURE_ACTIVE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: GESTURE_ACTIVE, GESTURE_ACTIVE
  GESTURE_DOWN :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: DOWN
  GESTURE_FACE_DOWN :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: FACE_DOWN
  GESTURE_FACE_UP :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: FACE_UP
  GESTURE_FREEFALL :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: FREEFALL
  GESTURE_SHAKE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: SHAKE
  GESTURE_UP :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
        sensor: GESTURE
        mode: UP
  GYRO_ANGLE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
        sensor: GYRO
        mode: ANGLE
  GYRO_RATE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
        sensor: GYRO
        mode: RATE
  GYRO_TILTED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
        sensor: GYRO
        mode: TILTED
  GYRO_X :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
        sensor: GYRO
        mode: X
  GYRO_Y :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
        sensor: GYRO
        mode: Y
  GYRO_Z :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
        sensor: GYRO
        mode: Z
  HUMIDITY_HUMIDITY :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor
        sensor: HUMIDITY
        mode: HUMIDITY
  HUMIDITY_TEMPERATURE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor
        sensor: HUMIDITY
        mode: TEMPERATURE
  INFRARED_AMBIENTLIGHT :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
        sensor: LIGHT
        mode: AMBIENTLIGHT
  INFRARED_DISTANCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: DISTANCE
  INFRARED_OBSTACLE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: OBSTACLE
  INFRARED_PRESENCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: PRESENCE
  INFRARED_SEEK :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: SEEK
  INFRARED_LINE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: LINE
  INFRARED_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: VALUE
  INFRARED_REFLEXION :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
        sensor: INFRARED
        mode: REFLEXION
  IRSEEKER_MODULATED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.IRSeekerSensor
        sensor: IRSEEKER
        mode: MODULATED
  IRSEEKER_UNMODULATED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.IRSeekerSensor
        sensor: IRSEEKER
        mode: UNMODULATED
  KEY_PRESSED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.KeysSensor
        sensor: KEY_PRESSED
        mode: PRESSED
  LIGHT_AMBIENTLIGHT :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
        sensor: LIGHT
        mode: AMBIENTLIGHT
  LIGHT_LEVEL :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
        sensor: LIGHT_LEVEL
        mode: LIGHT_LEVEL
  LIGHT_LIGHT :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
        sensor: LIGHT
        mode: LIGHT
  LIGHT_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
        sensor: LIGHT_VALUE
        mode: LIGHT_VALUE
  LIGHTVEML_LIGHT:
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.VemlLightSensor
        sensor: LIGHTVEML_LIGHT
        mode: LIGHT
  LIGHTVEML_UVLIGHT:
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.VemlLightSensor
        sensor: LIGHTVEML_LIGHT
        mode: UVLIGHT
  MICROPHONE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.MicrophoneSensor
        sensor: MICROPHONE
        mode: MICROPHONE
  MOISTURE_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.MoistureSensor
        sensor: MOISTURE
        mode: VALUE
  MOTION_PRESENCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.MotionSensor
        sensor: MOTION
        mode: PRESENCE
  ORIENTATION :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.OrientationSensor
        sensor: ORIENTATION
        mode: ORIENTATION
  PINTOUCH_PRESSED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinTouchSensor
        sensor: PINTOUCH
        mode: PRESSED
  PIN_ANALOG :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
        sensor: PIN_ANALOG
        mode: ANALOG
  PIN_DIGITAL :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
        sensor: PIN_DIGITAL
        mode: DIGITAL
  OUT_ANALOG :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
        sensor: PIN_ANALOG
        mode: ANALOG
  OUT_DIGITAL :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
        sensor: PIN_DIGITAL
        mode: DIGITAL
  PIN_PULSEHIGH :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
        sensor: PIN_PULSEHIGH
        mode: PULSEHIGH
  PIN_PULSELOW :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
        sensor: PIN_PULSELOW
        mode: PULSELOW
  PIN_TOUCHED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinTouchSensor
        sensor: PIN_TOUCHED
        mode: PIN_TOUCHED
  POTENTIOMETER_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.VoltageSensor
        sensor: POTENTIOMETER
        mode: VALUE
  PULSE_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.PulseSensor
        sensor: PULSE
        mode: VALUE
  RFID_PRESENCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor
        sensor: RFID
        mode: PRESENCE
  RFID_IDONE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor
        sensor: RFID
        mode: IDONE
  SOUND :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor
        sensor: SOUND
        mode: VALUE
  SOUND_SOUND :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor
        sensor: SOUND
        mode: SOUND
  TEMPERATURE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
        sensor: TEMPERATURE
        mode: TEMPERATURE
  TEMPERATURE_PRESSURE:
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
        sensor: TEMPERATURE
        mode: PRESSURE
  TEMPERATURE_TEMPERATURE:
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
        sensor: TEMPERATURE
        mode: TEMPERATURE
  TEMPERATURE_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
        sensor: TEMPERATURE
        mode: TEMPERATURE
  TIME :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor
        sensor: TIME
        mode: VALUE
  TIMER_VALUE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor
        sensor: TIME
        mode: VALUE
  TOUCH :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor
        sensor: TOUCH
        mode: TOUCH
  TOUCH_PRESSED :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor
        sensor: TOUCH
        mode: PRESSED
  ULTRASONIC_DISTANCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor
        sensor: ULTRASONIC
        mode: DISTANCE
  ULTRASONIC_PRESENCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor
        sensor: ULTRASONIC
        mode: PRESENCE
  WALL_DISTANCE :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.WallSensor
        sensor: WALL
        mode: DISTANCE
  WALL_DISTANCE_1 :
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.WallSensor
        sensor: WALL
        mode: DISTANCE
  PARTICLE_PM25:
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.ParticleSensor
        sensor: PARTICLE
        mode: PM25
  PARTICLE_PM10:
        implementor: de.fhg.iais.roberta.syntax.sensor.generic.ParticleSensor
        sensor: PARTICLE
        mode: PM10

mode:
  accelerometer: [DEFAULT,VALUE]
  axis: [DEFAULT,STRENGTH,VALUE,X,Y,Z]
  color: [AMBIENTLIGHT,COLOUR,DEFAULT,RED,RGB]
  compass: [ANGLE,CALIBRATE,COMPASS,DEFAULT,VALUE]
  drop: [VALUE]
  encoder: [DEFAULT,DEGREE,DISTANCE,RESET,ROTATION]
  gesture: [DOWN,FACE_DOWN,FACE_UP,FREEFALL,G3,G6,G8,LEFT,SHAKE,UP,VALUE]
  gyro: [ANGLE,RATE,DEFAULT,RESET,TILTED,VALUE,X,Y,Z]
  humidity: [HUMIDITY,TEMPERATURE,VALUE]
  temperature: [TEMPERATURE, PRESSURE]
  infrared: [AMBIENTLIGHT,DEFAULT,DISTANCE,OBSTACLE,PRESENCE,SEEK,LINE,MODULATED,UNMODULATED,VALUE,REFLEXION, RCCODE, EDISON_CODE]
  keys: [PRESSED,WAIT_FOR_PRESS,WAIT_FOR_PRESS_AND_RELEASE]
  light: [AMBIENTLIGHT,DEFAULT,LEFT,LIGHT,LIGHT_VALUE,RED,RIGHT,VALUE]
  lightveml: [UVLIGHT,LIGHT]
  moisture: [VALUE,PRESENCE,VALUE]
  pinpull: [DOWN,NONE,UP]
  pinvalue: [ANALOG,DEFAULT,DIGITAL,PULSEHIGH,PULSELOW]
  pulse: [VALUE]
  rfid: [PRESENCE,SERIAL,VALUE]
  detect: [NAMEONE,IDONE,IDALL,NAMEALL]
  sound: [SOUND]
  particle: [PM25, PM10]
  
configuration:
  ACCELEROMETER: [robBrick_accelerometer, robConf_accelerometer]
  ANALOG_PIN: [robActions_write_to_pin, robConf_analogout]
  DIGITAL_PIN: [robConf_digitalout]
  ANALOG_INPUT: [robConf_analogin]
  DIGITAL_INPUT: [robConf_digitalin] 
  ARDU: [robBrick_motor_ardu]
  BUTTON: [robBrick_key_]
  BUZZER: [robConf_buzzer, robActions_play_tone]
  COLOR: [robBrick_colour]
  COMPASS: [robBrick_compass, robConf_compass]
  DETECT_MARK: [naoSensors_naoMark]
  DROP: [robConf_drop, robBrick_drop]
  ENCODER: [robConf_encoder, robBrick_encoder]
  EXTERNAL_LED: [robBrick_led]
  FLAMESENSOR: [robBrick_flame]
  GEARED_MOTOR: [robBrick_motor_geared]
  GYRO: [robConf_gyro, robBrick_gyro]
  HT_COLOR: [robBrick_HiTechnic_colour, robBrick_htcolour]
  HUMIDITY: [robConf_humidity, robBrick_humidity]
  INFRARED: [robConf_infrared, robBrick_infrared]
  IRSEEKER: [robBrick_irseeker]
  JOYSTICK: [arduSensors_joystick_getSample]
  KEY: [robConf_key, robBrick_key]
  LARGE: [robBrick_motor_big]
  LCD: [robConf_lcd]
  LCDI2C: [robConf_lcdi2c]
  LED: [robConf_led]
  LED_MATRIX: [robBrick_led_matrix]
  LED_ON_BOARD: [makeblockActions_leds_on]
  LIGHT: [robConf_light, robBrick_light]
  LIGHTVEML: [robConf_lightveml]
  MEDIUM: [robBrick_motor_middle]
  MOISTURE: [robConf_moisture, robBrick_moisture]
  MOTION: [robConf_motion, robBrick_motion]
  MOTOR: [robConf_motor]
  OTHER: [robBrick_actor]
  PIN_VALUE: [robSensors_pin_getSample]
  POTENTIOMETER: [robConf_potentiometer]
  PULSE: [robConf_pulse, robBrick_pulse]
  RELAY: [robConf_relay]
  RFID: [robConf_rfid, robBrick_rfide]
  RGBLED: [robConf_rgbled]
  SERVOMOTOR: [robConf_servo]
  SOUND: [robBrick_sound, robConf_sound]
  STEPMOTOR: [robConf_stepmotor]
  TEMPERATURE: [robConf_temperature, robBrick_temperature]
  TIMER: [robBrick_timer]
  TOUCH: [robBrick_touch]
  ULTRASONIC: [robConf_ultrasonic, robBrick_ultrasonic]
  WEDO: [robBrick_WeDo-Brick]
  WIRELESS: [robConf_wireless]
  PARTICLE: [robConf_particle]
