define(["require","exports","guiState.controller","neuralnetwork.ui","jquery","util.roberta","jquery-validate"],(function(a,n,t,e,r,N){function o(a){void 0===a&&(a=null),e.saveNN2Blockly(a),e.resetUiOnTerminate()}function i(){var a,n=N.getTheStartBlock();try{a=JSON.parse(n.data)}catch(a){}e.setupNN(a)}function s(){i(),e.runNNEditor(t.hasSim())}function b(){i(),e.runNNEditorForTabLearn(t.hasSim())}Object.defineProperty(n,"__esModule",{value:!0}),n.reloadViews=n.mkNNfromNNStepDataAndRunNNEditorForTabLearn=n.mkNNfromNNStepDataAndRunNNEditor=n.mkNNfromProgramStartBlock=n.saveNN2Blockly=n.programWasReplaced=n.init=void 0,n.init=function(){r("#tabNN").onWrap("show.bs.tab",(function(a){r("#nn").show(),t.setView("tabNN")}),"show tabNN"),r("#tabNN").onWrap("shown.bs.tab",(function(a){t.setProgramSaved(!1),s()}),"shown tabNN"),r("#tabNN").onWrap("hide.bs.tab",(function(a){o(),r("#nn").hide()}),"hide tabNN"),r("#tabNN").onWrap("hidden.bs.tab",(function(a){}),"hidden tabNN"),r("#tabNNlearn").onWrap("show.bs.tab",(function(a){r("#nn-learn").show(),t.setView("tabNNlearn")}),"show tabNNlearn"),r("#tabNNlearn").onWrap("shown.bs.tab",(function(a){t.setProgramSaved(!1),b()}),"shown tabNNlearn"),r("#tabNNlearn").onWrap("hide.bs.tab",(function(a){o(),r("#nn-learn").hide()}),"hide tabNNlearn"),r("#tabNNlearn").onWrap("hidden.bs.tab",(function(a){}),"hidden tabNNlearn")},n.programWasReplaced=function(){e.programWasReplaced(),e.resetUserInputs()},n.saveNN2Blockly=o,n.mkNNfromProgramStartBlock=i,n.mkNNfromNNStepDataAndRunNNEditor=s,n.mkNNfromNNStepDataAndRunNNEditorForTabLearn=b,n.reloadViews=function(){e.resetSelections(),e.drawNetworkUIForTabDefine(!1),e.drawNetworkUIForTabLearn(!1)}}));
//# sourceMappingURL=nn.controller.js.map
//# sourceMappingURL=nn.controller.js.map
