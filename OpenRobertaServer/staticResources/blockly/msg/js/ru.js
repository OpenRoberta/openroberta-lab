// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ru');

goog.require('Blockly.Msg');

Blockly.Msg.ABOUT = "about";  // untranslated
Blockly.Msg.ACCELERATION_TOOLTIP = "Получить ускорение в галах";
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACCELEROMETER_TOOLTIP = "Represents an accelerometer.";  // untranslated
Blockly.Msg.ACTION_ANALOGIN = "actuator analog";  // untranslated
Blockly.Msg.ACTION_BUZZER = "buzzer";  // untranslated
Blockly.Msg.ACTION_BUZZER_ARDUINO = "buzzer HYT120";  // untranslated
Blockly.Msg.ACTION_DIGITALIN = "actuator digital";  // untranslated
Blockly.Msg.ACTION_EVAL = "eval";  // untranslated
Blockly.Msg.ACTION_EVAL_AS = "as";  // untranslated
Blockly.Msg.ACTION_IN = "actuator";  // untranslated
Blockly.Msg.ACTION_INFRARED = "infrared emitter";  // untranslated
Blockly.Msg.ACTION_LCD = "LCD 1602";  // untranslated
Blockly.Msg.ACTION_LCDI2C = "LCD 1602 I²C";  // untranslated
Blockly.Msg.ACTION_LCDI2C_SENSEBOX = "OLED Display I²C";  // untranslated
Blockly.Msg.ACTION_LED = "LED";  // untranslated
Blockly.Msg.ACTION_MOTOR = "motor";  // untranslated
Blockly.Msg.ACTION_PLAY = "play";  // untranslated
Blockly.Msg.ACTION_PLOTTING = "plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR = "clear the plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR_TOOLTIP = "Removes all the data from the plot.";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT = "plot a point on";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT_TOOLTIP = "Plots a point with specified value (Y axis) at the specified tickmark (X axis).";  // untranslated
Blockly.Msg.ACTION_PLOT_TICKMARK = "at tickmark";  // untranslated
Blockly.Msg.ACTION_RELAY = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.ACTION_RGBLED = "RGB LED";  // untranslated
Blockly.Msg.ACTION_SDCARD = "SD card";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT = "show on Serial Monitor";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT_TOOLTIP = "Show data on the Serial Monitor. You can find the Serial Monitor in the USB Programm on top, under View.";  // untranslated
Blockly.Msg.ACTION_SERVO = "servo motor";  // untranslated
Blockly.Msg.ACTION_SERVO_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.ACTION_STEPMOTOR = "step motor";  // untranslated
Blockly.Msg.ACTION_WIRELESS = "WiFi connection.";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "Маркер дополнительной активности.";
Blockly.Msg.ACTOR_ANALOGIN_TOOLTIP = "Writes an analog value (PWM wave) to a pin. Only values between 0 and 255 should be used";  // untranslated
Blockly.Msg.ACTOR_DIGITALIN_TOOLTIP = "Writes a HIGH or a LOW value to a digital pin. Only the values HIGH »1« and LOW »0« should be used.";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "Представляет любой актор.";
Blockly.Msg.ADDRESS = "address";  // untranslated
Blockly.Msg.ADD_COMMENT = "Добавить комментарий";
Blockly.Msg.ANALOG = "аналог";
Blockly.Msg.ANALOGIN_TOOLTIP = "Represents any actuator connected to an analog pin.";  // untranslated
Blockly.Msg.ANALOGOUT_TOOLTIP = "Represents any sensor connected to an analog pin.";  // untranslated
Blockly.Msg.AND = "and";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Представляет плату Bot'n Roll c подключенными актюаторами и датчиками. Также доступны  встроенные акторы и датчики, такие как кнопки, дисплей и прочие.";
Blockly.Msg.AUTH = "Пожалуйста, авторизуйте это приложение, чтоб можно было сохранять вашу работу и чтобы дать возможность вам делиться ей.";
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";  // untranslated
Blockly.Msg.BELOW = "below";  // untranslated
Blockly.Msg.BLOCK_NOT_EXECUTED = "Выполнение этого блока не принесет никакого результата!";
Blockly.Msg.BLOCK_NOT_SUPPORTED = "This robot does not support this block!";  // untranslated
Blockly.Msg.BLOCK_USED_INCORRECTLY = "Unfortunately, this block cannot be used in this way.";  // untranslated
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Возвращает сохраненное ранее число.";
Blockly.Msg.BOB3_RECALL_NUMBER = "вспомнить число";
Blockly.Msg.BOB3_REMEMBER_NUMBER = "запомнить число";
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "Сохраняемое число должно быть целым и находиться в диапазоне от 0 до 255.";
Blockly.Msg.BOTH = "оба";
Blockly.Msg.BOX_ID = "Device ID";  // untranslated
Blockly.Msg.BRICKLIGHT = "подсветка программного блока";
Blockly.Msg.BRICKLIGHT_BLUE = "синий";
Blockly.Msg.BRICKLIGHT_COLOR = "цвет";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "дойное мигание";
Blockly.Msg.BRICKLIGHT_FLASH = "мигание";
Blockly.Msg.BRICKLIGHT_GREEN = "зеленый";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Выключить подсветку программного  блока";
Blockly.Msg.BRICKLIGHT_ON = "включить";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Включить подсветку программного  блока";
Blockly.Msg.BRICKLIGHT_ORANGE = "оранжевый";
Blockly.Msg.BRICKLIGHT_RED = "красный";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Сбрасывает подсветку программного блока: зеленый и мигание.";
Blockly.Msg.BRICKNAME_WEDO = "WeDo";  // untranslated
Blockly.Msg.BRICK_IPADDRESS = "ip address";  // untranslated
Blockly.Msg.BRICK_PASSWORD = "password";  // untranslated
Blockly.Msg.BRICK_PHENOMENON = "Phenomenon";  // untranslated
Blockly.Msg.BRICK_PORT = "port";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "ширина колеи";
Blockly.Msg.BRICK_USERNAME = "user name";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "диаметр колеса";
Blockly.Msg.BRUSH_OFF = "turn brush Off";  // untranslated
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Turns the brush off.";  // untranslated
Blockly.Msg.BRUSH_ON = "turn brush on (RPM)";  // untranslated
Blockly.Msg.BRUSH_ON_TOOLTIP = "Turns on the brush with RPM of the motor (0<=RPM<=10000)";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Поделиться";
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Загрузить »$« в галлерею";
Blockly.Msg.BUTTON_EMPTY_LIST = "Пустой список";
Blockly.Msg.BUZZER_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Представляет плату Calliope -- карманный программируемый компьютер. У него есть  встроенные акторы и датчики, такие как кнопки, дисплей и прочее.";
Blockly.Msg.CB_ALL = "Calli:bot all";  // untranslated
Blockly.Msg.CB_BOTH = "Calli:bot both";  // untranslated
Blockly.Msg.CB_LEFT = "Calli:bot left";  // untranslated
Blockly.Msg.CB_RIGHT = "Calli:bot right";  // untranslated
Blockly.Msg.CENTER = "Центр";
Blockly.Msg.CHANGE_VALUE_TITLE = "Измените значение:";
Blockly.Msg.CHAT = "Общайтесь со своим коллегой, печатая в этом поле!";
Blockly.Msg.CLEAN_UP = "Убрать блоки";
Blockly.Msg.CLEAR = "clear";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Свернуть блоки";
Blockly.Msg.COLLAPSE_BLOCK = "Свернуть блок";
Blockly.Msg.COLON = "colon";  // untranslated
Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = "Gets the current ambient light reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "цвет 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "цвет 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "доля цвета 1";
Blockly.Msg.COLOUR_BLEND_TITLE = "смешать";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP = "Gets the current colour reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP = "Gets the current brightness reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ru.wikipedia.org/wiki/Цвет";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Выберите цвет из палитры.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "случайный цвет";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Выбирает цвет случайным образом.";
Blockly.Msg.COLOUR_RGB_BLUE = "синего";
Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP = "Gets the current colour reading from the colour sensor. Values are in the range 0 to 255.";  // untranslated
Blockly.Msg.COLOUR_RGB_GREEN = "зелёного";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "красного";
Blockly.Msg.COLOUR_RGB_TITLE = "цвет из";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Создаёт цвет с указанной пропорцией  красного, зеленого и синего.  Все значения должны быть между 0 и 255.";
Blockly.Msg.COLOUR_RGB_WHITE = "белый";
Blockly.Msg.COLOUR_TOOLTIP = "Представляет датчик цвета.";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Calibrates the compass. Turn the compass sensor VERY slowly for two times (about 40 seconds).";  // untranslated
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Представляет компас.";
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Represents a HiTechnic NXT compass sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_ACTOR_MISSING = "This actuator is not configured. Please add the corresponding block in the configuration tab!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "Разное направление вращения на левом и правом моторах!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "В конфигурации отсутствует левый мотор!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Левый мотор не регулирован!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "На заданном порте отсутствует мотор!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "В конфигурации отсутствует правый мотор!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Правый мотор не регулирован!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "В Вашей конфигурации присутствует более одного левого мотора!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "В Вашей конфигурации присутствует более одного правого мотора!";
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Other power consumer does not support this type of block!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_OVERLAPPING_PORTS = "Another component is already using the same port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "Этот датчик не поделючен к порту!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "К данному порту подключен неподходящий датчик!";
Blockly.Msg.CONFIGURATION_ERROR_WLAN_CREDENTIALS_MISSING = "Missing WLAN credentials, please enter them in robot -> WLAN credentials ... !";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_WLAN_MISSING = "WiFi is not configured. Please add the corresponding block in the configuration tab!";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PHENOMENON = "no phenomenon";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PORT = "no port";  // untranslated
Blockly.Msg.CONFIGURATION_PORT = "Port1";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Нажмите здесь чтобы удалить все выбранные программы.";
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Нажмите здесь чтобы удалить вашу конфигурацию робота.";
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Нажмите здесь чтоюы загрузить вашу конфигурацию робота в среду конфигураций.";
Blockly.Msg.CONNECTION_CHECK = "Активно ли подключение к роботу %1?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Проверить активно ли подключение к роботу.";
Blockly.Msg.CONNECTION_CONNECT = "Подключиться к роботу использую имя";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "от соединения";
Blockly.Msg.CONNECTION_FROM_ROBOT = "от робота";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Считывает сообщение через один из каналов (0-255). Канал по умолчанию -- 0.";
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Посылает сообщение другой системе. Вы можете указать силу сигнла от 1 до 7, где 0 -- очень слабый и 7 -- самая сильный сигнал. Сообщение посылается через нулевой канал если канал не был указан. ";
Blockly.Msg.CONNECTION_OVER_CHANNEL = "используя канал";
Blockly.Msg.CONNECTION_POWER = "с силой";
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";
Blockly.Msg.CONNECTION_RECEIVED_DATA = "Получить сообщение";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Ждет заданного вами в соединении сообщения от робота.";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_BOB3 = "Reads a message via the IR receiver. Only numbers can be received.";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_MBOT = "Reads a message from the IR receiver. Only strings can be received.";  // untranslated
Blockly.Msg.CONNECTION_SEND_DATA = "Послать сообщение";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Посылает сообщение другому роботу.";
Blockly.Msg.CONNECTION_SEND_TOOLTIP_BOB3 = "Sends a message of type number to another Bob3. Hold the Bob3's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SEND_TOOLTIP_MBOT = "Sends a message of type string to another mBot. Hold the mBots's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL = "Установить канал на 1%";
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Устанавливает канал для отсылки и отправления и принятия сообщений. Канал должен быть в диапазоне 0-255.";
Blockly.Msg.CONNECTION_START_TOOLTIP = "Пытается установить Bluetooth-соединение с другим роботом.";
Blockly.Msg.CONNECTION_TOOLTIP = "Соединение робота";
Blockly.Msg.CONNECTION_TO_CONNECTION = "к соединению";
Blockly.Msg.CONNECTION_TO_ROBOT = "к роботу";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "ждать соединения";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Ждет Bluetooth-соединения.";
Blockly.Msg.CONNECTOR = "hub";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "выйти из цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "перейти к следующему шагу цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Прерывает этот цикл.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Пропускает остаток цикла и переходит к следующему шагу.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Предупреждение: этот блок может использоваться только внутри цикла.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "для каждого элемента %1 в списке %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "цикл по %1 от %2 до %3 с шагом %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Добавляет условие к блоку \"если\"";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Добавить заключительный подблок для случая, когда все условия ложны.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "иначе";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "иначе если";
Blockly.Msg.CONTROLS_IF_MSG_IF = "если";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Если условие истинно, выполняет команды.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "выполнить";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "повторить %1 раз";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Выполняет некоторые команды несколько раз.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "повторять, пока не";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "повторять, пока";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Пока значение ложно, выполняет команды";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Пока значение истинно, выполняет команды.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Дата актуализации";
Blockly.Msg.DATATABLE_CONFIGURATIONS = "конфигурации";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Название конфигурации";
Blockly.Msg.DATATABLE_CREATED_BY = "Создатель";
Blockly.Msg.DATATABLE_CREATED_ON = "Дата создания";
Blockly.Msg.DATATABLE_MEMBERS = "members";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "программы";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Название программы";
Blockly.Msg.DATATABLE_SHARED = "Предоставленный для общего доступа";
Blockly.Msg.DATATABLE_SHARED_PROGRAMS = "shared programs";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Предоставить доступ";
Blockly.Msg.DATATABLE_USERGROUP = "user group";  // untranslated
Blockly.Msg.DATATABLE_USERGROUPS = "user groups";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_NAME = "Name of the user group";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_NAME_CREATE_HINT = "The name of the user group. Kepp in mind, that the members will have to type it in each time they log in.";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_OWNER = "Name of the owner of the user group";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Удалить все блоки (%1)?";
Blockly.Msg.DELETE_BLOCK = "Удалить блок";
Blockly.Msg.DELETE_USERGROUP_MEMBER_AFTER_LOGIN_WARNING = "A member you want to delete did already log in and might have create own programs. Are you sure that you want to delete the selected member(s)?";  // untranslated
Blockly.Msg.DELETE_USERGROUP_MEMBER_WARNING = "Are you sure that you want to delete the selected member(s)?";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "Удалить %1 блоков";
Blockly.Msg.DIGITAL = "цифровой";
Blockly.Msg.DIGITALIN_TOOLTIP = "Represents any actuator connected to a digital pin.";  // untranslated
Blockly.Msg.DIGITALOUT_TOOLTIP = "Represents any sensor connected to a digital.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Отключить блок";
Blockly.Msg.DISPLAY_ANIMATION = "анимация";
Blockly.Msg.DISPLAY_CHARACTER = "знак";
Blockly.Msg.DISPLAY_CLEAR = "очистить дисплей";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Очищает дисплей.";
Blockly.Msg.DISPLAY_COL = "в колонке";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Возвращает яркость всех светодиодов дисплея. 0 означает что все светодиоды выключены, 9 -- все светодиоды включены на полную яркость.";
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Возвращает яркость для данного светодиода. 0 означает что светодиот выключен, 9 -- включен на полную яркость.";
Blockly.Msg.DISPLAY_IMAGE = "изображение";
Blockly.Msg.DISPLAY_PICTURE = "картинка";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "глаза закрыты";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "глаза открыты";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "цветы";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "очки";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "тахо";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Выводит картинку на экран.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "яркость";
Blockly.Msg.DISPLAY_PIXEL_TITLE = "светодиод";
Blockly.Msg.DISPLAY_ROW = "в строке";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Устанавливает яркость всех светодиодов дисплея. 0 означает что светодиоды выключены, 9 -- включены на полную яркость.";
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Устанавливает яркость данного светодиода. 0 означает что светодиод выключен, 9 -- включен на полную яркость.";
Blockly.Msg.DISPLAY_SHOW = "показать";
Blockly.Msg.DISPLAY_TEXT = "текст";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Выводит текст на экран.";
Blockly.Msg.DROP_TOOLTIP = "Represents a drop sensor.";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Скопировать";
Blockly.Msg.ENABLE_BLOCK = "Включить блок";
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Сбрасывает энкодер.";
Blockly.Msg.ENCODER_TOOLTIP = "Represents an encoder.";  // untranslated
Blockly.Msg.ERROR_MISSING_PARAMETER = "An input value is missing!";  // untranslated
Blockly.Msg.ERROR_MISSING_RETURN = "The function return value is missing!";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "Представляет программный блок EV3 с подключенными актюаторами и датчик. Также доступны встроенные актюаторы и сенсоры, такие как кнопки, дисплей и прочие.";
Blockly.Msg.EXPAND_ALL = "Развернуть блоки";
Blockly.Msg.EXPAND_BLOCK = "Развернуть блок";
Blockly.Msg.EXTERNAL_INPUTS = "Вставки снаружи";
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Представляет датчик пламени.";
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "Вы хотите создать переменную? Пожалуйста, сначала объявите ее  нажав знак \"+\" в меню \"Старт\"\u00a0block..";
Blockly.Msg.FOR = "для";
Blockly.Msg.FOURDIGITDISPLAY = "4-Digit Display";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Clears the 4-Digit Display.";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Displays a number [0-9999] on the 4-Digit Display. Position [0-3] represents the starting position of the number";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_TOOLTIP = "Represents a Grove 4-Digit Display by Seeed";  // untranslated
Blockly.Msg.FROM_POSITION = "from position";  // untranslated
Blockly.Msg.FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.GALLERY_BY = "по";
Blockly.Msg.GALLERY_DATE = "создана";
Blockly.Msg.GALLERY_DISLIKE = "не нравится";
Blockly.Msg.GALLERY_LIKE = "нравится";
Blockly.Msg.GALLERY_SHARED_ALREADY = "Вы уже загрузили эту программу в галлерею. Вы можете загрузить эту программу из галлереи и изменить ее.  Вы можете так же удалить программу из галлереи.";
Blockly.Msg.GEARED_MOTOR = "geared motor";  // untranslated
Blockly.Msg.GET = "вернуть";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Возвращает текущее показание выбранного датчика.";
Blockly.Msg.GET_CODE_TOOLTIP = "Возвращает значение (0-31) на кодпаде на голове робота.";
Blockly.Msg.GO_TO_GROUPS = "Перейти к группам";
Blockly.Msg.GPS_TOOLTIP = "Represents a GPS receiver.";  // untranslated
Blockly.Msg.GROUP_CREATE_NAME_HINT = "Please keep in mind, that all members of a group have to enter the group name on each login. It should neither be complicated nor long.";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "Сбрасывает гиросенсор.";
Blockly.Msg.GYRO_TOOLTIP = "Представляет гиросенсор.";
Blockly.Msg.GYRO_TOOLTIP_WEDO = "Represents a tilt sensor.";  // untranslated
Blockly.Msg.HELP = "Справка";
Blockly.Msg.HINT_USERGROUP_MEMBER = "Enter the member id of your user here. It should be a two digit number.";  // untranslated
Blockly.Msg.HINT_USERGROUP_OWNER = "Do <strong>not</strong> enter the real name of the owner of the user group here, but his <strong>username</strong> instead.";  // untranslated
Blockly.Msg.HINT_USER_ACCOUNT = "\"ЯБотман\" или \"РобеллаСтрачителла\"? Не всем нужно знать ваше настоящее имя. Придумайте себе классный ник, который будет легко запомнить.";
Blockly.Msg.HINT_USER_AGE = "Вы моложе 16? В этом случае попросите пожалуйста ваших родителей помочь вам. Они могут указать их email чтобы подтведить ваш аккаунт.";
Blockly.Msg.HINT_USER_EMAIL = "Это добровольно! Однако, некоторый функции нашего сайта доступны только пользователям с подтвержденным email адресом.  <br><a href=\"https://www.roberta-home.de/index.php?id=138&L=1\" target=\"_blank\">Дальнейшая информация ...</a>";
Blockly.Msg.HINT_USER_NAME = "Здесь вы можете ввести свое настоящее имя. Это только для вас, никто другой его не увидит.";
Blockly.Msg.HINT_USER_PASSWORT = "12345 -- не безопасный пароль. Придумайте новый.";
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Повторите пароль.";
Blockly.Msg.HTCOLOUR_TOOLTIP = "Represents a HiTechnic NXT Color Sensor V2.";  // untranslated
Blockly.Msg.HUMIDITY_TOOLTIP = "Represents a humidity sensor.";  // untranslated
Blockly.Msg.ICON_BLOCKING_TOOLTIP = "Blocking block! This blocks needs some time to be executed, so other's have to wait until it gives back the control to the caller function.";  // untranslated
Blockly.Msg.ID = "ID";  // untranslated
Blockly.Msg.IF_TOOLTIP = "Проверяет увловие »если«. Если условие выполняется, выполняет действие в условном блоке.";
Blockly.Msg.IMAGE_GET_TOOLTIP = "Возвращает выбранное изображение.";
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "злой";
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "спящий";
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "бабочка";
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "шахматная доска";
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "в недоумении";
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "корова";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "бриллиант";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "маленький бриллиант";
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "утка";
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "потрясающий";
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "призрак";
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "жираф";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "сердце";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "маленькой сердце";
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "дом";
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "бе!";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "четвертная нота";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "восьмая нота";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "восьмые ноты";
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "нет";
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "Pacman";
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "вилы";
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "кролик";
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "роликовые коньки";
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "печальный";
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "глупый";
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "череп";
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "улыбка";
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "змея";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "квадрат";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "маленький квадрат";
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "человечек";
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "меч";
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "цель";
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "черепаха";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "треугольник";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "левый треугольник";
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "футбока";
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "зонт";
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "рождество";
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "да";
Blockly.Msg.IMAGE_INVERT = "инвертировать";
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Инвертирует изображение. Каждому нулевому пикселю будет присвоено значение # или 9 и наоборот: кажлому пикселю со значением 9 или # -- 0. ";
Blockly.Msg.IMAGE_SHIFT = "сдвиг";
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Сдвигает изображение в указанном направлении на заданное количество пикселей";
Blockly.Msg.IMAGE_TOOLTIP = "Создает изображение. Вы можете указать яркость каждого пикселя в диапазоне от 0 до 9 или #, где 0 означает отсутствие света,  а 9 или # -- самый яркий свет.";
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Document your program here ...";  // untranslated
Blockly.Msg.INFO_TAGS = "Tags";  // untranslated
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gets the current relative distance from the infrared sensor. The values are between 1 and 75 cm.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the light sensor -- if a black line is detected (true/false).";  // untranslated
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Returns an array of measurements for the presence of a beacon.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "Представляет инфракрасный датчик.";
Blockly.Msg.INLINE_INPUTS = "Вставки внутри";
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INTERNAL_PORT = "внутренний";
Blockly.Msg.IRSEEKER_TOOLTIP = "Represents a HiTechnic NXT IRSeeker V2 sensor.";  // untranslated
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Получает текущие показатели с одной из осей джойстика";
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.KEY_TOOLTIP = "Represents a button.";  // untranslated
Blockly.Msg.LANGUAGE = "language";  // untranslated
Blockly.Msg.LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.LANGUAGE_DANISH = "Danish";  // untranslated
Blockly.Msg.LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.LANGUAGE_FINNISH = "Finnish";  // untranslated
Blockly.Msg.LANGUAGE_FRENCH = "French";  // untranslated
Blockly.Msg.LANGUAGE_GERMAN = "German";  // untranslated
Blockly.Msg.LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.LANGUAGE_ITALIAN = "Italian";  // untranslated
Blockly.Msg.LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.LANGUAGE_NORWEGIAN = "Norwegian";  // untranslated
Blockly.Msg.LANGUAGE_POLISH = "Polish";  // untranslated
Blockly.Msg.LANGUAGE_PORTUGUESE = "Portuguese";  // untranslated
Blockly.Msg.LANGUAGE_RUSSIAN = "Russian";  // untranslated
Blockly.Msg.LANGUAGE_SPANISH = "Spanish";  // untranslated
Blockly.Msg.LANGUAGE_SWEDISH = "Swedish";  // untranslated
Blockly.Msg.LANGUAGE_TURKISH = "Turkish";  // untranslated
Blockly.Msg.LCDI2C_TOOLTIP = "Represents an LCD 1602 display with a soldered I²C module.";  // untranslated
Blockly.Msg.LCD_TOOLTIP = "Represents an LCD display.";  // untranslated
Blockly.Msg.LED = "LED";  // untranslated
Blockly.Msg.LEDBAR = "LED Bar";  // untranslated
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Sets the specified LED [0-9] on the LED Bar to the given brightness [0-8].";  // untranslated
Blockly.Msg.LEDBAR_TOOLTIP = "Represents a Grove LED Bar v2.0 by Seeed.";  // untranslated
Blockly.Msg.LED_MATRIX = "LED matrix";  // untranslated
Blockly.Msg.LED_OFF = "выключить светодиод";
Blockly.Msg.LED_OFF_TOOLTIP = "Выключает светодиод.";
Blockly.Msg.LED_ON = "включить светодиод";
Blockly.Msg.LED_ON_TOOLTIP = "Включает светодиот и меняет цвет.";
Blockly.Msg.LED_ON_TOOLTIP_CB = "Turns the LED on and changes the color. Attention: calli:Bot only supports 7 different colors, the nearest will be chosen.";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP_EDISON = "Turns the LED on.";  // untranslated
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Включает светодиот. Осторожно, он очень яркий!";
Blockly.Msg.LED_TOOLTIP = "Represents an LED.";  // untranslated
Blockly.Msg.LEFT = "left";  // untranslated
Blockly.Msg.LIGHTVEML_TOOLTIP = "Represents a visible/UV light sensor.";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Представляет 8 датчиков освещения";
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gets the current reading from the light sensor in percent.";  // untranslated
Blockly.Msg.LIGHT_TOOLTIP = "Представляет датчика освещения.";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "создать пустой список";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Возвращает список длины 0, не содержащий данных";
Blockly.Msg.LISTS_CREATE_TITLE = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "создать список из";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Добавляет элемент к списку.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Создаёт список с любым числом элементов.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "первый";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "№ с конца";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "взять";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "взять и удалить";
Blockly.Msg.LISTS_GET_INDEX_LAST = "последний";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "произвольный";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "удалить";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Возвращает элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Удаляет и возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Удаляет и возвращает элемент в указанной позиции списка (№1 -  последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Удаляет и возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Удаляет и возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Удаляет и возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Удаляет первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Удаляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Удаляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Удаляет последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Удаляет случайный элемент списка.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "по № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "по №";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "по последний";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "взять подсписок с первого";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "взять подсписок с № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "взять подсписок с №";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Создаёт копию указанной части списка.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "найти первое вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "найти последнее вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает 0, если элемент не найден.";
Blockly.Msg.LISTS_INLIST = "в списке";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Возвращает значение истина, если список пуст.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "длина %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Возвращает длину списка.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "создать список из элемента %1, повторяющегося %2 раз";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Создаёт список, состоящий из заданного числа копий элемента.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "=";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "вставить в";
Blockly.Msg.LISTS_SET_INDEX_SET = "присвоить";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Вставляет элемент в начало списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Вставляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Вставляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Добавляет элемент в конец списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Вставляет элемент в случайное место в списке.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Присваивает значение первому элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Присваивает значение элементу в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Присваивает значение элементу в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Присваивает значение последнему элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Присваивает значение случайному элементу списка.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "по возрастанию";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "по убыванию";
Blockly.Msg.LISTS_SORT_TITLE = "сортировать %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Сортировать копию списка.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "сделать список из текста";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "собрать текст из списка";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Соединяет сптсок текстов в один текст с разделителями.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Разбивает текст в список текстов, по разделителям.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "с разделителем";
Blockly.Msg.LIST_BACK_TOOLTIP = "Вкрнуться к предыдущему виду.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "ложь";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Возвращает значение истина или ложь.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "истина";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Возвращает значение истина, если вставки равны.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Возвращает значение истина, если первая вставка больше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Возвращает значение истина, если первая вставка больше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Возвращает значение истина, если первая вставка меньше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Возвращает значение истина, если вставки не равны.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "не %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Возвращает значение истина, если вставка ложна.  Возвращает значение ложь, если вставка истинна.";
Blockly.Msg.LOGIC_NULL = "ничто";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Возвращает ничто.";
Blockly.Msg.LOGIC_OPERATION_AND = "и";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "или";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Возвращает значение истина, если обе вставки истинны.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "выбрать по";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "если ложь";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "если истина";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
Blockly.Msg.LOOP = "повторять пока";
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Бесконечно повторять действие.";
Blockly.Msg.LOOP_FOREVER = "повторять бесконечно";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ru.wikipedia.org/wiki/Арифметика";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Возвращает сумму двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Возвращает частное от деления первого числа на второе.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Возвращает разность двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Возвращает произведение двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Возвращает первое число, возведённое в степень второго числа.";
Blockly.Msg.MATH_CAST_TOCHAR = "cast %1 to Char";  // untranslated
Blockly.Msg.MATH_CAST_TOCHAR_TOOLTIP = "Convert this number into a single ASCII character";  // untranslated
Blockly.Msg.MATH_CAST_TOSTRING = "cast %1 to String";  // untranslated
Blockly.Msg.MATH_CAST_TOSTRING_TOOLTIP = "Convert this number into a string.";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
Blockly.Msg.MATH_CHANGE_TITLE = "увеличить %1 на %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Добавляет число к переменной '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ru.wikipedia.org/wiki/Математическая_константа";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "ограничить %1 снизу %2 сверху %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Ограничивает число нижней и верхней границами (включительно).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "делится на";
Blockly.Msg.MATH_IS_EVEN = "чётное";
Blockly.Msg.MATH_IS_NEGATIVE = "отрицательное";
Blockly.Msg.MATH_IS_ODD = "нечётное";
Blockly.Msg.MATH_IS_POSITIVE = "положительное";
Blockly.Msg.MATH_IS_PRIME = "простое";
Blockly.Msg.MATH_IS_TOOLTIP = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
Blockly.Msg.MATH_IS_WHOLE = "целое";
Blockly.Msg.MATH_MODULO_HELPURL = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
Blockly.Msg.MATH_MODULO_TITLE = "остаток от %1 : %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Возвращает остаток от деления двух чисел.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://ru.wikipedia.org/wiki/Число";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Число.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "среднее арифметическое списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "наибольшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "медиана списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "наименьшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "моды списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "случайный элемент списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "стандартное отклонение списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "сумма списка";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Возвращает среднее арифметическое списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Возвращает наибольшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Возвращает медиану списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Возвращает наименьшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Возвращает список наиболее часто встречающихся элементов списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Возвращает стандартное отклонение списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Возвращает сумму всех чисел в списке.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "случайное число от 0 (включительно) до 1";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "случайное целое число от %1 для %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Возвращает случайное число между двумя заданными пределами (включая и их).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://ru.wikipedia.org/wiki/Округление";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "округлить";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "округлить к меньшему";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "округлить к большему";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Округляет число до большего или меньшего.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://ru.wikipedia.org/wiki/Квадратный_корень";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "модуль";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "квадратный корень";
Blockly.Msg.MATH_SINGLE_OP_SQUARE = "square";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Возвращает модуль числа";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Возвращает е в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Возвращает натуральный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Возвращает десятичный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Возвращает противоположное число.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Возвращает 10 в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Возвращает квадратный корень числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_SQUARE = "Return the number multiplied by itself.";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Возвращает арккосинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Возвращает арксинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Возвращает арктангенс (в градусах)";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Возвращает косинус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Возвращает синус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Возвращает тангенс угла в градусах.";
Blockly.Msg.ME = "Мне";
Blockly.Msg.MENU_ABOUT = "об Open Roberta Lab";
Blockly.Msg.MENU_ABOUT_PROJECT = "о проекте  Open Roberta ";
Blockly.Msg.MENU_ATTACH = "присоединить ...";
Blockly.Msg.MENU_BEGINNER = "начинающий";
Blockly.Msg.MENU_CHANGE = "изменить ...";
Blockly.Msg.MENU_CHECK = "проверить";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Загрузить код вашей программы на компьютер";
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Обновить код после изменения NEPO-блока";
Blockly.Msg.MENU_CONNECT = "соеднить ...";
Blockly.Msg.MENU_CREATE_LINK = "создать ссылку на программу ...";
Blockly.Msg.MENU_DEBUG_START_TOOLTIP = "Enter Debugging Mode.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_BREAKPOINT_TOOLTIP = "Step forward to the next breakpoint in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_INTO_TOOLTIP = "Step Into to the next block in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_OVER_TOOLTIP = "Step Over to the next block in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STOP_TOOLTIP = "Exit Debugging Mode.";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "удалить пользователя ...";
Blockly.Msg.MENU_EDIT = "редактировать";
Blockly.Msg.MENU_EDIT_TOOLTIP = "редактировать";
Blockly.Msg.MENU_EV3 = "Подготовка робота";
Blockly.Msg.MENU_EXPERT = "Эксперт";
Blockly.Msg.MENU_EXPORT_PROG = "Экспортировать программу";
Blockly.Msg.MENU_FAQ = "Вопросы и ответы";
Blockly.Msg.MENU_GALLERY = "галлерея";
Blockly.Msg.MENU_GALLERY_TOOLTIP = "галлерея";
Blockly.Msg.MENU_GENERAL = "Общая помощь";
Blockly.Msg.MENU_HELP = "помощь";
Blockly.Msg.MENU_HELP_TOOLTIP = "помощь";
Blockly.Msg.MENU_IMPORT_PROG = "импортировать программу";
Blockly.Msg.MENU_LANGUAGE = "языки";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "языки";
Blockly.Msg.MENU_LIST = "список ...";
Blockly.Msg.MENU_LIST_CONF = "мои конфигурации ...";
Blockly.Msg.MENU_LIST_PROG = "мои программы ...";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "примеры программ ...";
Blockly.Msg.MENU_LOGGING = "выполняется вход";
Blockly.Msg.MENU_LOG_IN = "вход ...";
Blockly.Msg.MENU_LOG_OUT = "выход";
Blockly.Msg.MENU_MANAGE_USERGROUPS = "Manage user groups ...";  // untranslated
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Ваша программа успешно загружена.";
Blockly.Msg.MENU_NEW = "новый ...";
Blockly.Msg.MENU_PROGRAMMING = "программирование с NEPO";
Blockly.Msg.MENU_PROPERTIES = "свойства";
Blockly.Msg.MENU_RESET_FIRMWARE = "reset to factory defaults";  // untranslated
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Open/close the source code view.";  // untranslated
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Открыть/закрыть помощь";
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Открыть/закрыть информацию";
Blockly.Msg.MENU_RIGHT_LEGAL_TOOLTIP = "Open/close the legal information view.";  // untranslated
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Open/close the simulation view.";  // untranslated
Blockly.Msg.MENU_RIGHT_TUTORIAL_TOOLTIP = "open/close the tutorial's view";  // untranslated
Blockly.Msg.MENU_ROBOT = "робот";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "информация";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "информация о роботе";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Press <span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span> buttons on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Press <span class='typcn typcn-media-cancel'></span> button on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "роботы";
Blockly.Msg.MENU_ROBOT_WLAN = "WLAN credentials ...";  // untranslated
Blockly.Msg.MENU_RUN_MULT_SIM = "multiple robot simulation ...";  // untranslated
Blockly.Msg.MENU_SAVE = "сохранить";
Blockly.Msg.MENU_SAVE_AS = "сохранить как ...";
Blockly.Msg.MENU_SHOW_AGAIN = "снова показать приветствие";
Blockly.Msg.MENU_SHOW_CODE = "показать код";
Blockly.Msg.MENU_SIM_BACK = "Назад";
Blockly.Msg.MENU_SIM_DRAW = "Среда для Рисования";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Загрузить ваше собственной изображение для фона симуляции, оно будет добавлено в конец списка фонов.";
Blockly.Msg.MENU_SIM_MATH = "Математическая Среда";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Переместить робота в изначальную позицию.";
Blockly.Msg.MENU_SIM_RESCUE = "Спасательная Среда";
Blockly.Msg.MENU_SIM_ROBERTA = "Среда Роберты";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "открыть/закрыть вид от лица робота";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "изменить среду";
Blockly.Msg.MENU_SIM_SIMPLE = "Простая среда";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Запустить программц в симуляции.";
Blockly.Msg.MENU_SIM_STOP = "Стоп";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Остановить программу в симуляции.";
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Открыть/закрыть окно с показателями датчиков";
Blockly.Msg.MENU_SIM_VARIABLES_TOOLTIP = "Open/close the variable data view.";  // untranslated
Blockly.Msg.MENU_SIM_WRO = "Сцена \"Мировая Олимпиада Роботов\"";
Blockly.Msg.MENU_SOURCE_CODE_EDITOR = "open source code editor";  // untranslated
Blockly.Msg.MENU_START_BRICK = "запустить на программном блоке";
Blockly.Msg.MENU_START_SIM = "запустить в симуляции";
Blockly.Msg.MENU_STATE_INFO = "информация о состоянии";
Blockly.Msg.MENU_STOP_BRICK = "stop program on »$«";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "NEPO-блоки";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-блоки начинающий";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-блоки эксперт";
Blockly.Msg.MENU_TUTORIAL = "tutorials";  // untranslated
Blockly.Msg.MENU_TUTORIAL_TOOLTIP = "tutorials";  // untranslated
Blockly.Msg.MENU_USER = "вход";
Blockly.Msg.MENU_USERGROUP_LOG_IN = "Log in with user group ...";  // untranslated
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "информация и пользователе";
Blockly.Msg.MENU_USER_TOOLTIP = "пользователь";
Blockly.Msg.MENU_WLAN_CREDENTIALS = "WLAN credentials";  // untranslated
Blockly.Msg.MENU_ZOOM = "зум";
Blockly.Msg.MENU_ZOOM_IN = "приблизить";
Blockly.Msg.MENU_ZOOM_OUT = "отдалить";
Blockly.Msg.MENU_ZOOM_RESET = "сбросить зум";
Blockly.Msg.MESSAGE_ADDED_USER = "Пользователь »$« добавлен";
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Конфигурация »$« удалена.";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Ваша программа теперь проверена!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Ваша конфигурация сохранена.";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Ваша конфигурация сохранена как »$«.";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Ваша группа была создана";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Ваша программа сохранена.";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Ваша программа сохранена как »$«.";
Blockly.Msg.MESSAGE_EDIT_START = "Your program »$« will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Обнаружен конфликт между версией прошивки вашего робота и Open Roberta Lab. Пожалуйста. свяжитесь с нами.";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Группа »$« удалена";
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers. The default name »[robot]basis« can't be used here.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Пожалуйста, введите имя пользователя в правильном формате. Имя пользователя должно начинаться с буквы и содержать только буквы и цифры.";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Недоступно";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Программа $ была удалена";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Пожалуйста, повторно соедините Вашего робота с Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "С Вашим роботом $ установлено соединение";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "Активный робот был отсоединен";
Blockly.Msg.MESSAGE_USER_DELETED = "Пользователь удален";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "Пользователь »$« был удален";
Blockly.Msg.MESSAGE_USER_LOGIN = "Привет, »$«";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Вы вышли";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "режим";
Blockly.Msg.MODE_ACCELERATION = "ускорение";
Blockly.Msg.MODE_ALTITUDE = "altitude";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "естественное освещение";
Blockly.Msg.MODE_ANALOG = "analog value";  // untranslated
Blockly.Msg.MODE_ANGLE = "угол";
Blockly.Msg.MODE_CLAP = "clap";  // untranslated
Blockly.Msg.MODE_CLOSE = "закрыть";
Blockly.Msg.MODE_COLOUR = "цвет";
Blockly.Msg.MODE_COMPASS = "compass";  // untranslated
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DATE = "date";  // untranslated
Blockly.Msg.MODE_DEGREE = "градус";
Blockly.Msg.MODE_DIGITAL = "digital value";  // untranslated
Blockly.Msg.MODE_DISTANCE = "расстояние";
Blockly.Msg.MODE_HUMIDITY = "humidity";  // untranslated
Blockly.Msg.MODE_IDALL = "IDs (list)";  // untranslated
Blockly.Msg.MODE_IDONE = "ID";  // untranslated
Blockly.Msg.MODE_INFO = "information";  // untranslated
Blockly.Msg.MODE_LATITUDE = "latitude";  // untranslated
Blockly.Msg.MODE_LIGHT = "свет";
Blockly.Msg.MODE_LINE = "line";  // untranslated
Blockly.Msg.MODE_LONGITUDE = "longitude";  // untranslated
Blockly.Msg.MODE_MODULATED = "modulated";  // untranslated
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
Blockly.Msg.MODE_NAMEALL = "names (list)";  // untranslated
Blockly.Msg.MODE_NAMEONE = "name";  // untranslated
Blockly.Msg.MODE_OBSTACLE = "препятствие";
Blockly.Msg.MODE_OPEN = "открыт";
Blockly.Msg.MODE_ORIENTATION = "ориентация";
Blockly.Msg.MODE_PM10 = "PM10";  // untranslated
Blockly.Msg.MODE_PM25 = "PM2.5";  // untranslated
Blockly.Msg.MODE_PRESENCE = "присутствие";
Blockly.Msg.MODE_PRESSED = "нажата";
Blockly.Msg.MODE_PRESSURE = "pressure";  // untranslated
Blockly.Msg.MODE_PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "скорость";
Blockly.Msg.MODE_RCCODE = "R/C code";  // untranslated
Blockly.Msg.MODE_REFLEXION = "reflected light";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "вращение";
Blockly.Msg.MODE_SENSOR1 = "Light Sensor1";  // untranslated
Blockly.Msg.MODE_SENSOR2 = "Light Sensor2";  // untranslated
Blockly.Msg.MODE_SOUND = "звук";
Blockly.Msg.MODE_SPEED = "speed";  // untranslated
Blockly.Msg.MODE_TEMPERATURE = "temperature";  // untranslated
Blockly.Msg.MODE_TILTED = "tilted";  // untranslated
Blockly.Msg.MODE_TIME = "time";  // untranslated
Blockly.Msg.MODE_UNMODULATED = "unmodulated";  // untranslated
Blockly.Msg.MODE_UVLIGHT = "UV light";  // untranslated
Blockly.Msg.MODE_VALUE = "значение";
Blockly.Msg.MODE_WORD = "word";  // untranslated
Blockly.Msg.MODE_X = "X-value";  // untranslated
Blockly.Msg.MODE_Y = "Y-value";  // untranslated
Blockly.Msg.MODE_Z = "Z-value";  // untranslated
Blockly.Msg.MOISTURE_TOOLTIP = "Represents a moisture sensor.";  // untranslated
Blockly.Msg.MOTIONKIT = "MotionKit";  // untranslated
Blockly.Msg.MOTIONKIT_DUAL_TOOLTIP = "Sets each MotionKit motor to the specified direction.";  // untranslated
Blockly.Msg.MOTIONKIT_SINGLE_TOOLTIP = "Sets the selected MotionKit motor/motors to the specified direction.";  // untranslated
Blockly.Msg.MOTION_TOOLTIP = "Represents a motion sensor.";  // untranslated
Blockly.Msg.MOTOR = "мотор";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Начинает движения робота с определенной скростью и останавливается после того как он пройдет определенное расстояние.";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Начинает движения робота с определенной скростью.";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Останавливает робота.";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Поворачивает робота на определенный угол (в градусах).";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Поворачивает робота.";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE = "Turns motor A and B on with a specific power.";  // untranslated
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE_CB = "Turns both motors on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTORS_STOP_TOOLTIP = "Stops both motors, A and B.";  // untranslated
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Представляет";
Blockly.Msg.MOTOR_BACKWARD = "назад";
Blockly.Msg.MOTOR_BIG = "большой";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Представляет большой моторю";
Blockly.Msg.MOTOR_BRAKE = "тормоз";
Blockly.Msg.MOTOR_DEGREE = "градус";
Blockly.Msg.MOTOR_DISTANCE = "расстояние, см";
Blockly.Msg.MOTOR_DRIVE = "ехать";
Blockly.Msg.MOTOR_FLOAT = "свободное движение";
Blockly.Msg.MOTOR_FOREWARD = "вперед";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Возвращает текущую мозность поданную на мотор.";
Blockly.Msg.MOTOR_LEFT = "левый";
Blockly.Msg.MOTOR_MIDDLE = "средний";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Представляет средний мотор.";
Blockly.Msg.MOTOR_NONE = "ничего";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Включает мотор и останавливает его после поворота на заданное количество оборотов/градусов.";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_MS = "Turns motor on and stops motor after execution after time has passed.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_RPM = "Turns motor on at speed in rpms (rotation per minute) and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_SERVO = "Sets the servo motor to a specific position in degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "Включаеи мотор и подает на него определеннуб мохность.";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Turns motor A, B or A+B on with a specific power.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE_CB = "Turns left or right motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "другой потребитель мощности";
Blockly.Msg.MOTOR_PAN = "рысканье";
Blockly.Msg.MOTOR_PORT = "порт мотора";
Blockly.Msg.MOTOR_PORT_ARDUINO = "motor 28BYJ-48 port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "регулировка";
Blockly.Msg.MOTOR_RIGHT = "правый";
Blockly.Msg.MOTOR_ROTATION = "вращение";
Blockly.Msg.MOTOR_ROTATION_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "направление вращения";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Устанавлевает мощность подаваемую на этот мотор.";
Blockly.Msg.MOTOR_SIDE = "сторона";
Blockly.Msg.MOTOR_SPEED = "скорость";
Blockly.Msg.MOTOR_SPEED_0 = "Скорость мотора равна нулю!";
Blockly.Msg.MOTOR_STEER = "движение по окружности";
Blockly.Msg.MOTOR_STOP = "остановка";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Останавливает этот мотор.";
Blockly.Msg.MOTOR_TILT = "наклон";
Blockly.Msg.MOTOR_TURN = "поворот";
Blockly.Msg.NAO_ABSOLUTE = "абсолютный";
Blockly.Msg.NAO_ACCELEROMETER = "акселерометр";
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";  // untranslated
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation. TaiChi is a complex and artistic set of moves. Blink will only make the robot blink by using its LEDs. The wink and wipe forehead animation can be performed while siting and standing.";  // untranslated
Blockly.Msg.NAO_ANSWER = "ответ";
Blockly.Msg.NAO_APPLYPOSTURE = "let NAO";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot will take the selected posture or position. Use the dropdown menu to choose one.";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS = "автономная жизнь";
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Turn the robots autonomous behaviour on or off. While 'on' the robot will react to sounds, move slightly from side to side and try to track faces. Turn it off if this behaviour interrupts your program.";  // untranslated
Blockly.Msg.NAO_BLINK = "blink";  // untranslated
Blockly.Msg.NAO_CAMERA = "камера";
Blockly.Msg.NAO_CAMERA_BOTTOM = "bottom";  // untranslated
Blockly.Msg.NAO_CAMERA_TOP = "top";  // untranslated
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "Returns additional information about the given detected in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_FILENAME = "имя файла";
Blockly.Msg.NAO_FORGETFACEOF = "забыть лицо";
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Delete a face previously saved under a given name from the vision recognition database on the robot. ";  // untranslated
Blockly.Msg.NAO_FRAME = "каркас";
Blockly.Msg.NAO_FRAME_TORSO = "торс";
Blockly.Msg.NAO_FRAME_WORLD = "мир";
Blockly.Msg.NAO_FSR = "силовой чувствительный резистор";
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Получить громкость.";
Blockly.Msg.NAO_GYROMETER = "гирометр";
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Получить текущее значение гироскопа на данном направлении.";
Blockly.Msg.NAO_HAND = "кисть";
Blockly.Msg.NAO_HAND_TOOLTIP = "Открыть или закрыть одну руку робота.";
Blockly.Msg.NAO_HEADSENSOR = "головной датчик";
Blockly.Msg.NAO_INTENSITY = "интенсивность";
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "тангаж лодыжки";
Blockly.Msg.NAO_JOINT_ANKLEROLL = "крен лодыжки";
Blockly.Msg.NAO_JOINT_ELBOWROLL = "крен локтя";
Blockly.Msg.NAO_JOINT_ELBOWYAW = "рысканье локтя";
Blockly.Msg.NAO_JOINT_HAND = "кисть";
Blockly.Msg.NAO_JOINT_HEADPITCH = "крен головы";
Blockly.Msg.NAO_JOINT_HEADYAW = "рысканье головы";
Blockly.Msg.NAO_JOINT_HIPPITCH = "тангаж бедра";
Blockly.Msg.NAO_JOINT_HIPROLL = "крен бедра";
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "рысканье и тангаж бедра";
Blockly.Msg.NAO_JOINT_KNEEPITCH = "тангаж колена";
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "тангаж плеча";
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "крен плеча";
Blockly.Msg.NAO_JOINT_WRISTYAW = "рысканье запястья";
Blockly.Msg.NAO_LEARNFACEOF = "запомнить лицо";
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name in the vision recognition database on the robot.";  // untranslated
Blockly.Msg.NAO_LED = "светодиод";
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Выключить выбранный светодиод.";
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "все";
Blockly.Msg.NAO_LED_CHEST = "грудь";
Blockly.Msg.NAO_LED_EAR = "ухо";
Blockly.Msg.NAO_LED_EARS = "уши";
Blockly.Msg.NAO_LED_EYE = "глаз";
Blockly.Msg.NAO_LED_EYES = "глаза";
Blockly.Msg.NAO_LED_FOOT = "нога";
Blockly.Msg.NAO_LED_HEAD = "голова";
Blockly.Msg.NAO_LED_TOOLTIP = "Задать цвет группе светодиодов.";
Blockly.Msg.NAO_LOOKAT = "посмотреть на";
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "Returns additional information about the given NAO mark in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_MOVE = "двигаится";
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "рука";
Blockly.Msg.NAO_PART_ARMS = "arms";  // untranslated
Blockly.Msg.NAO_PART_BODY = "body";  // untranslated
Blockly.Msg.NAO_PART_HEAD = "head";  // untranslated
Blockly.Msg.NAO_PART_LEG = "leg";  // untranslated
Blockly.Msg.NAO_PART_LEGS = "legs";  // untranslated
Blockly.Msg.NAO_PERFORM = "perform";  // untranslated
Blockly.Msg.NAO_PHRASE = "phrase";  // untranslated
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "play file";  // untranslated
Blockly.Msg.NAO_POINTAT = "point at";  // untranslated
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "crouch";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBACK = "lie back";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "lie belly";  // untranslated
Blockly.Msg.NAO_POSTURE_REST = "rest";  // untranslated
Blockly.Msg.NAO_POSTURE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "sit relaxed";  // untranslated
Blockly.Msg.NAO_POSTURE_STAND = "stand";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDINIT = "stand init";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDZERO = "stand zero";  // untranslated
Blockly.Msg.NAO_QQVGA = "160*120";  // untranslated
Blockly.Msg.NAO_QVGA = "320*240";  // untranslated
Blockly.Msg.NAO_RANDOMEYES = "random eyes";  // untranslated
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RASTA = "rasta";  // untranslated
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD = "speech recognizer of";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Returns a word from the given list when recognized by NAO";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO = "record video";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot. Access the robots file system to view the video.";  // untranslated
Blockly.Msg.NAO_RELATIVE = "relative";  // untranslated
Blockly.Msg.NAO_RESOLUTION = "resolution";  // untranslated
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of selected LED(s) in a range from 0 to 100. Ears, head and chest LEDs are available";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "lock motors";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot will be turned on or off. Be aware that releasing the leg motors while the robot is standing may result in robot collapsing.";  // untranslated
Blockly.Msg.NAO_STOP = "stop movement";  // untranslated
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "Тай-чи";
Blockly.Msg.NAO_TAKEPICTURE = "Сделать фото";
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";
Blockly.Msg.NAO_WALK = "идти";
Blockly.Msg.NAO_WALKTO = "идти к";
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";  // untranslated
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Makes the robot walk infinitely";  // untranslated
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance entered in cm. Distances below 10cm might lead to no movement at all. Depending on your robot and the surface the robots is walking on the distance might not be exact.";  // untranslated
Blockly.Msg.NAO_WAVE = "волна";
Blockly.Msg.NAO_WIPE_FOREHEAD = "wipe forehead";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Новая переменная…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Имя новой переменной:";
Blockly.Msg.NO = "нет";
Blockly.Msg.NXTBRICK_TOOLTIP = "Представляет программный блок NXT c подключенными актюаторами и датчиками. Также доступны  встроенные акторы и датчики, такие как кнопки, дисплей и прочее.";
Blockly.Msg.OFF = "выключить";
Blockly.Msg.OLDER_THEN_14 = "Мне 16 или я старше 16!";
Blockly.Msg.ON = "включить";
Blockly.Msg.ORA_ACCESS_RIGHT_CHANGED = "The shared right for user »$« is updated!";  // untranslated
Blockly.Msg.ORA_ACCESS_RIGHT_DELETED = "The shared right for user »$« is deleted!";  // untranslated
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Your are not allowed to share. Please activate your account! <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "На сервере невозможно найти конфигурацию робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Конфигурация робота не может быть преобразована и записана в языке программирования используемом для данного робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Программа не может быть преобразована в машинный код.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "Программа не может быть сгенерирована.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED_WITH_PARAMETERS = "The program could not be generated. Pin {PIN} is incorrect in block {BLOCK}";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Программа не может быть преобразована и записана в языке программирования используемом для робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Программа не может быть сохранена из-за внутренней ошибки.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Программа не может быть преобразована и записана в языке программирования используемом для робота.";
Blockly.Msg.ORA_COMPILERWORKFLOW_SUCCESS = "The program build succeeded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Во время удаления конфигурации робота произошла ошибка. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Конфигурация удалена";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Название конфигурации не является допустимым идентификатором.";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Конфигурации загружена";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "В базе данных невозможно найти конфигурацию робота.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Конфигурации загружена";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Во время сохранения конфигурации робота произошла ошибка.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "Во время сохранения конфигурации робота в базу данных произошла ошибка.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Конфигурации сохранена";
Blockly.Msg.ORA_FIRMWARE_RESET_ERROR = "Loading the original program failed!";  // untranslated
Blockly.Msg.ORA_FIRMWARE_RESET_SUCCESS = "Your original program will run in a moment!";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Your program »$« couldn't be uploaded to the gallery, it seems as if it is already uploaded.";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Your program »$« is now in the gallery!";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR = "There was an error while adding new members the user group. Please reload the current form and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR_LIMIT_REACHED = "You can not have more than 99 members in one user group.";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR_SMALLER_THAN_ONE = "To add automatically generated members, you must enter an integer that is bigger or equals to 1.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR = "There was an error on creating the user group. Please try different inputs or try again later. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_GROUP_ALREADY_EXISTS = "You already have a user group with the that name. Please enter another name.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_GROUP_LIMIT_REACHED = "You reached the limit of user groups. You can not have more than 100 user groups in total.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "This group already exists";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR = "There was an error while deleting the user group. Please reload the user group list and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR_GROUP_DOES_NOT_EXISTS = "Could not find a user group with the specified name. Please reload the list of your user groups and try again.";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR_GROUP_HAS_MEMBERS = "One or more members of the user group have logged in in the past and created programs. In order to delete the user group, delete its members first.";  // untranslated
Blockly.Msg.ORA_GROUP_ERROR_MISSING_RIGHTS_TO_BE_GROUP_OWNER = "You are not allowed to be a user group owner. Your account must have an validated email attached.";  // untranslated
Blockly.Msg.ORA_GROUP_ERROR_NAME_INVALID = "The name of the user group is invalid. Please do not use special characters and enter at least one character.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ALL_ERROR = "There was an error while aquiring the list of user groups. Please reload the menu and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ONE_ERROR = "There was an error while aquiring the user group. Please reload the menu and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ONE_ERROR_NOT_FOUND = "Could not find a user group with the specified name.";  // untranslated
Blockly.Msg.ORA_GROUP_MEMBER_ERROR_ALREADY_EXISTS = "A member with the given name already exists in the user group.";  // untranslated
Blockly.Msg.ORA_GROUP_MEMBER_SHARE_RESTRICTION_EXCEEDED = "You can only share programs with other members of your user group. The owner of your user group can automatically read your programs.";  // untranslated
Blockly.Msg.ORA_GROUP_RENAME_ERROR = "There was an error while changing the name of the user group. Please reload the current form and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_TO_SHARE_DOES_NOT_EXIST = "You do not own a user group with the name you entered. <br />Try again with a different name!";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR = "There was an error while updating the user group. Please reload the user group list and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR_NOT_FOUND = "Could not find a user group with the specified name. Please reload the current form and try again.";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR_NOT_OWNER = "Could not update the user group. You are not the owner of that group.";  // untranslated
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "You do not like program »$« anymore!";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "You couldn't like program »$«. Maybe you have already liked it.";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "You like program »$« now!";  // untranslated
Blockly.Msg.ORA_LIST_CREATE_WITH_ERROR = "Error: This block may be used only within a variable declaration.";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Обладатель не существует.";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Программа несовместима с конфигурацией.";
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Во время удаления конфигурации робота произошла ошибка. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Программа удалена";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Название вашей программы уже используется системой. Пожалуйста, выберите другое имя и попробуйте еще раз!";
Blockly.Msg.ORA_PROGRAM_GET_ALL_ERROR_USER_NOT_FOUND = "Can not load the programs of the specified user. Please reload the lab and try again.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Программы загружены";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Прогамма не найдена.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Вы не вошли в систему. Пожалуйста, войдите под своим именем пользователя и паролем или создайте нового пользователя.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Программа загружены";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "Эта допустимая NEPO программа и она не может быть загружена!";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "Вы пытаетесь импортировать программу для робота не того типа, который выбран в меню. Пожалуйста, переключите тип в меню робота и попытайтесь снова импортировать!";
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "There are errors in your program or configuration. Please check the messages.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Эта программа уже существует.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "Вы не имеете права модифицировать эту программу!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Эта программа была недавно изменена кем-то другим. Вы можете сохранить изменения в новой программе. Для этого выберите >Сохранить как <!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Программа не найдена, так что ее невозможно обновить.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Программа сохранена";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Программа, которую Вы хотели бы открыть для общего доступа, не существует.";
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "It seems that we do not support the desired robot system!<br>Please choose another one.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Произошла ошибка при обновлении прошивки Вашего робота.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Прошивка обновлена";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Робот не подключен. Проверьте, включен ли ваш робот, подключите его к серверу и введите пароль от робота в меню соединения. Если при этом у вас возникли проблемы, пожалуйста, посмотрите на наших страницах помощи.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Робот не ждет чтобы выполнить команду.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "jar файл был загружен на робота";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_CALLIOPE2016 = "Your program »$« is downloaded to Calliope, press the reset button to start it!";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN_NXT = "Your program »$« is downloaded to the NXT, start it on the robot!";  // untranslated
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Switched to robot system »$«!";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Ошибка сервера";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Проверьте, включен ли Ваш робот и подключен ли он к серверу.  Если при этом у вас возникли проблемы, пожалуйста, посмотрите на наших страницах помощи.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "Вы пытаетесь соединиься робота не того типа, который выбран в меню. Пожалуйста, переключите тип в меню робота и попытайтесь снова импортировать!";
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Ваш робот подключен к серверу.";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "Во время удаления панели инструментов произошла ошибка. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Панель инструментов удалена";
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Имя панели инструментов недействительно.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Панель инструментов загружена";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Панель инструментов не найдена в базе данных.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Панель инструментов загружена";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "Во время сохранения панели инструментов произошла ошибка.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "Во время сохранения базы данных произошла ошибка.";
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Панель инструментов сохранена";
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "The link is not valid anymore. Please ask for resending your verification mail again";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »support-o-r@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Your account is successfully verified! Please login!";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Your account name or your user name is to long. Please make sure that they are not longer then 25 digits. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "You are using some one or more special characters in your account name! Please remove them. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Проверить, все ли необходимые поля ввода были заполнены.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Данное имя пользователя уже существует в базе данных. Пожалуйста, выберите другое имя пользователя.";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "Пользователь был успешно создан";
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Your account is currently not verified, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_HAS_GROUPS = "You have user groups associated with your account. Please delete them first, before you delete your account.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Ошибка при удалении пользователя.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Ошибка при удалении пользователя в базе данных.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Пользователь был успешно удален";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "Этот адрес электронной почты неизвестен, может быть, вы видите это неправильно!";
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "Учетная запись с этим адресом электронной почты уже существует. Пожалуйста, введите другой адрес электронной почты!";
Blockly.Msg.ORA_USER_ERROR_NOT_LOGGED_IN = "You need to be logged in to a user account to use this function. If you are logged in, please log out and in again.";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Пользователи загружены";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Вы ввели неверное имя пользователя или пароль. Пожалуйста, попробуйте снова!";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Успешный вход в систему";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "This user already belongs to the group";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "Эта ссылка больше не действительна. Пожалуйста, попросите снова сбросить Ваш пароль, если вы до сих пор не вспомнили  его!";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "К сожалению, мы не можем отправить Вам электронное письмо, пожалуйста, свяжитесь с »support-o-r@iais.fraunhofer.de«";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "Мы отправили Вам электронное письмо!";
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "User was not found";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "Пользователь, с которым вы хотели поделиться программой, не существует. Попробуйте снова!";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Вы не можете поделиться программой с самим/самой собой!";
Blockly.Msg.ORA_USER_UPDATE_ERROR_NOT_SAVED_TO_DB = "The password could not be saved to the database. Are you sure that you entered the old password correctly?";  // untranslated
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Ваш пароль был успешно изменен!";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.PARTICLE_TOOLTIP = "Represents SDS011 particle sensor.";  // untranslated
Blockly.Msg.PASSWORD = "Password";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_PULL = "pull";  // untranslated
Blockly.Msg.PIN_PULL_DOWN = "down";  // untranslated
Blockly.Msg.PIN_PULL_NONE = "none";  // untranslated
Blockly.Msg.PIN_PULL_UP = "up";  // untranslated
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Sets the pull of the chosen pin";  // untranslated
Blockly.Msg.PIN_WRITE = "записать";
Blockly.Msg.PITCH = "pitch";  // untranslated
Blockly.Msg.PLAY = "проиграть";
Blockly.Msg.PLAY_DURATION = "длительность, мс";
Blockly.Msg.PLAY_EIGHTH = "восьмая ноты";
Blockly.Msg.PLAY_FILE = "файл";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Проигрывает аудио файл.";
Blockly.Msg.PLAY_FREQUENZ = "частота, Гц";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Возвращает текущую громкость.";
Blockly.Msg.PLAY_HALF = "половина ноты";
Blockly.Msg.PLAY_NOTE = "нота";
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Проигрывает музыкальную ноту";
Blockly.Msg.PLAY_QUARTER = "четверть ноты";
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Устанавливает громкость.";
Blockly.Msg.PLAY_SIXTEENTH = "шестнадцатая ноты";
Blockly.Msg.PLAY_TONE = "тон";
Blockly.Msg.PLAY_TONE_TOOLTIP = "Проигрывает тон.";
Blockly.Msg.PLAY_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "громкость";
Blockly.Msg.PLAY_WHOLE = "целая нота";
Blockly.Msg.POPUP_ABOUT_JOIN = "Мне нужна помощь.";
Blockly.Msg.POPUP_ABOUT_TEXT = "Roberta Lab Open представляет собой облачную интегрированную среду программирования, которая позволяет детям и подросткам с легкостью программировать различные системы робота. Исходный код этой платформа с полностью открыт, поэтому приветствуются любое участие! И программное обеспечение и инструменты для разработчиков с открытым исходным кодом доступны через серверы Фраунгофера.";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Roberta Lab Open является платформой с открытым исходным кодом, разработанным Fraunhofer IAIS в рамках инициативы http://www.roberta-home.de »Роберта - Обучение с роботами«";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta была организована при сотрудничестве с Google Германии, чтобы упростить программирование обучающих роботов для студентов, учителей и школ. Open Roberta была профинансирована Google.org (2014 - 2015) на 1 млн. евро.";
Blockly.Msg.POPUP_AGE = "Возраст";
Blockly.Msg.POPUP_ATTENTION = "Внимание";
Blockly.Msg.POPUP_BACKGROUND_STORAGE = "The Open Roberta Lab can automatically load your simulation background on your next visits. For this purpose, we will save data in the Local Storage on your computer. <a href='https://www.roberta-home.de/en/privacy-policy-open-roberta-lab/' target='_blank'>More information in our privacy policy.</a>";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD = "У Вас есть несохраненные изменения в Вашей программе или конфигурации. Войдите в систему и сохраните Вашу программу или конфигурацию.";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "У Вас есть несохраненные изменения в Вашей программе или конфигурации.";
Blockly.Msg.POPUP_CANCEL = "Отмена";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "изменить пароль ...";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Press »OK« to discard your work. Press »Cancel« to stay here and save your work first.</i>";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Вы действительно хотите удалить конфигурацию?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Do you really want to delete these groups?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Вы действительно хотите удалить программу?";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Do you really want to remove these users below from the current group?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Доступна новая версия прошивки для Вашего робота. Вы можете попробовать запустить программу со старой версией, но лучше обновить вашего робота сейчас! Вам просто нужно нажать кнопку »Обновить сейчас«.";
Blockly.Msg.POPUP_CONTINUE = "продолжить в любом случае";
Blockly.Msg.POPUP_CREATE_BOOKMARK = "Create a browser bookmark now to save your robot selection!";  // untranslated
Blockly.Msg.POPUP_DISPLAY_HEADER = "output of your program";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I've changed the download folder of my browser permanently. Don't show this popup again and download my programs directly.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1 = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_EDISON = "Connect your Edison via the EdComm cable and press the round button";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_SENSEBOX = "Check that your device is in programming mode (LED dimming in a pattern), if not, double press the red button. Right click on you program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2 = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2_EDISON = "click on »Play« to play your program to Edison and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3 = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3_EDISON = "wait until Edison beeps, then unplug.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4 = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_EDISON = "Press the triangle button to start your program on your Edison<br><span style='font-size: 14px;'>Having trouble? Turn up the volume and check that all sound enhancements are turned off</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_SENSEBOX = "now click on the »Save« button on the bottom right.";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Обновить сейчас";
Blockly.Msg.POPUP_EMAIL = "Адрес электронной почты";
Blockly.Msg.POPUP_EMAIL_SEND = "Отослать сейчас";
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don't change it, it probably won't work anymore. It's already copied to your clipboard!</br>$";  // untranslated
Blockly.Msg.POPUP_MULTIPLE_ROBOTS = "Select multiple programs for the simulation";  // untranslated
Blockly.Msg.POPUP_MULTROBOTS_NOPROGRAMS = "Please create and store at least two programs which then can be executed each by a simulated robot!";  // untranslated
Blockly.Msg.POPUP_NAME = "Имя";
Blockly.Msg.POPUP_NEW_PASSWORD = "Новый пароль";
Blockly.Msg.POPUP_OLD_PASSWORD = "Старый пароль";
Blockly.Msg.POPUP_PASSWORD = "Пароль";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "сбросить пароль";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Выполнение программы на роботе было неожиданно прервана!";
Blockly.Msg.POPUP_REGISTER_USER = "Зарегистрироваться сейчас";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Повторить пароль";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Напряжение";
Blockly.Msg.POPUP_ROBOT_NAME = "Имя";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Сначала вы должны подсоединить своего робота.";
Blockly.Msg.POPUP_ROBOT_STATE = "Состояние";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "занят";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "разъединен";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "ждать";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "Система";
Blockly.Msg.POPUP_ROBOT_WAIT = "Время ожидания";
Blockly.Msg.POPUP_SCANNED_ROBOTS = "found robots";  // untranslated
Blockly.Msg.POPUP_STARTUP_COOKIES = "Мы используем куки для персонализации контента и анализа нашего трафика.";
Blockly.Msg.POPUP_STARTUP_HELP = "Вам нужна помощь?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Хорошо, не показывать это окно снова и запомнить мой выбор.";
Blockly.Msg.POPUP_STARTUP_START = "Выберите вашу систему!";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";  // untranslated
Blockly.Msg.POPUP_TOUR = "Пройти тюториал";
Blockly.Msg.POPUP_USERNAME = "Имя пользователя";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "Вы авторизированы.";
Blockly.Msg.POPUP_VALUE = "Значение";
Blockly.Msg.POPUP_WLAN_SECURITY_INFORMATION = "Please note that the data provided in this dialog window is private and will not be stored in the OpenRoberta lab; it will only be used for program creation and during the compilation process. Make sure that for each new session you enter these credentials again. Please keep in mind that exposing this information to public may pose security risks.";  // untranslated
Blockly.Msg.POPUP_WLAN_SSID = "SSID";  // untranslated
Blockly.Msg.PORT_ANKLE = "ankle";  // untranslated
Blockly.Msg.PORT_BUMPER = "bumper";  // untranslated
Blockly.Msg.PORT_ELBOW = "elbow";  // untranslated
Blockly.Msg.PORT_HAND = "hand";  // untranslated
Blockly.Msg.PORT_HEAD = "head";  // untranslated
Blockly.Msg.PORT_HIP = "hip";  // untranslated
Blockly.Msg.PORT_INTERNAL = "Port internal";  // untranslated
Blockly.Msg.PORT_KNEE = "knee";  // untranslated
Blockly.Msg.PORT_SHOULDER = "shoulder";  // untranslated
Blockly.Msg.PORT_WRIST = "wrist";  // untranslated
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Represents a potentiometer.";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "разрешить операторы";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Создать вызов '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Опишите эту функцию…";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "выполнить что-то";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "чтобы";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Создаёт процедуру, не возвращающую значение.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "вернуть";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Создаёт процедуру, возвращающую значение.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Предупреждение: эта функция имеет повторяющиеся параметры.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Выделить определение процедуры";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Если первое значение истинно, возвращает второе значение.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "имя параметра:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Добавить входной параметр в функцию.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "параметры";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
Blockly.Msg.PROCEDURES_TITLE = "процедура";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Ошибка: этот блок может быть использован только внутри";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Ошибка: этот блок может быть использован только внутри цикло, который";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Кликните здесь чтобы удалить все выбранные программы.";
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Кликните здесь чтобы удалить вашк программу.";
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Click here to share your program with a friend.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Do you really want to share your program with everybody? If you are not sure please check the question and answers <a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>here</a>.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Click here to upload your program to the gallery hence share it with all other users.";  // untranslated
Blockly.Msg.PROGRAM_ERROR_EXPRBLOCK_PARSE = "This expression is syntactically incorrect.";  // untranslated
Blockly.Msg.PROGRAM_ERROR_EXPRBLOCK_TYPECHECK = "This expression is invalid. The type check failed.";  // untranslated
Blockly.Msg.PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.PULSETOOLTIP = "Represents a pulse sensor.";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Получает RSSI последнего пакета.";
Blockly.Msg.REDO = "Повторить";
Blockly.Msg.RELAY = "relay";  // untranslated
Blockly.Msg.RELAY_ARDUINO = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.RELAY_TOOLTIP = "Represents a relay.";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Удалить комментарий";
Blockly.Msg.RENAME_VARIABLE = "Переименовать переменную…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Переименовать все переменные '%1' в:";
Blockly.Msg.RESEND_ACTIVATION = "выслать email для подтверждения снова";
Blockly.Msg.RETURN = "возврат";
Blockly.Msg.RFID_TOOLTIP = "Represents an RFID reader.";  // untranslated
Blockly.Msg.RGBLED_TOOLTIP = "Represents an RGB LED.";  // untranslated
Blockly.Msg.RGB_LED_TOOLTIP = "Turns the LED on or off and changes the color.";  // untranslated
Blockly.Msg.RIGHT = "right";  // untranslated
Blockly.Msg.ROLL = "качение";
Blockly.Msg.ROTATIONS_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.SAY = "say";  // untranslated
Blockly.Msg.SAY_PARAMETERS_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 0-100) and the pitch of the voice (range: 0-100) with the input fields";  // untranslated
Blockly.Msg.SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text.";  // untranslated
Blockly.Msg.SDCARD_TOOLTIP = "Represents an SD card.";  // untranslated
Blockly.Msg.SEND_DATA = "данные, которые должны быть отосланы";
Blockly.Msg.SEND_DATA_SENSEMAP = "openSenseMap";  // untranslated
Blockly.Msg.SEND_DATA_TO = "send data to";  // untranslated
Blockly.Msg.SEND_DATA_TO_OSM_TOOLTIP = "This block is used to send data from sensors to the openSenseMap. Please configure the IDs in the configuration prior to the usage of this block.";  // untranslated
Blockly.Msg.SENSEBOXBRICK_TOOLTIP = "Represents the senseBox. Please configure here the id's from the openSenseMap, if you want to use them.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_X_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the X axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_X_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the X axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Y_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the Y axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Y_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the Y axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Z_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the Z axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Z_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the Z axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_AMBIENTLIGHT = "датчик освещенности";
Blockly.Msg.SENSOR_ANALOGOUT = "sensor analog";  // untranslated
Blockly.Msg.SENSOR_ANY = "любое место";
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Возвращает значение \"истина\", если выбранной части руки касаются, и \"ложь\" в противополочном случает.";
Blockly.Msg.SENSOR_BATTERY = "Напряжение в В";
Blockly.Msg.SENSOR_BOTTOM = "нижний";
Blockly.Msg.SENSOR_CALIBRATE = "calibrate";  // untranslated
Blockly.Msg.SENSOR_CODE = "кодовая клавиатура";
Blockly.Msg.SENSOR_COLOUR = "цветовой датчик";
Blockly.Msg.SENSOR_COLOUR_EDISON = "line tracker";  // untranslated
Blockly.Msg.SENSOR_COMPASS = "компас";
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT compass sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE = "face detector";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Returns one or an array of IDs (number) of the last detected NAO Mark(s). If no marks are detected, -1 or an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.SENSOR_DIGITALOUT = "sensor digital";  // untranslated
Blockly.Msg.SENSOR_DROP = "drop sensor";  // untranslated
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gets the current reading from the drop sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_DROP_OFF = "drop-off sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT = "current sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "энкодер";
Blockly.Msg.SENSOR_FLAME = "датчик пламени";
Blockly.Msg.SENSOR_FSR = "force-sensing resistor";  // untranslated
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "жест";
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "активна?";
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face up.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Returns »true« if it is free falling.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Returns »true« if it is shaken.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Находится ли система в выбранном состоянии?";
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is upright.";  // untranslated
Blockly.Msg.SENSOR_GET = "получить";
Blockly.Msg.SENSOR_GET_SAMPLE = "вернуть значение";
Blockly.Msg.SENSOR_GPS_ALTITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the altitude in meters.";  // untranslated
Blockly.Msg.SENSOR_GPS_DATE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the current date.";  // untranslated
Blockly.Msg.SENSOR_GPS_LATITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the latitude in degree.";  // untranslated
Blockly.Msg.SENSOR_GPS_LONGITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the longitude in degree.";  // untranslated
Blockly.Msg.SENSOR_GPS_SENSEBOX = "GPS receiver";  // untranslated
Blockly.Msg.SENSOR_GPS_SPEED_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the speed in km/h.";  // untranslated
Blockly.Msg.SENSOR_GPS_TIME_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the current time.";  // untranslated
Blockly.Msg.SENSOR_GROVE = "Grove";
Blockly.Msg.SENSOR_GYRO = "гироскоп";
Blockly.Msg.SENSOR_GYRO_TILTED_GETSAMPLE_TOOLTIP_WEDO = "Is the tilt sensors position the indicated manner?";  // untranslated
Blockly.Msg.SENSOR_GYRO_WEDO = "tilt sensor";  // untranslated
Blockly.Msg.SENSOR_GYRO_X_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the X axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_GYRO_Y_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the Y axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_GYRO_Z_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the Z axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_HTCOLOUR = "HT colour sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY = "humidity sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_ARDUINO = "humidity sensor DHT11";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Gets the current reading from the humidity sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_SENSEBOX = "humidity/temperature sensor HDC1080";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "инфракрасный датчик";
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP_WEDO = "Gets the current relative distance from the infrared sensor. The values are between 1, close, and 10, further away.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER = "HT infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_EDISON = "IR seeker";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gets the position of an infrared beacon.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_RCCODE_GETSAMPLE_TOOLTIP_EDISON = "Receives a message from a remote control.";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "рука";
Blockly.Msg.SENSOR_IS_PIN = " ";
Blockly.Msg.SENSOR_IS_PRESSED = "нажата?";
Blockly.Msg.SENSOR_IS_TILTED = "tilted?";  // untranslated
Blockly.Msg.SENSOR_IS_TOUCHED = "тронута?";
Blockly.Msg.SENSOR_JOYSTICK = "джойстик";
Blockly.Msg.SENSOR_KEY = "кнопка";
Blockly.Msg.SENSOR_KEYPAD = "keypad";  // untranslated
Blockly.Msg.SENSOR_KEY_ANY = "любое";
Blockly.Msg.SENSOR_KEY_DOWN = "вниз";
Blockly.Msg.SENSOR_KEY_ENTER = "ввод";
Blockly.Msg.SENSOR_KEY_ESCAPE = "выход";
Blockly.Msg.SENSOR_KEY_LEFT = "лево";
Blockly.Msg.SENSOR_KEY_PLAY = "play";  // untranslated
Blockly.Msg.SENSOR_KEY_REC = "record";  // untranslated
Blockly.Msg.SENSOR_KEY_RIGHT = "право";
Blockly.Msg.SENSOR_KEY_STOP = "stop";  // untranslated
Blockly.Msg.SENSOR_KEY_UP = "вверх";
Blockly.Msg.SENSOR_LIGHT = "датчик освещенности";
Blockly.Msg.SENSOR_LIGHTVEML = "visible/UV light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_LIGHT_GETSAMPLE_TOOLTIP = "Reads the current value of the visible light sensor in lux. The value is between 0 to 220000 lux.";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_UVLIGHT_GETSAMPLE_TOOLTIP = "Reads the current value of the UV light sensor in μW/cm². The value is between 0 and more than 1000.";  // untranslated
Blockly.Msg.SENSOR_LIGHT_LIGHT_GETSAMPLE_TOOLTIP_EDISON = "Gets the current reading of the light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHT_LINETRACKER = "line tracker";  // untranslated
Blockly.Msg.SENSOR_MIC = "микрофон";
Blockly.Msg.SENSOR_MOISTURE = "moisture sensor";  // untranslated
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the moisture sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_MOTION = "motion sensor";  // untranslated
Blockly.Msg.SENSOR_MOTION_ARDUINO = "motion sensor HC-SR501";  // untranslated
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Gets the current reading from the motion sensor (true/false).";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "в мс";
Blockly.Msg.SENSOR_OBSTACLEDETECTOR = "Obstacle detector";  // untranslated
Blockly.Msg.SENSOR_OUT = "sensor";  // untranslated
Blockly.Msg.SENSOR_OUT_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_OUT_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PARTICLE = "SDS011 particle sensor";  // untranslated
Blockly.Msg.SENSOR_PARTICLE_PM10_GETSAMPLE_TOOLTIP = "Reads the current value of PM10 from the particle sensor.";  // untranslated
Blockly.Msg.SENSOR_PARTICLE_PM25_GETSAMPLE_TOOLTIP = "Reads the current value of PM2.5 from the particle sensor.";  // untranslated
Blockly.Msg.SENSOR_PIN = "пин";
Blockly.Msg.SENSOR_PINTOUCH = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSEHIGH_GETSAMPLE_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSELOW_GETSAMPLE_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER = "potentiometer";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gets the current reading from the potentiometer in volts (0-5V).";  // untranslated
Blockly.Msg.SENSOR_PULSE = "pulse sensor";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gets the current reading from the pulse sensor.";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the pulse sensor. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "RSSI датчик";
Blockly.Msg.SENSOR_RESET = "сбросить";
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_RESET_TOOLTIP_EDISON = "Resets the sensors and clears the values.";  // untranslated
Blockly.Msg.SENSOR_RFID = "RFID reader";  // untranslated
Blockly.Msg.SENSOR_RFID_ARDUINO = "RFID-RC522 reader";  // untranslated
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gets the current reading from the RFID reader.";  // untranslated
Blockly.Msg.SENSOR_RSSI = "signal strength";  // untranslated
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gets the signal strength from the last received message.";  // untranslated
Blockly.Msg.SENSOR_SONAR = "сонар";
Blockly.Msg.SENSOR_SOUND = "звуковой датчик";
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "микрофон";
Blockly.Msg.SENSOR_SOUND_CLAP_GETSAMPLE_TOOLTIP_EDISON = "Is a clap detected?";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE = "термометр";
Blockly.Msg.SENSOR_TEMPERATURE_ARDUINO = "temperature sensor TMP36";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_PRESSURE_GETSAMPLE_TOOLTIP = "Gets the current reading of the air pressure sensor in Pascal. Normal air pressure is 101325 Pascal.";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_SENSEBOX = "temperature/pressure sensor BMP280";  // untranslated
Blockly.Msg.SENSOR_TIME = "время";
Blockly.Msg.SENSOR_TIMER = "таймер";
Blockly.Msg.SENSOR_TOP = "верх";
Blockly.Msg.SENSOR_TOUCH = "датчик касания";
Blockly.Msg.SENSOR_ULTRASONIC = "ультразвуковой датчик";
Blockly.Msg.SENSOR_ULTRASONIC_ARDUINO = "ultrasonic sensor HC-SR04";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm.";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm. Minimum distance tp measure is 3 cm.";  // untranslated
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s²";  // untranslated
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";  // untranslated
Blockly.Msg.SENSOR_UNIT_CM = "см";
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";
Blockly.Msg.SENSOR_UNIT_DEGREE_PER_SECOND = "°/s";  // untranslated
Blockly.Msg.SENSOR_UNIT_IRRADIANCE = "μW/cm²";  // untranslated
Blockly.Msg.SENSOR_UNIT_LUX = "lx";  // untranslated
Blockly.Msg.SENSOR_UNIT_METER = "m";  // untranslated
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";  // untranslated
Blockly.Msg.SENSOR_UNIT_MM = "mm";  // untranslated
Blockly.Msg.SENSOR_UNIT_MS = "мс";
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";  // untranslated
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";
Blockly.Msg.SENSOR_UNIT_PASCAL = "Pascal";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";
Blockly.Msg.SENSOR_UNIT_PM = "μg/m³";  // untranslated
Blockly.Msg.SENSOR_UNIT_SPEED = "km/h";  // untranslated
Blockly.Msg.SENSOR_UNIT_VOLT = "V";  // untranslated
Blockly.Msg.SENSOR_VALUE = "значение";
Blockly.Msg.SENSOR_WALL = "wall sensor";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "Оpen Roberta Labв данный момент недоступна. </br> Пожалуйста, проверьте подключение к Интернету и попробуйте перезагрузить этот сайт. Если проблема не устранена, пожалуйста, не стесняйтесь связаться с нами по электронной почте: </ BR> support-o-r@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
Blockly.Msg.SERVO_MOTOR_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.SERVO_TOOLTIP = "Represents a servo motor.";  // untranslated
Blockly.Msg.SET = "установить";
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
Blockly.Msg.SET_LED = "включить светодиод";
Blockly.Msg.SET_RELAY = "turn relay";  // untranslated
Blockly.Msg.SET_RELAY_ARDUINO = "turn relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.SET_RELAY_TOOLTIP = "Turns the relay on or off";  // untranslated
Blockly.Msg.SET_RGB_LED = "turn RGB LED";  // untranslated
Blockly.Msg.SHARE_PROGRAMS_USERGROUP_HINT = "To share programs with a user group, open your program list and share a program with a user group.";  // untranslated
Blockly.Msg.SHARE_WITH_USER = "Share your program with another user ...";  // untranslated
Blockly.Msg.SHARE_WITH_USERGROUP = "Share your program with the members of one of your user groups ...";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF = "turn side brush off";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Turns the side brush off.";  // untranslated
Blockly.Msg.SIDE_BRUSH_STATUS = "turn side brush";  // untranslated
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Turns the side brush on or off .";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "К сожалению, вы не можете использовать этот блок в симуляции!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Этот датчик не в конфигурации! Поведение программы на реальном роботе не будет соответствовать ожидаемому!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "Инфракрасный датчик не подключен в конфигурации! Поведение программы на реальном роботе не будет соответствовать ожидаемому! Пожалуйста, проверьте конфигурацию робота!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "В этом блоке вы использовали неправильный порт для датчика! В этом блоке вы использовали неправильный порт датчика! Поведение программы на реальном робота будет отличаться, чем ожидалось, пожалуйста, проверьте конфигурацию робота! Пожалуйста, проверьте конфигурацию робота!";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Turns the single motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.SLEEP = "спать";
Blockly.Msg.SLOT_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_LEFT = "left";  // untranslated
Blockly.Msg.SLOT_LEFT_PITCH = "left pitch";  // untranslated
Blockly.Msg.SLOT_LEFT_ROLL = "left roll";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW = "left yaw";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "left yaw pitch";  // untranslated
Blockly.Msg.SLOT_MIDDLE = "middle";  // untranslated
Blockly.Msg.SLOT_PITCH = "pitch";  // untranslated
Blockly.Msg.SLOT_REAR = "rear";  // untranslated
Blockly.Msg.SLOT_RIGHT = "right";  // untranslated
Blockly.Msg.SLOT_RIGHT_PITCH = "right pitch";  // untranslated
Blockly.Msg.SLOT_RIGHT_ROLL = "right roll";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW = "right yaw";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "right yaw pitch";  // untranslated
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_TILTED_ANY = "any";  // untranslated
Blockly.Msg.SLOT_TILTED_BACK = "back";  // untranslated
Blockly.Msg.SLOT_TILTED_DOWN = "down";  // untranslated
Blockly.Msg.SLOT_TILTED_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_TILTED_NO = "not";  // untranslated
Blockly.Msg.SLOT_TILTED_UP = "up";  // untranslated
Blockly.Msg.SLOT_YAW = "yaw";  // untranslated
Blockly.Msg.SOCKET = "socket";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor in the range 0 to 100. 0 is quiet and 100 is loud.";  // untranslated
Blockly.Msg.SOUND_TOOLTIP = "Представляет датчик звука.";
Blockly.Msg.SOURCE_CODE_EDITOR_BUILD_TOOLTIP = "Build the source code.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_CLOSE_CONFIRMATION = "All your changes will be lost!";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_IMPORT_TOOLTIP = "Import current NEPO program.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_PLACEHOLDER = "Import current NEPO program or just start typing";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_RUN_TOOLTIP = "Run on the robot.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_UPLOAD_TOOLTIP = "Upload the source code.";  // untranslated
Blockly.Msg.SSID = "SSID";  // untranslated
Blockly.Msg.START = "старт";
Blockly.Msg.START_ACTIVITY = "активность";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Начинает дополнительную активность.";
Blockly.Msg.START_PROGRAM = "старт";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "autonomous behaviour";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "показать показатели датчиков";
Blockly.Msg.START_TOOLTIP = "Начальная точка для главной программы.";
Blockly.Msg.STEPMOTOR_TOOLTIP = "Represents a step motor.";  // untranslated
Blockly.Msg.STEPS_PER_REVOLUTION = "steps per revolution";  // untranslated
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STEP_MOTOR_ARDUINO = "step motor 28BYJ-48";  // untranslated
Blockly.Msg.STEP_MOTOR_ON_TOOLTIP = "Turns motor on with a provided speed in rpm and stops motor after execution of provided number of rotations.";  // untranslated
Blockly.Msg.STRENGTH = "сила";
Blockly.Msg.SWITCH = "switch";  // untranslated
Blockly.Msg.SWITCH_LED_MATRIX_TOOLTIP = "Enables/Disables the LED matrix to use the dual purpose pins.";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Конфигурация робота";
Blockly.Msg.TAB_PROGRAM = "Программа";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperature sensor in °C.";  // untranslated
Blockly.Msg.TEMPERATURE_TOOLTIP = "Represents a temperature sensor.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "добавить текст";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "к";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Добавить текст к переменной «%1».";
Blockly.Msg.TEXT_CAST_CHAR_TONUMBER = "cast %1 at index %2 to Number";  // untranslated
Blockly.Msg.TEXT_CAST_CHAR_TONUMBER_TOOLTIP = "Convert the character at the given position in this string into the corresponding ASCII number. The first character in the string is at position 0!";  // untranslated
Blockly.Msg.TEXT_CAST_STRING_TONUMBER = "cast %1 to Number";  // untranslated
Blockly.Msg.TEXT_CAST_STRING_TONUMBER_TOOLTIP = "Convert this string into a number, if it contains a number.";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "в строчные буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "в Заглавные Начальные Буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "в ЗАГЛАВНЫЕ БУКВЫ";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
Blockly.Msg.TEXT_CHARAT_FIRST = "взять первую букву";
Blockly.Msg.TEXT_CHARAT_FROM_END = "взять букву № с конца";
Blockly.Msg.TEXT_CHARAT_FROM_START = "взять букву №";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_CHARAT_LAST = "взять последнюю букву";
Blockly.Msg.TEXT_CHARAT_RANDOM = "взять случайную букву";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Возвращает букву в указанной позиции.";
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Write a comment to your code here, to make it easier for you and others to read and understand your code. It will also generate an inline comment in the generated source code";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Добавить элемент к тексту.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "соединить";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "по букву № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "по букву №";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "по последнюю букву";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "в тексте";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "взять подстроку с первой буквы";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "взять подстроку с буквы № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "взять подстроку с буквы №";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Возвращает указанную часть текста.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "найти первое вхождение текста";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "найти последнее вхождение текста";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает 0, если текст не найден.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Возвращает значение истина, если предоставленный текст пуст.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "создать текст из";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Создаёт фрагмент текста, объединяя любое число элементов";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "длина %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Возвращает число символов (включая пробелы) в заданном тексте.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "напечатать %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Печатает текст, число или другой объект.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Запросить у пользователя число.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Запросить у пользователя текст.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "запросить число с подсказкой";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "запросить текст с подсказкой";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://ru.wikipedia.org/wiki/Строковый_тип";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Буква, слово или строка текста.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "обрезать пробелы с двух сторон";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "обрезать пробелы слева";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "обрезать пробелы справа";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Возвращает копию текста с пробелами, удалеными с одного или обоих концов.";
Blockly.Msg.THETA = "theta";  // untranslated
Blockly.Msg.TIMEOUT = "таймаут";
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "Сбросить таймер.";
Blockly.Msg.TITLE = "title";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Сегодня";
Blockly.Msg.TOOLBOX_ACTION = "Действие";
Blockly.Msg.TOOLBOX_ANIMATION = "Анимация";
Blockly.Msg.TOOLBOX_CLEANING = "Cleaning";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Цвета";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Сообщения";
Blockly.Msg.TOOLBOX_CONTROL = "Контроль";
Blockly.Msg.TOOLBOX_DECISION = "Решения";
Blockly.Msg.TOOLBOX_DISPLAY = "Дисплей";
Blockly.Msg.TOOLBOX_DRIVE = "Ехать";
Blockly.Msg.TOOLBOX_IMAGE = "Изображения";
Blockly.Msg.TOOLBOX_LIGHT = "Подсветка";
Blockly.Msg.TOOLBOX_LIST = "Списки";
Blockly.Msg.TOOLBOX_LOGIC = "Логика";
Blockly.Msg.TOOLBOX_LOOP = "Циклы";
Blockly.Msg.TOOLBOX_MATH = "Математика";
Blockly.Msg.TOOLBOX_MOVE = "Движение";
Blockly.Msg.TOOLBOX_PIN = "Пин";
Blockly.Msg.TOOLBOX_PROCEDURE = "Функции";
Blockly.Msg.TOOLBOX_SENSOR = "Датчики";
Blockly.Msg.TOOLBOX_SOUND = "Звуки";
Blockly.Msg.TOOLBOX_TEXT = "Текст";
Blockly.Msg.TOOLBOX_VARIABLE = "Переменные";
Blockly.Msg.TOOLBOX_VISION = "Зрение";
Blockly.Msg.TOOLBOX_WAIT = "Ждать";
Blockly.Msg.TOOLBOX_WALK = "Идти";
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Нажат ли датчик касания?";
Blockly.Msg.TOUR1_DESCRIPTION00 = "следующее";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Добро пожаловать,  <br>  нажмите на »следующее« и начать тур по Open Roberta Lab. <br> Я покажу Вам, как запрограммировать робота с NEPO. <br> Вы можете закончить этот тур в любое время. Для этого нажмите на »X« в правом верхнем углу.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Меню ;-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Здесь вы можете найти все, что нужно для программирования робота! <br> <SPAN class='typcn typcn-документ-текст'> </ SPAN> Сохранение и загрузка программ <br> <SPAN class='typcn typcn-Roberta'> </ SPAN> Подключение робота к Roberta Lab Open <br> <SPAN class='typcn typcn-lightbulb'> </ SPAN> Помощь для всех видов проблем <br> <SPAN class='typcn typcn user'> </ SPAN> Все об учетных записях пользователей, например, вход или выход из системы";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Нажмите здесь чтобы перейти к конфигурации робота";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Вы можете изменить конфигурацию робота позже, <br> если Вы сконструировали другого робота. <br> Если у Вас нет робота и Вы хотите проверить Вашу программу в симуляции. <br> будет применена эта конфигурация.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Нажмите здесь чтобы переключиться обратно в область программирования!";
Blockly.Msg.TOUR1_DESCRIPTION07 = "Панель инструментов. <br> Здесь вы можете найти все программные блоки.";
Blockly.Msg.TOUR1_DESCRIPTION07a = "Once you are an experienced user you can switch here to the expert mode of the toolbox.<br>You will then find more blocks to program your robot.<br><span class='typcn typcn-media-stop-outline'></span> beginner mode<br><span class='typcn typcn-star-outline'></span> expert mode";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION08 = "Каждая программа начинается блока запуска программы. «. Следующие программные блоки, которые должны выполнить робот, должны быть присоединены к этому блоку. <br> Просто перетащите и присоедините нужный блок прямо под стартовым блоком.";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Здесь вы найдете некоторые клавиши быстрого доступа<br> Слева направо: <br> <SPAN class='typcn typcn-медиа-игра'> </ SPAN> Нажмите здесь, чтобы выполнить программу на реальном роботе  <br> <SPAN class='typcn typcn-media-play-outline'> </ SPAN> Нажмите здесь, чтобы запустить робота в симуляции <br> <SPAN class='typcn typcn-cloud-storage'> </ SPAN> Сохранить Вашу программу, но прежде вам нужно войти в систему <br> <SPAN class='typcn typcn-zoom'> </ SPAN> Нажмите здесь если Вы хотите изменить масштаб изображения блоков <br> <SPAN class='typcn typcn-acrhive'> </ SPAN> Мусорная корзина! Просто переместите блоки в корзину чтобы их удалить <br> & NBSP;. & NBSP; & NBSP; & NBSP; & NBSP; & NBSP; Внимание: как только блоки будут удалены Вы не сможете восстановить их <br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "Нажмите на »Действие«";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Теперь перетащите и закрепите новый блок чуть ниже блока запуска программы. Таким образом они будут подключены.";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Теперь проверьте свою программу в симуляции!";
Blockly.Msg.TOUR1_DESCRIPTION13a = "и протестируйте Вашу программу в симуляции!";
Blockly.Msg.TOUR1_DESCRIPTION15 = "Чудесно, <br> Ваш робот проедет 20 см вперед, <br> это то, что вы запрограммировали!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "До свидания и увлекательного программирования!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to measure is 255 cm.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "Представляет ультразвуковой датчик.";
Blockly.Msg.UNDO = "Отменить";
Blockly.Msg.USERGROUP_ADD_MEMBERS = "Add members";  // untranslated
Blockly.Msg.USERGROUP_CREATE = "Create new user group";  // untranslated
Blockly.Msg.USERGROUP_CREATE_TOOLTIP = "Click here to create a new usergroup";  // untranslated
Blockly.Msg.USERGROUP_DELETE_WITH_MEMBERS_WARNING = "Are your sure that you want to delete the usergroup including all members? No member did log in so far.";  // untranslated
Blockly.Msg.USERGROUP_GENERATED_MEMBERS = "Automatically generated members";  // untranslated
Blockly.Msg.USERGROUP_GENERATED_MEMBERS_TOOLTIP = "Automatically genertated members are normal members of a user group. They are generated with a number as username, which you can change afterwards.";  // untranslated
Blockly.Msg.USERGROUP_LIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected user groups.";  // untranslated
Blockly.Msg.USERGROUP_LIST_DELETE_TOOLTIP = "Click here to delete the user group.";  // untranslated
Blockly.Msg.USERGROUP_LOGIN_LOST_PASSWORD_HINT = "If you forgot your password, you can ask the owner of your user group to reset the password to the initial password for you. It will be the password you had to enter when you logged in first.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_CREATE_TOOLTIP = "Click here to add members to your usergroup.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_DEFAULT_PASSWORD_HINT = "The password for your account is not safe. Set your own password, so that only you can login to your account.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected user group members.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_DELETE_TOOLTIP = "Click here to delete this user group member.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_RESET_ALL_PASSWORDS_TOOLTIP = "Click here to reset the password of all selected user group members to their corresponding default password.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_RESET_PASSWORD_TOOLTIP = "Click here to reset the password of this user group member to the default password.";  // untranslated
Blockly.Msg.USERGROUP_NAME_HINT = "The user group to which you want to log in has a name. Enter it here.";  // untranslated
Blockly.Msg.VACUUM_OFF = "turn vacuum off";  // untranslated
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Turns the vacuum off.";  // untranslated
Blockly.Msg.VACUUM_ON = "turn vacuum on %";  // untranslated
Blockly.Msg.VACUUM_ON_TOOLTIP = "Turns on the vacuum speed in procent";  // untranslated
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Допустимые специальные символы: »=+!?.,%#+&^@_-«";
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Это поле не может быть пустым!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "Максимальная длина -- 25 символов!";
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Минимальная длина пароля - 6 символов!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Пароли должны совпадать!";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Длина токена - 8 символов!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Пожалуйста, введите действительный адрес электронной почты.";
Blockly.Msg.VALUE_TO = "значение";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "элемент";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Создать блок \"присвоить\" для %1";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Возвращает значение этой переменной.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Объявляет глобальную переменную.";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Объявляет локальную переменную.";
Blockly.Msg.VARIABLES_SET = "присвоить %1 = %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Создать вставку %1";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Присваивает переменной значение вставки.";
Blockly.Msg.VARIABLES_TITLE = "переменная";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "Список логических переменных";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "Список цветов";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "Список соединений";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "Список изображений";
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "Список числе";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "Список строк";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Лоническая переменная";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Цвет";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Соединение";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Изображение";
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Число";
Blockly.Msg.VARIABLES_TYPE_STRING = "Строка";
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "Переменная используется до объявления.";
Blockly.Msg.VOICE_PITCH = "voice pitch";  // untranslated
Blockly.Msg.VOICE_SPEED = "voice speed";  // untranslated
Blockly.Msg.WAIT = "ждать, мс";
Blockly.Msg.WAIT_FOR_TOOLTIP = "Ждет определенного значения показания датчика.";
Blockly.Msg.WAIT_OR = "или ждать до";
Blockly.Msg.WAIT_TIME_TOOLTIP = "Ждет определенное время в миллисекундах.";
Blockly.Msg.WAIT_TOOLTIP = "Ждет пока условине не станет правдой.";
Blockly.Msg.WAIT_UNTIL = "ждать пока";
Blockly.Msg.WIRELESS_TOOLTIP = "Represents a wireless connection.";  // untranslated
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Посылает величину на выбранный пин.";
Blockly.Msg.X = "x";
Blockly.Msg.XEND = "end of X axis";  // untranslated
Blockly.Msg.XLABEL = "X axis label";  // untranslated
Blockly.Msg.XSTART = "start of X axis";  // untranslated
Blockly.Msg.XTICK = "distance between X ticks";  // untranslated
Blockly.Msg.Y = "y";
Blockly.Msg.YAW = "рысканье";
Blockly.Msg.YEND = "end of Y axis";  // untranslated
Blockly.Msg.YES = "да";
Blockly.Msg.YLABEL = "Y axis label";  // untranslated
Blockly.Msg.YOUNGER_THEN_14 = "Я младше 16!";
Blockly.Msg.YSTART = "start of Y axis";  // untranslated
Blockly.Msg.YTICK = "distance between Y ticks";  // untranslated
Blockly.Msg.Z = "z";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.ACTION_LEDBAR = Blockly.Msg.LEDBAR;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HUMIDITY_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_COLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_HTCOLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.SENSOR_HTCOLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_HUMIDITY_HUMIDITY_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.SENSOR_TEMPERATURE_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HTCOLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.ACTION_FOURDIGITDISPLAY = Blockly.Msg.FOURDIGITDISPLAY;
Blockly.Msg.SENSOR_HTCOLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HTCOLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_RGB_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.HTCOLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP;