// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.tr');

goog.require('Blockly.Msg');

Blockly.Msg.ABOUT = "about";  // untranslated
Blockly.Msg.ACCELERATION_TOOLTIP = "Get the acceleration value in milli-gravities.";  // untranslated
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACCELEROMETER_TOOLTIP = "Represents an accelerometer.";  // untranslated
Blockly.Msg.ACTION_ANALOGIN = "actuator analog";  // untranslated
Blockly.Msg.ACTION_BUZZER = "buzzer";  // untranslated
Blockly.Msg.ACTION_BUZZER_ARDUINO = "buzzer HYT120";  // untranslated
Blockly.Msg.ACTION_DIGITALIN = "actuator digital";  // untranslated
Blockly.Msg.ACTION_EVAL = "eval";  // untranslated
Blockly.Msg.ACTION_EVAL_AS = "as";  // untranslated
Blockly.Msg.ACTION_IN = "actuator";  // untranslated
Blockly.Msg.ACTION_INFRARED = "infrared emitter";  // untranslated
Blockly.Msg.ACTION_LCD = "LCD 1602";  // untranslated
Blockly.Msg.ACTION_LCDI2C = "LCD 1602 I²C";  // untranslated
Blockly.Msg.ACTION_LCDI2C_SENSEBOX = "OLED Display I²C";  // untranslated
Blockly.Msg.ACTION_LED = "LED";  // untranslated
Blockly.Msg.ACTION_MOTOR = "motor";  // untranslated
Blockly.Msg.ACTION_PLAY = "play";  // untranslated
Blockly.Msg.ACTION_PLOTTING = "plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR = "clear the plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR_TOOLTIP = "Removes all the data from the plot.";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT = "plot a point on";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT_TOOLTIP = "Plots a point with specified value (Y axis) at the specified tickmark (X axis).";  // untranslated
Blockly.Msg.ACTION_PLOT_TICKMARK = "at tickmark";  // untranslated
Blockly.Msg.ACTION_RELAY = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.ACTION_RGBLED = "RGB LED";  // untranslated
Blockly.Msg.ACTION_SDCARD = "SD card";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT = "show on Serial Monitor";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT_TOOLTIP = "Show data on the Serial Monitor. You can find the Serial Monitor in the USB Programm on top, under View.";  // untranslated
Blockly.Msg.ACTION_SERVO = "servo motor";  // untranslated
Blockly.Msg.ACTION_SERVO_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.ACTION_STEPMOTOR = "step motor";  // untranslated
Blockly.Msg.ACTION_WIRELESS = "WiFi connection.";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "Ek aktiviteler için işaretleyici.";
Blockly.Msg.ACTOR_ANALOGIN_TOOLTIP = "Writes an analog value (PWM wave) to a pin. Only values between 0 and 255 should be used";  // untranslated
Blockly.Msg.ACTOR_DIGITALIN_TOOLTIP = "Writes a HIGH or a LOW value to a digital pin. Only the values HIGH »1« and LOW »0« should be used.";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "Tüm aktörleri gösterir.";
Blockly.Msg.ADDRESS = "address";  // untranslated
Blockly.Msg.ADD_COMMENT = "Yorum Ekle";
Blockly.Msg.ANALOG = "analog";  // untranslated
Blockly.Msg.ANALOGIN_TOOLTIP = "Represents any actuator connected to an analog pin.";  // untranslated
Blockly.Msg.ANALOGOUT_TOOLTIP = "Represents any sensor connected to an analog pin.";  // untranslated
Blockly.Msg.AND = "and";  // untranslated
Blockly.Msg.ARDUBRICK_TOOLTIP = "Bot'n Roll devre kartını kendisine bağlı tüm aktüatörleriyle gösterir. Basılabilir düğmeler, ekranlar gibi devre kartına monte edilmiş aktüatörler de mevcuttur.";
Blockly.Msg.AUTH = "Çalışmanızın kaydedilmesi ve sizinle paylaşılmasına izin verilmesi için lütfen bu uygulamaya yetki verin.";
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";  // untranslated
Blockly.Msg.BELOW = "below";  // untranslated
Blockly.Msg.BLOCK_NOT_EXECUTED = "The exection of this block will have no effect!";  // untranslated
Blockly.Msg.BLOCK_NOT_SUPPORTED = "This robot does not support this block!";  // untranslated
Blockly.Msg.BLOCK_USED_INCORRECTLY = "Unfortunately, this block cannot be used in this way.";  // untranslated
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Returns the previously stored number.";  // untranslated
Blockly.Msg.BOB3_RECALL_NUMBER = "recall number";  // untranslated
Blockly.Msg.BOB3_REMEMBER_NUMBER = "remember number";  // untranslated
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "The number to store should be an integer in the range of 0 to 255";  // untranslated
Blockly.Msg.BOTH = "İkisi de.";
Blockly.Msg.BOX_ID = "Device ID";  // untranslated
Blockly.Msg.BRICKLIGHT = "EV3 ışığı";
Blockly.Msg.BRICKLIGHT_BLUE = "Mavi";
Blockly.Msg.BRICKLIGHT_COLOR = "Renk";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "İkili yanıp sönme.";
Blockly.Msg.BRICKLIGHT_FLASH = "Yanıp sönme.";
Blockly.Msg.BRICKLIGHT_GREEN = "Yeşil";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "EV3 ışığını kapat";
Blockly.Msg.BRICKLIGHT_ON = "Açık";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "EV3 ışığını aç";
Blockly.Msg.BRICKLIGHT_ORANGE = "Turuncu";
Blockly.Msg.BRICKLIGHT_RED = "Kırmızı";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "EV3 ışığını sıfırlar. Varsayılan EV3 ışığını belirler: yanıp sönen yeşil ışık.";
Blockly.Msg.BRICKNAME_WEDO = "WeDo";  // untranslated
Blockly.Msg.BRICK_IPADDRESS = "ip address";  // untranslated
Blockly.Msg.BRICK_PASSWORD = "password";  // untranslated
Blockly.Msg.BRICK_PHENOMENON = "Phenomenon";  // untranslated
Blockly.Msg.BRICK_PORT = "port";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "Yol genişliği.";
Blockly.Msg.BRICK_USERNAME = "user name";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "Tekerlek Çapı";
Blockly.Msg.BRUSH_OFF = "turn brush Off";  // untranslated
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Turns the brush off.";  // untranslated
Blockly.Msg.BRUSH_ON = "turn brush on (RPM)";  // untranslated
Blockly.Msg.BRUSH_ON_TOOLTIP = "Turns on the brush with RPM of the motor (0<=RPM<=10000)";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Paylaş";
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Upload »$« to the gallery";  // untranslated
Blockly.Msg.BUTTON_EMPTY_LIST = "Boş Liste";
Blockly.Msg.BUZZER_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Represents Calliope, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.CB_ALL = "Calli:bot all";  // untranslated
Blockly.Msg.CB_BOTH = "Calli:bot both";  // untranslated
Blockly.Msg.CB_LEFT = "Calli:bot left";  // untranslated
Blockly.Msg.CB_RIGHT = "Calli:bot right";  // untranslated
Blockly.Msg.CENTER = "Merkez";
Blockly.Msg.CHANGE_VALUE_TITLE = "Değeri değiştir:";
Blockly.Msg.CHAT = "Bu kutuya yazarak iş birlikçin ile sohbet et!";
Blockly.Msg.CLEAN_UP = "Blokları temizle";
Blockly.Msg.CLEAR = "clear";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Blokları Daralt";
Blockly.Msg.COLLAPSE_BLOCK = "Blok'u Daralt";
Blockly.Msg.COLON = "colon";  // untranslated
Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = "Gets the current ambient light reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "renk 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "renk 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "oran";
Blockly.Msg.COLOUR_BLEND_TITLE = "karıştır";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Verilen bir orana bağlı olarak iki rengi karıştırır. (0.0 - 1.0).";
Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP = "Gets the current colour reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP = "Gets the current brightness reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://tr.wikipedia.org/wiki/Renk";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Paletten bir renk seçin.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "rastgele renk";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Rastgele bir renk seçin.";
Blockly.Msg.COLOUR_RGB_BLUE = "mavi";
Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP = "Gets the current colour reading from the colour sensor. Values are in the range 0 to 255.";  // untranslated
Blockly.Msg.COLOUR_RGB_GREEN = "yeşil";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "kırmızı";
Blockly.Msg.COLOUR_RGB_TITLE = "renk değerleri";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Kırmızı, yeşil ve mavinin belirtilen miktarıyla bir renk oluşturun.  Tüm değerler 0 ile 255 arasında olmalıdır.";
Blockly.Msg.COLOUR_RGB_WHITE = "white";  // untranslated
Blockly.Msg.COLOUR_TOOLTIP = "Bir renk sensörünü belirtir.";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Calibrates the compass. Turn the compass sensor VERY slowly for two times (about 40 seconds).";  // untranslated
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Yön (Pusula) sensörünü belirtir.";
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Represents a HiTechnic NXT compass sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_ACTOR_MISSING = "This actuator is not configured. Please add the corresponding block in the configuration tab!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "Sağ ve sol motorların dönüş yönleri farklı!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Kurulumda sol motor eksik!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Sol motor ayarlanamadı!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Belirtilen port'ta motor eksik!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Kurulumda sağ motor eksik!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Sağ motor ayarlanamadı!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "Kurulumunuzda birden fazla sol motor tanımlı!";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "Kurulumunuzda birden fazla sağ motor tanımlı!";
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Other power consumer does not support this type of block!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_OVERLAPPING_PORTS = "Another component is already using the same port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "Bu sensör port'a tanımlanmadı!";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Belirtilen port'a yanlış sensör bağlandı!";
Blockly.Msg.CONFIGURATION_ERROR_WLAN_CREDENTIALS_MISSING = "Missing WLAN credentials, please enter them in robot -> WLAN credentials ... !";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_WLAN_MISSING = "WiFi is not configured. Please add the corresponding block in the configuration tab!";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PHENOMENON = "no phenomenon";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PORT = "no port";  // untranslated
Blockly.Msg.CONFIGURATION_PORT = "Port1";  // untranslated
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Click here to delete your robot configuration.";  // untranslated
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.CONNECTION_CHECK = "Robota baglanti 1% aktif?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Robot bağlantısının aktifliğini kontrol et.";
Blockly.Msg.CONNECTION_CONNECT = "Robot adıyla bağlan.";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "from connection";  // untranslated
Blockly.Msg.CONNECTION_FROM_ROBOT = "Robot'tan";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Reads a message over one of the channels (0 - 255). The default channel is 0.";  // untranslated
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Sends a message to another system. You can specify a signal strength from 0 - 7, where 0 is very low and 7 is the strongests. The message is send over channel 0 unless you specify another one.";  // untranslated
Blockly.Msg.CONNECTION_OVER_CHANNEL = "Kanal üzerinden";
Blockly.Msg.CONNECTION_POWER = "with strength";  // untranslated
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";  // untranslated
Blockly.Msg.CONNECTION_RECEIVED_DATA = "Mesaj al.";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Bağlantıda bildirilen robot'tan gelecek mesajı bekler.";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_BOB3 = "Reads a message via the IR receiver. Only numbers can be received.";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_MBOT = "Reads a message from the IR receiver. Only strings can be received.";  // untranslated
Blockly.Msg.CONNECTION_SEND_DATA = "Mesaj gönder.";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Başka bir robota mesaj gönderir.";
Blockly.Msg.CONNECTION_SEND_TOOLTIP_BOB3 = "Sends a message of type number to another Bob3. Hold the Bob3's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SEND_TOOLTIP_MBOT = "Sends a message of type string to another mBot. Hold the mBots's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL = "set channel to %1";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Sets the channel for sending and receiving messages. Can be set from 0 to 255.";  // untranslated
Blockly.Msg.CONNECTION_START_TOOLTIP = "Başka bir robotla bluetooth üzerinden bağlantı kurmaya çalışır.";
Blockly.Msg.CONNECTION_TOOLTIP = "Bir robot'un bağlantısı";
Blockly.Msg.CONNECTION_TO_CONNECTION = "Bağlantıya";
Blockly.Msg.CONNECTION_TO_ROBOT = "Robot'a";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "Bağlantı için bekle";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Bluetooth bağlantısı için bekler.";
Blockly.Msg.CONNECTOR = "hub";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "döngüden çık";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "döngünün sonraki adımından devam et";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "İçeren döngüden çık.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Bu döngünün geri kalanını atlayın ve sonraki adım ile devam edin.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Uyarı: Bu blok sadece bir döngü içinde kullanılabilir.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "her öğe için %1 listede %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Bir listedeki her öğe için  '%1' değişkenini maddeye atayın  ve bundan sonra bazı açıklamalar yapın.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "ile sayılır %1 %2 den %3 ye, her adımda %4 değişim";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Başlangıç sayısından bitiş sayısına kadar belirtilen aralık ve belirtilen engeller ile devam eden değerler alan '%1' değişkeni oluştur.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "If bloğuna bir koşul ekleyin.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "If bloğuna kalan durumları \"yakalayan\" bir son ekle.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "If bloğuna ekle, kaldır veya yeniden düzenleme yap.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "değilse";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "değilse eğer";
Blockly.Msg.CONTROLS_IF_MSG_IF = "eğer";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Eğer değişken true , yani gerçekleşmiş ise , ardından gelen işlemi yerine getir .";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Eğer değişken true, yani gerçekleşiyor ise ilk blok'taki işlemleri yerine getir, Aksi halde ikinci blok'taki işlemleri yerine getir.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Eğer ilk değişken true, yani koşul gerçekleşmiş ise ilk blok içerisindeki işlem(ler)i gerçekleştir. Eğer ikinci değişken true ise, ikinci bloktaki işlem(ler)i gerçekleştir .";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Eğer ilk değer true, yani olumlu ise, ilk blok'taki işlem(ler)i gerçekleştir. İlk değer true değil ama ikinci değer true ise, ikinci bloktaki işlem(ler)i gerçekleştir. Eğer değerlerin hiçbiri true değil ise son blok'taki işlem(ler)i gerçekleştir.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://tr.wikipedia.org/wiki/For_d%C3%B6ng%C3%BCs%C3%BC";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "yap";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "%1 kez tekrarla";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Bazı işlemleri birkaç kez yap.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "kadar tekrarla";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "tekrar ederken";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Bir değer yanlış olduğunda bazı beyanlarda bulun.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Bir değer doğru olduğunda bazı beyanlarda bulun.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Gerçekleştirme zamanı.";
Blockly.Msg.DATATABLE_CONFIGURATIONS = "Kurulumlar";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Kurulum ismi";
Blockly.Msg.DATATABLE_CREATED_BY = "Oluşturan";
Blockly.Msg.DATATABLE_CREATED_ON = "Oluşturma zamanı";
Blockly.Msg.DATATABLE_MEMBERS = "members";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "Programlar";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Program ismi";
Blockly.Msg.DATATABLE_SHARED = "Paylaşıldı";
Blockly.Msg.DATATABLE_SHARED_PROGRAMS = "shared programs";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Şununla paylaşıldı";
Blockly.Msg.DATATABLE_USERGROUP = "user group";  // untranslated
Blockly.Msg.DATATABLE_USERGROUPS = "user groups";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_NAME = "Name of the user group";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_NAME_CREATE_HINT = "The name of the user group. Kepp in mind, that the members will have to type it in each time they log in.";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_OWNER = "Name of the owner of the user group";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Tüm %1 blok silinsin mi?";
Blockly.Msg.DELETE_BLOCK = "Bloğu Sil";
Blockly.Msg.DELETE_USERGROUP_MEMBER_AFTER_LOGIN_WARNING = "A member you want to delete did already log in and might have create own programs. Are you sure that you want to delete the selected member(s)?";  // untranslated
Blockly.Msg.DELETE_USERGROUP_MEMBER_WARNING = "Are you sure that you want to delete the selected member(s)?";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "%1 Blokları Sil";
Blockly.Msg.DIGITAL = "digital";  // untranslated
Blockly.Msg.DIGITALIN_TOOLTIP = "Represents any actuator connected to a digital pin.";  // untranslated
Blockly.Msg.DIGITALOUT_TOOLTIP = "Represents any sensor connected to a digital.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Bloğu Devre Dışı Bırak";
Blockly.Msg.DISPLAY_ANIMATION = "animation";  // untranslated
Blockly.Msg.DISPLAY_CHARACTER = "character";  // untranslated
Blockly.Msg.DISPLAY_CLEAR = "Ekranı temizle";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Ekranı temizler.";
Blockly.Msg.DISPLAY_COL = "Sütun içinde";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Returns the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Returns the brightness for this led. 0 means the led is turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_IMAGE = "image";  // untranslated
Blockly.Msg.DISPLAY_PICTURE = "Resim";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "Gözler kapalı";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "Gözler açık";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "Çiçekler";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "Bardaklar";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "Tako";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Ekran üzerinde bir resim gösterir.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "brightness";  // untranslated
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";  // untranslated
Blockly.Msg.DISPLAY_ROW = "Satırda";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Sets the brightness for all leds of the display. 0 means all leds are turned off, 9 is the brightest value.";  // untranslated
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Sets the brightness for this led. 0 means the led is turned off, 9 is the brightest value. With x and y you can determine the position of the led you would like to change.";  // untranslated
Blockly.Msg.DISPLAY_SHOW = "Göster";
Blockly.Msg.DISPLAY_TEXT = "Metin";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Ekran üzerinde bir metin gösterir.";
Blockly.Msg.DROP_TOOLTIP = "Represents a drop sensor.";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Çoğalt";
Blockly.Msg.ENABLE_BLOCK = "Bloğu Etkinleştir";
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Modot kodlayıcıyı sıfırlar.";
Blockly.Msg.ENCODER_TOOLTIP = "Represents an encoder.";  // untranslated
Blockly.Msg.ERROR_MISSING_PARAMETER = "An input value is missing!";  // untranslated
Blockly.Msg.ERROR_MISSING_RETURN = "The function return value is missing!";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "EV3 robotunu kendisine bağlı tüm aktüatörleri ve sensörleriyle gösterir. Basılabilir düğmeler, ekranlar gibi devre kartına monte edilmiş aktüatörler ve sensörler de mevcuttur.";
Blockly.Msg.EXPAND_ALL = "Blokları Genişlet";
Blockly.Msg.EXPAND_BLOCK = "Bloğu Genişlet";
Blockly.Msg.EXTERNAL_INPUTS = "Harici Girişler";
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Represents a flame sensor.";  // untranslated
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "You need a variable? Please declare it first with a click on the + sign at the »start« block.";  // untranslated
Blockly.Msg.FOR = "için";
Blockly.Msg.FOURDIGITDISPLAY = "4-Digit Display";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Clears the 4-Digit Display.";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Displays a number [0-9999] on the 4-Digit Display. Position [0-3] represents the starting position of the number";  // untranslated
Blockly.Msg.FOURDIGITDISPLAY_TOOLTIP = "Represents a Grove 4-Digit Display by Seeed";  // untranslated
Blockly.Msg.FROM_POSITION = "from position";  // untranslated
Blockly.Msg.FSR_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.GALLERY_BY = "by";  // untranslated
Blockly.Msg.GALLERY_DATE = "created";  // untranslated
Blockly.Msg.GALLERY_DISLIKE = "dislike";  // untranslated
Blockly.Msg.GALLERY_LIKE = "like";  // untranslated
Blockly.Msg.GALLERY_SHARED_ALREADY = "You have already uploaded this program to the gallery. If you want to change it, look for the copy from the gallery and modify it. You can also remove it from the gallery while deleting the copy from the gallery.";  // untranslated
Blockly.Msg.GEARED_MOTOR = "geared motor";  // untranslated
Blockly.Msg.GET = "al";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Seçilen sensörden güncel okuma değerini alır.";
Blockly.Msg.GET_CODE_TOOLTIP = "Returns the value of the solderable code pad in the head piece. Values are in range 0-31.";  // untranslated
Blockly.Msg.GO_TO_GROUPS = "Go to groups";  // untranslated
Blockly.Msg.GPS_TOOLTIP = "Represents a GPS receiver.";  // untranslated
Blockly.Msg.GROUP_CREATE_NAME_HINT = "Please keep in mind, that all members of a group have to enter the group name on each login. It should neither be complicated nor long.";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "Cayro sensörü sıfırlar.";
Blockly.Msg.GYRO_TOOLTIP = "Bir cayro sensörü belirtir.";
Blockly.Msg.GYRO_TOOLTIP_WEDO = "Represents a tilt sensor.";  // untranslated
Blockly.Msg.HELP = "Yardım";
Blockly.Msg.HINT_USERGROUP_MEMBER = "Enter the member id of your user here. It should be a two digit number.";  // untranslated
Blockly.Msg.HINT_USERGROUP_OWNER = "Do <strong>not</strong> enter the real name of the owner of the user group here, but his <strong>username</strong> instead.";  // untranslated
Blockly.Msg.HINT_USER_ACCOUNT = "»IAmBotman« or »RobellaStracciatella«? Not everyone needs to know your real name. Think of a cool nickname that you can easily remember.";  // untranslated
Blockly.Msg.HINT_USER_AGE = "Are you under 16? Then please ask your parents to help you. They can specify their e-mail address to confirm your account.";  // untranslated
Blockly.Msg.HINT_USER_EMAIL = "This is voluntary! However, some functions of the lab are only available if you have verified your account by e-mail. You are younger than 16? Please ask your parents to help you out with one of their e-mail addresses. <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.HINT_USER_NAME = "Enter your real name here if you like. This is just for you, no one else will see it.";  // untranslated
Blockly.Msg.HINT_USER_PASSWORT = "12345 is no secure password. Rather think of a safe combination of numbers and letters that you will not forget.";  // untranslated
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Got it? Better make sure!";  // untranslated
Blockly.Msg.HTCOLOUR_TOOLTIP = "Represents a HiTechnic NXT Color Sensor V2.";  // untranslated
Blockly.Msg.HUMIDITY_TOOLTIP = "Represents a humidity sensor.";  // untranslated
Blockly.Msg.ICON_BLOCKING_TOOLTIP = "Blocking block! This blocks needs some time to be executed, so other's have to wait until it gives back the control to the caller function.";  // untranslated
Blockly.Msg.ID = "ID";  // untranslated
Blockly.Msg.IF_TOOLTIP = "»If« içerisindeki koşulu kontrol eder. Eğer koşul ifadesi doğruysa, »do« eylemini gerçekleştirir.";
Blockly.Msg.IMAGE_GET_TOOLTIP = "Returns the chosen image.";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "angry";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "asleep";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "butterfly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "chessboard";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "confused";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "cow";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "small diamond";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "duck";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "fabulous";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "ghost";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "giraffe";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "small heart";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "house";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "meh!";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "music crotchet";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "music quaver";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "music quavers";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "no";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "pacman";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "pitchfork";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "rabbit";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "rollerskate";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "sad";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "silly";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "skull";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "smile";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "snake";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "small square";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "stickfigure";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "sword";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "target";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "tortoise";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "triangle";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "triangle left";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "T-shirt";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "umbrella";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "xmas";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "yes";  // untranslated
Blockly.Msg.IMAGE_INVERT = "invert";  // untranslated
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Inverts the image. Each pixel with value 0 or none will be set to # or 9 and pixels with value # or 9 will be set to 0 or none.";  // untranslated
Blockly.Msg.IMAGE_SHIFT = "shift";  // untranslated
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Shifts the image in the given direction by the given number";  // untranslated
Blockly.Msg.IMAGE_TOOLTIP = "Creates an image for the display. You can specify the brightness of each pixel from 0 to 9 or # where 0 means no light, 1 is a bit bright and 9 or # is the brightest value.";  // untranslated
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Document your program here ...";  // untranslated
Blockly.Msg.INFO_TAGS = "Tags";  // untranslated
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gets the current relative distance from the infrared sensor. The values are between 1 and 75 cm.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the light sensor -- if a black line is detected (true/false).";  // untranslated
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Returns an array of measurements for the presence of a beacon.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "Bir kızılötesi sensörü belirtir.";
Blockly.Msg.INLINE_INPUTS = "Satır içi girdiler";
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INTERNAL_PORT = "internal";  // untranslated
Blockly.Msg.IRSEEKER_TOOLTIP = "Represents a HiTechnic NXT IRSeeker V2 sensor.";  // untranslated
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Gets the current reading of one of the axises of the joystick";  // untranslated
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.KEY_TOOLTIP = "Represents a button.";  // untranslated
Blockly.Msg.LANGUAGE = "language";  // untranslated
Blockly.Msg.LANGUAGE_ARABIC = "Arabic";  // untranslated
Blockly.Msg.LANGUAGE_BRAZILIAN = "Brazilian";  // untranslated
Blockly.Msg.LANGUAGE_CHINESE = "Chinese";  // untranslated
Blockly.Msg.LANGUAGE_CZECH = "Czech";  // untranslated
Blockly.Msg.LANGUAGE_DANISH = "Danish";  // untranslated
Blockly.Msg.LANGUAGE_DUTCH = "Dutch";  // untranslated
Blockly.Msg.LANGUAGE_ENGLISH = "English";  // untranslated
Blockly.Msg.LANGUAGE_FINNISH = "Finnish";  // untranslated
Blockly.Msg.LANGUAGE_FRENCH = "French";  // untranslated
Blockly.Msg.LANGUAGE_GERMAN = "German";  // untranslated
Blockly.Msg.LANGUAGE_GREEK = "Greek";  // untranslated
Blockly.Msg.LANGUAGE_ITALIAN = "Italian";  // untranslated
Blockly.Msg.LANGUAGE_JAPANESE = "Japanese";  // untranslated
Blockly.Msg.LANGUAGE_KOREAN = "Korean";  // untranslated
Blockly.Msg.LANGUAGE_NORWEGIAN = "Norwegian";  // untranslated
Blockly.Msg.LANGUAGE_POLISH = "Polish";  // untranslated
Blockly.Msg.LANGUAGE_PORTUGUESE = "Portuguese";  // untranslated
Blockly.Msg.LANGUAGE_RUSSIAN = "Russian";  // untranslated
Blockly.Msg.LANGUAGE_SPANISH = "Spanish";  // untranslated
Blockly.Msg.LANGUAGE_SWEDISH = "Swedish";  // untranslated
Blockly.Msg.LANGUAGE_TURKISH = "Turkish";  // untranslated
Blockly.Msg.LCDI2C_TOOLTIP = "Represents an LCD 1602 display with a soldered I²C module.";  // untranslated
Blockly.Msg.LCD_TOOLTIP = "Represents an LCD display.";  // untranslated
Blockly.Msg.LED = "LED";  // untranslated
Blockly.Msg.LEDBAR = "LED Bar";  // untranslated
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Sets the specified LED [0-9] on the LED Bar to the given brightness [0-8].";  // untranslated
Blockly.Msg.LEDBAR_TOOLTIP = "Represents a Grove LED Bar v2.0 by Seeed.";  // untranslated
Blockly.Msg.LED_MATRIX = "LED matrix";  // untranslated
Blockly.Msg.LED_OFF = "turn LED off";  // untranslated
Blockly.Msg.LED_OFF_TOOLTIP = "Turns the LED off.";  // untranslated
Blockly.Msg.LED_ON = "turn LED on";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP = "Turns the LED on and changes the color.";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP_CB = "Turns the LED on and changes the color. Attention: calli:Bot only supports 7 different colors, the nearest will be chosen.";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP_EDISON = "Turns the LED on.";  // untranslated
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Turns the LED on. Watch out, it's very bright!";  // untranslated
Blockly.Msg.LED_TOOLTIP = "Represents an LED.";  // untranslated
Blockly.Msg.LEFT = "left";  // untranslated
Blockly.Msg.LIGHTVEML_TOOLTIP = "Represents a visible/UV light sensor.";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "8 isik sensorunu temsil eder.";
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gets the current reading from the light sensor in percent.";  // untranslated
Blockly.Msg.LIGHT_TOOLTIP = "Isik sensorunu temsil eder.";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "Boş liste oluştur";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Veri kaydı içermeyen uzunluğu -1 olan bir listeyi verir";
Blockly.Msg.LISTS_CREATE_TITLE = "Liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Bu liste bloğunu yeniden yapılandırmak için bölüm ekle,kaldır veya yeniden çağır.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "İle liste oluşturma";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Listeye bir nesne ekle.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Herhangi sayıda nesne içeren bir liste oluştur.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "ilk";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# sonundan";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "# Kare";
Blockly.Msg.LISTS_GET_INDEX_GET = "Al";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "al ve kaldır";
Blockly.Msg.LISTS_GET_INDEX_LAST = "son";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "rastgele";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "kaldır";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Listedeki ilk öğeyi verir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Listede belirli pozisyondaki bir öğeyi verir.#1 son öğedir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Listede belirli pozisyondaki bir öğeyi verir.#1 ilk öğedir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Listedeki son öğeyi verir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Listedeki rastgele bir öğeyi verir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Kaldırır ve listedeki ilk öğeyi döndürür.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Kaldırır ve listede belirtilen konumdaki bir ögeyi döndürür.  #1 son ögedir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Kaldırır ve listede belirtilen konumdaki bir öğeyi döndürür.  #1 son öğedir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Kaldırır ve listedeki son öğeyi döndürür.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Kaldırır ve listedeki rastgele bir öğeyi verir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Listedeki ilk nesneyi kaldırır.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Liste içerisinde , tanımlanan pozisyondaki bir öğeyi kaldırır . #1 son öğe dir .";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Bir liste içerisinde , tanımlanan pozisyonda ki öğeyi kaldırır.#1 ilk öğedir.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Listedeki son nesneyi kaldırır.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Listedeki rastgele bir nesneyi kaldırır.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "Sondan #'a kadar";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "#'a";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "Sona kadar";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "ilk öğeden alt liste al";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "# işaretinden sonra gelen ifadeye göre  alt liste al , # sondan";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "# dan alt liste al";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Listenin belirli bir kısmının kopyasını yaratır.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "Öğenin ilk varolduğu yeri bul";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "Öğenin son varolduğu yeri bul";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Listedeki öğenin ilk/son oluşumunun indeksini döndürür. Eğer öğe bulunamaz ise -1 döndürür.";
Blockly.Msg.LISTS_INLIST = "Listede";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 boş";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Eğer liste boş ise true döndürür .";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "%1'in uzunluğu";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Bir listenin uzunluğunu verir.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "%1 nesnenin %2 kez tekrarlandığı bir liste yarat";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Verilen bir değerin , belirli bir sayıda tekrarlanmasından oluşan bir liste yaratır .";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "olarak";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "e yerleştir";
Blockly.Msg.LISTS_SET_INDEX_SET = "yerleştir";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Nesneyi listenin başlangıcına ekler.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Bir öğeyi , belirtilen yer pozisyonuna göre , listeye yerleştirir . #1 son öğedir .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Bir öğeyi belirtilen pozisyona göre listeye yerleştirir . #1 ilk öğedir .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Öğeyi listenin sonuna ekle .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Bir öğeyi listeye rast gele ekler .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Bir listenin ilk öğesini yerleştirir .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Bir öğeyi belirtilen yere göre listeye yerleştirir . #1 son öğedir .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Bir öğeyi belirtilen yere göre listeye yerleştirir . #1 ilk öğedir .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Bir listedeki son öğeyi yerleştirir .";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Listeye rast gele bir öğe yerleştirir .";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "metinden liste yap";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "listeden metin yap";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Bir sınırlayıcı tarafından kesilen metinlerin listesini bir metine ekle.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Her sınırlayıcıda kesen metinleri bir metin listesine ayır.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "sınırlayıcı ile";
Blockly.Msg.LIST_BACK_TOOLTIP = "Back to previous view.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false = Olumsuz";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Ya 'True' yada 'False' değerini verir.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "Olumlu";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://tr.wikipedia.org/wiki/E%C5%9Fitsizlikler";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Girilen iki değer birbirine eşitse \"True\" değerini verir.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Girilen ilk değer ikinci değerden daha büyükse \"True\" değerini verir.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Girilen ilk değer ikinci değerden büyük veya eşitse \"True\" değerini verir.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Girilen ilk değer ikinci değerden küçükse \"True\" değerini verir.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Girilen ilk değer ikinci değerden küçük veya eşitse \"True\" değerini verir.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Girilen iki değerde birbirine eşit değilse \"True\" değerini verir.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "%1 değil";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Girilen değer yanlışsa \"True\" değerini verir.Girilen değer doğruysa \"False\" değerini verir.";
Blockly.Msg.LOGIC_NULL = "sıfır";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "sıfır verir.";
Blockly.Msg.LOGIC_OPERATION_AND = "ve";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "veya";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Girilen iki değerde doğruysa \"True\" değerini verir.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Girilen iki değerden en az biri doğruysa \"True\" değerini verir.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "yanlış ise";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "doğru ise";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "'test'deki şartı test eder. Eğer şart doğru ise 'doğru' değeri döndürür, aksi halde 'yanlış' değeri döndürür.";
Blockly.Msg.LOOP = "Tekrarla";
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Bir eylemi sonsuza kadar tekrarlar.";
Blockly.Msg.LOOP_FOREVER = "Sonsuza kadar tekrarla";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://tr.wikipedia.org/wiki/Aritmetik";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "İki rakamın toplamını döndür.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "İki sayının bölümünü döndür.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "İki sayını farkını döndür.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "İki sayının çarpımını döndür.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "İlk sayinin ikincinin kuvvetine yükseltilmişini döndür.";
Blockly.Msg.MATH_CAST_TOCHAR = "cast %1 to Char";  // untranslated
Blockly.Msg.MATH_CAST_TOCHAR_TOOLTIP = "Convert this number into a single ASCII character";  // untranslated
Blockly.Msg.MATH_CAST_TOSTRING = "cast %1 to String";  // untranslated
Blockly.Msg.MATH_CAST_TOSTRING_TOOLTIP = "Convert this number into a string.";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "%1'i %2 kadar değiştir";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "'%1' değişkenine bir sayı ekle.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Yaygın sabitlerden birini döndür:π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (sonsuz).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "%1 i en düşük %2 en yüksek %3 ile sınırla";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Bir sayıyı belirli iki sayı arasında sınırlandır(dahil).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "bölünebilir";
Blockly.Msg.MATH_IS_EVEN = "çift";
Blockly.Msg.MATH_IS_NEGATIVE = "negatif";
Blockly.Msg.MATH_IS_ODD = "tek";
Blockly.Msg.MATH_IS_POSITIVE = "pozitif";
Blockly.Msg.MATH_IS_PRIME = "asal";
Blockly.Msg.MATH_IS_TOOLTIP = "Bir sayinin çift mi tek mi , tam mı, asal mı , pozitif mi, negatif mi, veya tam bir  sayıyla bölünebilirliğini kontrol et.'True' veya 'False' değerini döndür.";
Blockly.Msg.MATH_IS_WHOLE = "Bütün olduğunu";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "%1 ÷ %2 nin kalanı";
Blockly.Msg.MATH_MODULO_TOOLTIP = "İki sayının bölümünden kalanı döndür.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "x";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Bir sayı.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "listenin ortalaması";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "en büyük sayı";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "Listenin medyanı";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "Listenin en küçüğü";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "Listenin modları";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "Listenin rastgele öğesi";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "Listenin standart sapması";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "Listenin toplamı";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Listedeki sayısal değerlerin ortalamasını (aritmetik anlamda) döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Listenin en büyüğünü döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Listenin medyanını döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Listenin en küçüğünü döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Listede ki en yaygın öğe veya öğelerinin listesini döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Listeden rastgele bir element döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Listenin standart sapmasını döndür.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Listede ki tüm sayıların toplamını döndür.";
Blockly.Msg.MATH_POWER_SYMBOL = "üst alma";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://tr.wikipedia.org/wiki/Rastgele_say%C4%B1_%C3%BCretimi";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "Rast gele kesirli sayı , yada parça";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "0.0(dahil) ve 1.0 (hariç) sayıları arasında bir sayı döndür .";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://tr.wikipedia.org/wiki/Rastgele_say%C4%B1_%C3%BCretimi";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "%1 ile %2 arasında rastgele tam sayı üret";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Herhangi iki sayı arasında , sayılar dahil olmak üzere , rastgele bir tam sayı döndür.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding Yuvarlama fonksiyonu için araştırma yapınız, sayfanın Türkçe çevirisi henüz mevcut değil.";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "Yuvarla";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "aşağı yuvarla";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "yukarı yuvarla";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Bir sayı yı yukarı yada aşağı yuvarla .";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://tr.wikipedia.org/wiki/Karek%C3%B6k";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "Kesin";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "Kare kök";
Blockly.Msg.MATH_SINGLE_OP_SQUARE = "square";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Bir sayının tam değerini döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Bir sayının e ' inci  kuvvetini döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Bir sayının doğal logaritmasını döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Bir sayının 10  temelinde logaritmasını döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Bir sayıyı geçersiz olarak döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Bir sayının 10. kuvvetini döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Bir sayının karekökü nü döndür .";
Blockly.Msg.MATH_SINGLE_TOOLTIP_SQUARE = "Return the number multiplied by itself.";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "tire";
Blockly.Msg.MATH_TRIG_ACOS = "akosünüs";
Blockly.Msg.MATH_TRIG_ASIN = "asinüs";
Blockly.Msg.MATH_TRIG_ATAN = "atanjant";
Blockly.Msg.MATH_TRIG_COS = "kosünüs";
Blockly.Msg.MATH_TRIG_HELPURL = "https://tr.wikipedia.org/wiki/Trigonometrik_fonksiyonlar";
Blockly.Msg.MATH_TRIG_SIN = "Sinüs";
Blockly.Msg.MATH_TRIG_TAN = "tanjant";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Bir sayının ters kosunusunu döndür .";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Bir sayının ters sinüsünü döndür .";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Bir sayının ters tanjantını döndür .";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Bir açının kosinüsünü döndür(radyan olarak değil).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Bir açının sinüsünü döndür(radyan olarak değil).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Bir açının tanjantını döndür(radyan olarak değil).";
Blockly.Msg.ME = "Beni";
Blockly.Msg.MENU_ABOUT = "Hakkinda.";
Blockly.Msg.MENU_ABOUT_PROJECT = "about the Open Roberta Project";  // untranslated
Blockly.Msg.MENU_ATTACH = "Ek ...";
Blockly.Msg.MENU_BEGINNER = "Baslat";
Blockly.Msg.MENU_CHANGE = "Degistir..";
Blockly.Msg.MENU_CHECK = "Kontrol et.";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Download the source code of your program on the computer";  // untranslated
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Refresh the source code, if you have changed the NEPO Blocks.";  // untranslated
Blockly.Msg.MENU_CONNECT = "Baglan ..";
Blockly.Msg.MENU_CREATE_LINK = "create program link ...";  // untranslated
Blockly.Msg.MENU_DEBUG_START_TOOLTIP = "Enter Debugging Mode.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_BREAKPOINT_TOOLTIP = "Step forward to the next breakpoint in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_INTO_TOOLTIP = "Step Into to the next block in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_OVER_TOOLTIP = "Step Over to the next block in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STOP_TOOLTIP = "Exit Debugging Mode.";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "Kullaniciyi sil ..";
Blockly.Msg.MENU_EDIT = "Duzenle";
Blockly.Msg.MENU_EDIT_TOOLTIP = "Duzenle";
Blockly.Msg.MENU_EV3 = "Robotu hazirlama";
Blockly.Msg.MENU_EXPERT = "Uzman";
Blockly.Msg.MENU_EXPORT_PROG = "Programi disariya aktar";
Blockly.Msg.MENU_FAQ = "Sikca sorulan sorular";
Blockly.Msg.MENU_GALLERY = "gallery";  // untranslated
Blockly.Msg.MENU_GALLERY_TOOLTIP = "gallery";  // untranslated
Blockly.Msg.MENU_GENERAL = "Genel yardim";
Blockly.Msg.MENU_HELP = "Yardim";
Blockly.Msg.MENU_HELP_TOOLTIP = "Yardim";
Blockly.Msg.MENU_IMPORT_PROG = "Programi ice aktar";
Blockly.Msg.MENU_LANGUAGE = "Diller";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "Diller";
Blockly.Msg.MENU_LIST = "Liste ..";
Blockly.Msg.MENU_LIST_CONF = "Kurulumlarim ..";
Blockly.Msg.MENU_LIST_PROG = "Programlarim ..";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "Ornek programlar ..";
Blockly.Msg.MENU_LOGGING = "Oturum aciliyor";
Blockly.Msg.MENU_LOG_IN = "Kullanici girisi";
Blockly.Msg.MENU_LOG_OUT = "çıkış";
Blockly.Msg.MENU_MANAGE_USERGROUPS = "Manage user groups ...";  // untranslated
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Program basariyla yuklendi.";
Blockly.Msg.MENU_NEW = "Yeni ..";
Blockly.Msg.MENU_PROGRAMMING = "NEPO ile programlama";
Blockly.Msg.MENU_PROPERTIES = "Ozellikler";
Blockly.Msg.MENU_RESET_FIRMWARE = "reset to factory defaults";  // untranslated
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Open/close the source code view.";  // untranslated
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "Open/close the help view.";  // untranslated
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "Open/close the program documentation view.";  // untranslated
Blockly.Msg.MENU_RIGHT_LEGAL_TOOLTIP = "Open/close the legal information view.";  // untranslated
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Open/close the simulation view.";  // untranslated
Blockly.Msg.MENU_RIGHT_TUTORIAL_TOOLTIP = "open/close the tutorial's view";  // untranslated
Blockly.Msg.MENU_ROBOT = "Robot";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "Bilgi";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "Robot bilgisi";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Press <span class='typcn typcn-media-stop'></span>+<span class='typcn typcn-arrow-sorted-down'></span> buttons on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Press <span class='typcn typcn-media-cancel'></span> button on the robot to abort the program!";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "Robotlar";
Blockly.Msg.MENU_ROBOT_WLAN = "WLAN credentials ...";  // untranslated
Blockly.Msg.MENU_RUN_MULT_SIM = "multiple robot simulation ...";  // untranslated
Blockly.Msg.MENU_SAVE = "Kaydet";
Blockly.Msg.MENU_SAVE_AS = "Farkli kaydet ..";
Blockly.Msg.MENU_SHOW_AGAIN = "Hos geldiniz notunu tekrar goster";
Blockly.Msg.MENU_SHOW_CODE = "Kodu goster";
Blockly.Msg.MENU_SIM_BACK = "Geri";
Blockly.Msg.MENU_SIM_DRAW = "Cizim Alani";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "Upload your own simulation background image, it will be appended at the end of the background's list.";  // untranslated
Blockly.Msg.MENU_SIM_MATH = "Matematik Alani";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "Move the robot back to its initial position.";  // untranslated
Blockly.Msg.MENU_SIM_RESCUE = "Kurtarma Alani";
Blockly.Msg.MENU_SIM_ROBERTA = "Roberta Alani";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "Robot'un gorunumunu ac/kapat";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "Alani degistir";
Blockly.Msg.MENU_SIM_SIMPLE = "Basit Alan";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "Start your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_STOP = "Dur";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "Stop your program in the simulation.";  // untranslated
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "Open/close the sensors' data view.";  // untranslated
Blockly.Msg.MENU_SIM_VARIABLES_TOOLTIP = "Open/close the variable data view.";  // untranslated
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad scene";  // untranslated
Blockly.Msg.MENU_SOURCE_CODE_EDITOR = "open source code editor";  // untranslated
Blockly.Msg.MENU_START_BRICK = "Robot uzerinde calistir";
Blockly.Msg.MENU_START_SIM = "Simulasyonda calistir";
Blockly.Msg.MENU_STATE_INFO = "Durum bilgisi";
Blockly.Msg.MENU_STOP_BRICK = "stop program on »$«";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "NEPO-Bloklari";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-Bloklari Baslangic";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-Bloklari Uzman";
Blockly.Msg.MENU_TUTORIAL = "tutorials";  // untranslated
Blockly.Msg.MENU_TUTORIAL_TOOLTIP = "tutorials";  // untranslated
Blockly.Msg.MENU_USER = "Kullanici girisi";
Blockly.Msg.MENU_USERGROUP_LOG_IN = "Log in with user group ...";  // untranslated
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "Kullanici bilgisi";
Blockly.Msg.MENU_USER_TOOLTIP = "Kullanici";
Blockly.Msg.MENU_WLAN_CREDENTIALS = "WLAN credentials";  // untranslated
Blockly.Msg.MENU_ZOOM = "büyüt/kücült";
Blockly.Msg.MENU_ZOOM_IN = "Yakinlastir";
Blockly.Msg.MENU_ZOOM_OUT = "Uzaklastir";
Blockly.Msg.MENU_ZOOM_RESET = "Ölceklendirmeyi sifirla";
Blockly.Msg.MESSAGE_ADDED_USER = "User »$« was added";  // untranslated
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Configuration »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_EDIT_CHECK = "Programiniz simdi kontrol ediliyor!";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Yapilandirma ayarlari kaydedildi.";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Yapilandirma ayarlari »$« olarak kaydedildi";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Your group has been created";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Programiniz kaydedildi";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Programiniz »$« olarak kaydedildi";
Blockly.Msg.MESSAGE_EDIT_START = "Your program »$« will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Robotunuzun aygit yazilim versiyonu ile Open Roberta Lab uyusmuyor. Lütfen bizimle irtibata geciniz.";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Group »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers. The default name »[robot]basis« can't be used here.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Lütfen gecerli bir isim giriniz. Gecerli bir isim, bir harf ile baslar ve sadece harflerden ya da rakamlardan olusabilir.";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Kullanilabilir degil.";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "»$« programi silindi.";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Lütfenrobotu Open Roberta Lab'a tekrar baglayiniz.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Robotunuz $ baglandi.";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "An active robot was disconnected";  // untranslated
Blockly.Msg.MESSAGE_USER_DELETED = "Kullanici silindi";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "User »$« was deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGIN = "Merhaba »$«";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Cikis yaptiniz.";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "Mod";
Blockly.Msg.MODE_ACCELERATION = "acceleration";  // untranslated
Blockly.Msg.MODE_ALTITUDE = "altitude";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "Cevresel Isik";
Blockly.Msg.MODE_ANALOG = "analog value";  // untranslated
Blockly.Msg.MODE_ANGLE = "açı";
Blockly.Msg.MODE_CLAP = "clap";  // untranslated
Blockly.Msg.MODE_CLOSE = "close";  // untranslated
Blockly.Msg.MODE_COLOUR = "renk";
Blockly.Msg.MODE_COMPASS = "compass";  // untranslated
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DATE = "date";  // untranslated
Blockly.Msg.MODE_DEGREE = "derece";
Blockly.Msg.MODE_DIGITAL = "digital value";  // untranslated
Blockly.Msg.MODE_DISTANCE = "uzaklik";
Blockly.Msg.MODE_HUMIDITY = "humidity";  // untranslated
Blockly.Msg.MODE_IDALL = "IDs (list)";  // untranslated
Blockly.Msg.MODE_IDONE = "ID";  // untranslated
Blockly.Msg.MODE_INFO = "information";  // untranslated
Blockly.Msg.MODE_LATITUDE = "latitude";  // untranslated
Blockly.Msg.MODE_LIGHT = "ışık";
Blockly.Msg.MODE_LINE = "line";  // untranslated
Blockly.Msg.MODE_LONGITUDE = "longitude";  // untranslated
Blockly.Msg.MODE_MODULATED = "modulated";  // untranslated
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
Blockly.Msg.MODE_NAMEALL = "names (list)";  // untranslated
Blockly.Msg.MODE_NAMEONE = "name";  // untranslated
Blockly.Msg.MODE_OBSTACLE = "engel";
Blockly.Msg.MODE_OPEN = "open";  // untranslated
Blockly.Msg.MODE_ORIENTATION = "orientation";  // untranslated
Blockly.Msg.MODE_PM10 = "PM10";  // untranslated
Blockly.Msg.MODE_PM25 = "PM2.5";  // untranslated
Blockly.Msg.MODE_PRESENCE = "bulunma";
Blockly.Msg.MODE_PRESSED = "pressed";  // untranslated
Blockly.Msg.MODE_PRESSURE = "pressure";  // untranslated
Blockly.Msg.MODE_PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "oran";
Blockly.Msg.MODE_RCCODE = "R/C code";  // untranslated
Blockly.Msg.MODE_REFLEXION = "reflected light";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "Dönüs";
Blockly.Msg.MODE_SENSOR1 = "Light Sensor1";  // untranslated
Blockly.Msg.MODE_SENSOR2 = "Light Sensor2";  // untranslated
Blockly.Msg.MODE_SOUND = "Ses";
Blockly.Msg.MODE_SPEED = "speed";  // untranslated
Blockly.Msg.MODE_TEMPERATURE = "temperature";  // untranslated
Blockly.Msg.MODE_TILTED = "tilted";  // untranslated
Blockly.Msg.MODE_TIME = "time";  // untranslated
Blockly.Msg.MODE_UNMODULATED = "unmodulated";  // untranslated
Blockly.Msg.MODE_UVLIGHT = "UV light";  // untranslated
Blockly.Msg.MODE_VALUE = "value";  // untranslated
Blockly.Msg.MODE_WORD = "word";  // untranslated
Blockly.Msg.MODE_X = "X-value";  // untranslated
Blockly.Msg.MODE_Y = "Y-value";  // untranslated
Blockly.Msg.MODE_Z = "Z-value";  // untranslated
Blockly.Msg.MOISTURE_TOOLTIP = "Represents a moisture sensor.";  // untranslated
Blockly.Msg.MOTIONKIT = "MotionKit";  // untranslated
Blockly.Msg.MOTIONKIT_DUAL_TOOLTIP = "Sets each MotionKit motor to the specified direction.";  // untranslated
Blockly.Msg.MOTIONKIT_SINGLE_TOOLTIP = "Sets the selected MotionKit motor/motors to the specified direction.";  // untranslated
Blockly.Msg.MOTION_TOOLTIP = "Represents a motion sensor.";  // untranslated
Blockly.Msg.MOTOR = "motor";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Robotu belirli bir hizda baslatir ve belirli bir uzakliktan sonra motoru durdurur.";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Robotu belirli bir hizda baslatir.";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Robotu durdurur.";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Robotu belirli bir dereceye kadar döndürür.";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Robotu döndürür.";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE = "Turns motor A and B on with a specific power.";  // untranslated
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE_CB = "Turns both motors on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTORS_STOP_TOOLTIP = "Stops both motors, A and B.";  // untranslated
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Bir Bot'n Roll şasi motorunu temsil eder.";
Blockly.Msg.MOTOR_BACKWARD = "Geriye dogru.";
Blockly.Msg.MOTOR_BIG = "Büyük";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Bir büyük motoru temsil eder.";
Blockly.Msg.MOTOR_BRAKE = "Fren.";
Blockly.Msg.MOTOR_DEGREE = "Derece.";
Blockly.Msg.MOTOR_DISTANCE = "Uzaklik cm.";
Blockly.Msg.MOTOR_DRIVE = "Sür";
Blockly.Msg.MOTOR_FLOAT = "float";  // untranslated
Blockly.Msg.MOTOR_FOREWARD = "Ileriye dogru.";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Motorun güncel güc degerini alir.";
Blockly.Msg.MOTOR_LEFT = "Sol";
Blockly.Msg.MOTOR_MIDDLE = "Orta";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Orta motoru temsil eder.";
Blockly.Msg.MOTOR_NONE = "hiçbiri";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Motoru calistirir ve dönüslerin/derecelerin uygulanmasindan sonra motoru durdurur.";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_MS = "Turns motor on and stops motor after execution after time has passed.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_RPM = "Turns motor on at speed in rpms (rotation per minute) and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_SERVO = "Sets the servo motor to a specific position in degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "Motoru özel bir gücle calistirir.";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Turns motor A, B or A+B on with a specific power.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE_CB = "Turns left or right motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "Baska güc tüketicisi.";
Blockly.Msg.MOTOR_PAN = "pan";  // untranslated
Blockly.Msg.MOTOR_PORT = "Motor port'u.";
Blockly.Msg.MOTOR_PORT_ARDUINO = "motor 28BYJ-48 port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "Düzenleme.";
Blockly.Msg.MOTOR_RIGHT = "sağ";
Blockly.Msg.MOTOR_ROTATION = "Dönüs.";
Blockly.Msg.MOTOR_ROTATION_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "Dönme yönü.";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Bu motorun gücünü belirler.";
Blockly.Msg.MOTOR_SIDE = "Yan.";
Blockly.Msg.MOTOR_SPEED = "hız";
Blockly.Msg.MOTOR_SPEED_0 = "Motor Speed is 0!";  // untranslated
Blockly.Msg.MOTOR_STEER = "Sür.";
Blockly.Msg.MOTOR_STOP = "Dur";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Bu motoru durdurur.";
Blockly.Msg.MOTOR_TILT = "eğim";
Blockly.Msg.MOTOR_TURN = "döndür";
Blockly.Msg.NAO_ABSOLUTE = "absolute";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Get the current reading from the accelerometer in the given direction";  // untranslated
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Perform the selected animation. TaiChi is a complex and artistic set of moves. Blink will only make the robot blink by using its LEDs. The wink and wipe forehead animation can be performed while siting and standing.";  // untranslated
Blockly.Msg.NAO_ANSWER = "answer";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE = "let NAO";  // untranslated
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Robot will take the selected posture or position. Use the dropdown menu to choose one.";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS = "turn autonomous behaviour";  // untranslated
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Turn the robots autonomous behaviour on or off. While 'on' the robot will react to sounds, move slightly from side to side and try to track faces. Turn it off if this behaviour interrupts your program.";  // untranslated
Blockly.Msg.NAO_BLINK = "blink";  // untranslated
Blockly.Msg.NAO_CAMERA = "camera";  // untranslated
Blockly.Msg.NAO_CAMERA_BOTTOM = "bottom";  // untranslated
Blockly.Msg.NAO_CAMERA_TOP = "top";  // untranslated
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "Returns additional information about the given detected in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_FILENAME = "filename";  // untranslated
Blockly.Msg.NAO_FORGETFACEOF = "forget face of";  // untranslated
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Delete a face previously saved under a given name from the vision recognition database on the robot. ";  // untranslated
Blockly.Msg.NAO_FRAME = "frame";  // untranslated
Blockly.Msg.NAO_FRAME_TORSO = "torso";  // untranslated
Blockly.Msg.NAO_FRAME_WORLD = "world";  // untranslated
Blockly.Msg.NAO_FSR = "force sensitive resistor";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get current volume.";  // untranslated
Blockly.Msg.NAO_GYROMETER = "gyrometer";  // untranslated
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";  // untranslated
Blockly.Msg.NAO_HAND = "hand";  // untranslated
Blockly.Msg.NAO_HAND_TOOLTIP = "Open or close a single hand (wrist) of the robot.";  // untranslated
Blockly.Msg.NAO_HEADSENSOR = "head sensor";  // untranslated
Blockly.Msg.NAO_INTENSITY = "intensity";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HAND = "hand";  // untranslated
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";  // untranslated
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";  // untranslated
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";  // untranslated
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";  // untranslated
Blockly.Msg.NAO_LEARNFACEOF = "learn face of";  // untranslated
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Learn and save a face under a given name in the vision recognition database on the robot.";  // untranslated
Blockly.Msg.NAO_LED = "LED";  // untranslated
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the selected LED(s) off.";  // untranslated
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "all";  // untranslated
Blockly.Msg.NAO_LED_CHEST = "chest";  // untranslated
Blockly.Msg.NAO_LED_EAR = "ear";  // untranslated
Blockly.Msg.NAO_LED_EARS = "ears";  // untranslated
Blockly.Msg.NAO_LED_EYE = "eye";  // untranslated
Blockly.Msg.NAO_LED_EYES = "eyes";  // untranslated
Blockly.Msg.NAO_LED_FOOT = "foot";  // untranslated
Blockly.Msg.NAO_LED_HEAD = "head";  // untranslated
Blockly.Msg.NAO_LED_TOOLTIP = "Set the color of selected LED(s). Eyes and feet LEDs are available.";  // untranslated
Blockly.Msg.NAO_LOOKAT = "look at";  // untranslated
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "Returns additional information about the given NAO mark in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_MOVE = "move";  // untranslated
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "arm";  // untranslated
Blockly.Msg.NAO_PART_ARMS = "arms";  // untranslated
Blockly.Msg.NAO_PART_BODY = "body";  // untranslated
Blockly.Msg.NAO_PART_HEAD = "head";  // untranslated
Blockly.Msg.NAO_PART_LEG = "leg";  // untranslated
Blockly.Msg.NAO_PART_LEGS = "legs";  // untranslated
Blockly.Msg.NAO_PERFORM = "perform";  // untranslated
Blockly.Msg.NAO_PHRASE = "phrase";  // untranslated
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "play file";  // untranslated
Blockly.Msg.NAO_POINTAT = "point at";  // untranslated
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "crouch";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBACK = "lie back";  // untranslated
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "lie belly";  // untranslated
Blockly.Msg.NAO_POSTURE_REST = "rest";  // untranslated
Blockly.Msg.NAO_POSTURE_SIT = "sit";  // untranslated
Blockly.Msg.NAO_POSTURE_SITRELAX = "sit relaxed";  // untranslated
Blockly.Msg.NAO_POSTURE_STAND = "stand";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDINIT = "stand init";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDZERO = "stand zero";  // untranslated
Blockly.Msg.NAO_QQVGA = "160*120";  // untranslated
Blockly.Msg.NAO_QVGA = "320*240";  // untranslated
Blockly.Msg.NAO_RANDOMEYES = "random eyes";  // untranslated
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "The color of the eyes is changed randomly for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RASTA = "rasta";  // untranslated
Blockly.Msg.NAO_RASTA_TOOLTIP = "The color of the eyes is changed between green, yellow and red for a specified amount of time entered in milliseconds.";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD = "speech recognizer of";  // untranslated
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Returns a word from the given list when recognized by NAO";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO = "record video";  // untranslated
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Records a video and saves it on the robot. Access the robots file system to view the video.";  // untranslated
Blockly.Msg.NAO_RELATIVE = "relative";  // untranslated
Blockly.Msg.NAO_RESOLUTION = "resolution";  // untranslated
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of selected LED(s) in a range from 0 to 100. Ears, head and chest LEDs are available";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "lock motors";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot will be turned on or off. Be aware that releasing the leg motors while the robot is standing may result in robot collapsing.";  // untranslated
Blockly.Msg.NAO_STOP = "stop movement";  // untranslated
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "tai chi";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE = "take picture";  // untranslated
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";  // untranslated
Blockly.Msg.NAO_WALK = "walk";  // untranslated
Blockly.Msg.NAO_WALKTO = "walk to";  // untranslated
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";  // untranslated
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Makes the robot walk infinitely";  // untranslated
Blockly.Msg.NAO_WALK_TOOLTIP = "Makes the robot walk a distance entered in cm. Distances below 10cm might lead to no movement at all. Depending on your robot and the surface the robots is walking on the distance might not be exact.";  // untranslated
Blockly.Msg.NAO_WAVE = "wave";  // untranslated
Blockly.Msg.NAO_WIPE_FOREHEAD = "wipe forehead";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Yeni değişken...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Yeni değişken ismi :";
Blockly.Msg.NO = "Hayir";
Blockly.Msg.NXTBRICK_TOOLTIP = "NXT Brick'ini kendisine bağlı tüm aktüatörleri ve sensörleriyle gösterir. Basılabilir düğmeler, ekranlar gibi devre kartına monte edilmiş aktüatörler ve sensörler de mevcuttur.";
Blockly.Msg.OFF = "Kapali";
Blockly.Msg.OLDER_THEN_14 = "I am 16 or older than 16!";  // untranslated
Blockly.Msg.ON = "açık";
Blockly.Msg.ORA_ACCESS_RIGHT_CHANGED = "The shared right for user »$« is updated!";  // untranslated
Blockly.Msg.ORA_ACCESS_RIGHT_DELETED = "The shared right for user »$« is deleted!";  // untranslated
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Your are not allowed to share. Please activate your account! <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "Robot kurulumu sunucu üzerinde bulunamadi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Robot kurulumu, robotun programlama diline dönüstürülemedi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Program, makine diline dönüstürülemedi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "Program yaratilamadi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED_WITH_PARAMETERS = "The program could not be generated. Pin {PIN} is incorrect in block {BLOCK}";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Program, robotun programlama diline dönüstürülemedi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Program, içsel bir hata yüzünden kaydedilemedi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Program, robotun programlama diline dönüstürülemedi.";
Blockly.Msg.ORA_COMPILERWORKFLOW_SUCCESS = "The program build succeeded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Robot konfigürasyonunu silerken bir hata oldu, lütfen tekrar deneyin!";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Konfigürasyon silindi.";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Konfigürasyon ismi gecerli bir tanimlayici degil.";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Konfigürasyon yüklendi.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "Robot konfigürasyonu veri tabaninda bulunamadi.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Konfigürasyon yüklendi.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Robot konfigürasyonu kaydedilirken bir hata olustu.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "Robot konfigürasyonu veri tabanina kaydedilirken bir hata olustu.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Konfigürasyon kaydedildi.";
Blockly.Msg.ORA_FIRMWARE_RESET_ERROR = "Loading the original program failed!";  // untranslated
Blockly.Msg.ORA_FIRMWARE_RESET_SUCCESS = "Your original program will run in a moment!";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Your program »$« couldn't be uploaded to the gallery, it seems as if it is already uploaded.";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Your program »$« is now in the gallery!";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR = "There was an error while adding new members the user group. Please reload the current form and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR_LIMIT_REACHED = "You can not have more than 99 members in one user group.";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR_SMALLER_THAN_ONE = "To add automatically generated members, you must enter an integer that is bigger or equals to 1.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR = "There was an error on creating the user group. Please try different inputs or try again later. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_GROUP_ALREADY_EXISTS = "You already have a user group with the that name. Please enter another name.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_GROUP_LIMIT_REACHED = "You reached the limit of user groups. You can not have more than 100 user groups in total.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "This group already exists";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR = "There was an error while deleting the user group. Please reload the user group list and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR_GROUP_DOES_NOT_EXISTS = "Could not find a user group with the specified name. Please reload the list of your user groups and try again.";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR_GROUP_HAS_MEMBERS = "One or more members of the user group have logged in in the past and created programs. In order to delete the user group, delete its members first.";  // untranslated
Blockly.Msg.ORA_GROUP_ERROR_MISSING_RIGHTS_TO_BE_GROUP_OWNER = "You are not allowed to be a user group owner. Your account must have an validated email attached.";  // untranslated
Blockly.Msg.ORA_GROUP_ERROR_NAME_INVALID = "The name of the user group is invalid. Please do not use special characters and enter at least one character.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ALL_ERROR = "There was an error while aquiring the list of user groups. Please reload the menu and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ONE_ERROR = "There was an error while aquiring the user group. Please reload the menu and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ONE_ERROR_NOT_FOUND = "Could not find a user group with the specified name.";  // untranslated
Blockly.Msg.ORA_GROUP_MEMBER_ERROR_ALREADY_EXISTS = "A member with the given name already exists in the user group.";  // untranslated
Blockly.Msg.ORA_GROUP_MEMBER_SHARE_RESTRICTION_EXCEEDED = "You can only share programs with other members of your user group. The owner of your user group can automatically read your programs.";  // untranslated
Blockly.Msg.ORA_GROUP_RENAME_ERROR = "There was an error while changing the name of the user group. Please reload the current form and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_TO_SHARE_DOES_NOT_EXIST = "You do not own a user group with the name you entered. <br />Try again with a different name!";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR = "There was an error while updating the user group. Please reload the user group list and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR_NOT_FOUND = "Could not find a user group with the specified name. Please reload the current form and try again.";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR_NOT_OWNER = "Could not update the user group. You are not the owner of that group.";  // untranslated
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "You do not like program »$« anymore!";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "You couldn't like program »$«. Maybe you have already liked it.";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "You like program »$« now!";  // untranslated
Blockly.Msg.ORA_LIST_CREATE_WITH_ERROR = "Error: This block may be used only within a variable declaration.";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Sahip yok.";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Program , konfigürasyonla uyumlu degil.";
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Konfigürasyonu silerken bir hata oldu. Lütfen tekrar deneyiniz!";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Program silindi.";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Programinizin ismi sistemde halihazirda kullaniliyor. Lütfen baska bir isim secin ve tekrar deneyin!";
Blockly.Msg.ORA_PROGRAM_GET_ALL_ERROR_USER_NOT_FOUND = "Can not load the programs of the specified user. Please reload the lab and try again.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Programlar yüklendi.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Program bulunamadi.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Giris yapmadiniz, lütfen kullanici adi ve sifrenizle giris yapiniz ya da yeni bir kullanici olusturunuz.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Program yüklendi.";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "Bu program gecerli bir NEPO programi degil ve yüklenemez!";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "Menüde secilen robottan farkli bir robot tipine program aktarmaya calisiyorsunuz. <br> Lütfen robot menüsünden robot tipini degistirin ve tekrar aktarmayi deneyin!";
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "There are errors in your program or configuration. Please check the messages.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Bu program halihazirda mevcut.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "Bu program üzerinde degisiklik yapmak icin yetkiniz yok!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Bu program, kisa süre önce baskasi tarafindan degistirildi. Degisiklilerinizi yeni bir program icinde kaydedebilirsiniz, >Farkli Kaydet<'i secin!";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Program bulunamadi, bu yüzden güncellestirme yapmak mümkün degil.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Program kaydedildi.";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Paylasmak istediginiz program";
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "It seems that we do not support the desired robot system!<br>Please choose another one.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Robot üzerindeki aygit yazilimini güncellestirirken bir hata olustu.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Aygit yazilimi güncellendi.";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Bagli robot yok. Robotunuzun açık oldugunu kontrol edin, sunucuya baglayin ve robotunuzun sifresini menüde bulunan robot-baglan secenegi altindan girin. <br/> Eger bunu yaparken bir problem yasarsaniz, lütfen yardim sayfalarimiza bakin.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Robot, bir çalış komutu beklemiyor.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Robot bekledi ve şimdi jar robota gönderildi.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_CALLIOPE2016 = "Your program »$« is downloaded to Calliope, press the reset button to start it!";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN_NXT = "Your program »$« is downloaded to the NXT, start it on the robot!";  // untranslated
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Switched to robot system »$«!";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Sunucu-Hatasi.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Robotunuzun açık ve sunucuya bagli oldugunu kontrol edin. <br /> Eger bunu yaparken bir problem yasarsaniz, lütfen yardim sayfalarimiza bakin.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "Menüde secilen robottan farkli bir robot tipine baglanmaya calisiyorsunuz. <br> Lütfen robot menüsünden robot tipini degistirin ve tekrar baglanmayi deneyin!";
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Belirtec ayarlandi.";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "Arac kutusunu silerken bir hata oldu, lütfen tekrar deneyin!";
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Arac kutusu silindi.";
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Arac kutusu ismi gecerli bir belirleyici degil.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Arac kutusu yüklendi.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Arac kutusu veri tabaninda bulunamadi.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Arac kutusu yüklendi.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "Arac kutusu kaydedilirken bir hata oldu.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "Konfigurasyon veri tabanina kaydedilirken bir hata oldu.";
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Arac kutusu kaydedildi.";
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "The link is not valid anymore. Please ask for resending your verification mail again";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »support-o-r@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Your account is successfully verified! Please login!";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Your account name or your user name is to long. Please make sure that they are not longer then 25 digits. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "You are using some one or more special characters in your account name! Please remove them. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Tüm gerekli veri giris alanlarinin dolduruldugunu kontrol et.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Bu kullanici adi halihazirda veri tabaninda mevcut, lütfen baska bir kullanici adi secin.";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "Kullanici basariyla olusturuldu.";
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Your account is currently not verified, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_HAS_GROUPS = "You have user groups associated with your account. Please delete them first, before you delete your account.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Kullaniciyi silerken hata olustu.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Kullaniciyi veritabindan silerken hata olustu.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Kullanici basariyla silindi.";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "Taninmayan email adresi, belki harfleri yanlis yazdiniz!";
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "Bu email adresiyle bir hesap mevcut. Lütfen baska bir email adresi giriniz!";
Blockly.Msg.ORA_USER_ERROR_NOT_LOGGED_IN = "You need to be logged in to a user account to use this function. If you are logged in, please log out and in again.";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Kullanicilar yüklendi!";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Kullanici adi veya sifre yanlis. Lütfen tekrar deneyiniz!";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Oturum acma basarili.";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "This user already belongs to the group";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "Link artik gecerli degil. Sifrenizi hala hatirlamiyorsaniz, lütfen tekrar parola sifirlama talebinde bulunun!";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "Üzgünüz, size email gönderemiyoruz, lütfen >>support-o-r@iais.fraunhofer.de<< ile iletisime gecin.";
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "Size email gönderdik, lütfen posta kutunuzu kontrol ediniz!";
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "User was not found";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "Programi paylasmak istediginiz kullanici mevcut degil. <br /> Tekrar deneyin!";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Kendinizle program paylasamazsiniz.";
Blockly.Msg.ORA_USER_UPDATE_ERROR_NOT_SAVED_TO_DB = "The password could not be saved to the database. Are you sure that you entered the old password correctly?";  // untranslated
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Sifreniz basariyla degistirildi!";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.PARTICLE_TOOLTIP = "Represents SDS011 particle sensor.";  // untranslated
Blockly.Msg.PASSWORD = "Password";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_PULL = "pull";  // untranslated
Blockly.Msg.PIN_PULL_DOWN = "down";  // untranslated
Blockly.Msg.PIN_PULL_NONE = "none";  // untranslated
Blockly.Msg.PIN_PULL_UP = "up";  // untranslated
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Sets the pull of the chosen pin";  // untranslated
Blockly.Msg.PIN_WRITE = "write";  // untranslated
Blockly.Msg.PITCH = "pitch";  // untranslated
Blockly.Msg.PLAY = "Oynat";
Blockly.Msg.PLAY_DURATION = "Süre ms";
Blockly.Msg.PLAY_EIGHTH = "eighth note";  // untranslated
Blockly.Msg.PLAY_FILE = "Dosya";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Bir ses dosyasi oynatir.";
Blockly.Msg.PLAY_FREQUENZ = "frekans Hz";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Güncel ses siddet degerini alir.";
Blockly.Msg.PLAY_HALF = "half note";  // untranslated
Blockly.Msg.PLAY_NOTE = "note";  // untranslated
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Plays a music note";  // untranslated
Blockly.Msg.PLAY_QUARTER = "quarter note";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Ses siddetini belirler.";
Blockly.Msg.PLAY_SIXTEENTH = "sixteenth note";  // untranslated
Blockly.Msg.PLAY_TONE = "Ton";
Blockly.Msg.PLAY_TONE_TOOLTIP = "Ton calar.";
Blockly.Msg.PLAY_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "Siddet";
Blockly.Msg.PLAY_WHOLE = "whole note";  // untranslated
Blockly.Msg.POPUP_ABOUT_JOIN = "Yardim etmek istiyorum.";
Blockly.Msg.POPUP_ABOUT_TEXT = "Open Roberta Lab, cocuklara ve yetiskinlere, farkli robot sistemlerini kolayca programlamayi saglayan, bulut bilisim entegrasyonlu bir programlama ortamidir. Bu platform, tamamen acik kaynak kodludur bu yüzden katkida bulunulmasi arzulanir! Yazilim ve acik kaynak kod gelistirme araclarinin ikisi de Fraunhofer sunuculari araciligiyla ulasilinabilir.";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Open Roberta Lab, <a href='http://www.roberta-home.de/'>»Roberta – Robotlarla Ögrenme«</a> girisimiyle Fraunhofer IAIS tarafindan gelistirilen  acik kaynak kodlu bir programlama platformudur.";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta, Google Almanya ile birlikte, ögrencilerin, ögretmenlerin, ve okullarin egitimsel robotlari programlamadaki engellerini azaltmak icin baslatilmistir. Open Roberta, Google.org (2014-2015) tarafindan 1 Milyon Euro'yla finanse edilmistir.";
Blockly.Msg.POPUP_AGE = "Age";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "Dikkat";
Blockly.Msg.POPUP_BACKGROUND_STORAGE = "The Open Roberta Lab can automatically load your simulation background on your next visits. For this purpose, we will save data in the Local Storage on your computer. <a href='https://www.roberta-home.de/en/privacy-policy-open-roberta-lab/' target='_blank'>More information in our privacy policy.</a>";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD = "Program ya da konfigürasyonunuzda kaydetmediginiz degisiklikler var. Giris yapin ve program ya da konfigürasyonunuzu kaydedin.";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "Program ya da konfigürasyonunuzda kaydetmediginiz degisiklikler var.";
Blockly.Msg.POPUP_CANCEL = "Iptal et";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "Parolayi degistir ...";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Press »OK« to discard your work. Press »Cancel« to stay here and save your work first.</i>";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Bu konfigürasyonu silmek istediginize emin misiniz?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Do you really want to delete these groups?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Bu programi silmek istediginize emin misiniz?";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Do you really want to remove these users below from the current group?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Robotunuz icin yeni bir aygit yazilimi versiyonu mevcut. Programlarinizi eski versiyonla calistirmayi deneyebilirsiniz fakat robotunuzu simdi güncellemeniz, en iyi secenek!  Sadece >>Update now<<'a tiklayin.";
Blockly.Msg.POPUP_CONTINUE = "Yine de devam et";
Blockly.Msg.POPUP_CREATE_BOOKMARK = "Create a browser bookmark now to save your robot selection!";  // untranslated
Blockly.Msg.POPUP_DISPLAY_HEADER = "output of your program";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I've changed the download folder of my browser permanently. Don't show this popup again and download my programs directly.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1 = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_EDISON = "Connect your Edison via the EdComm cable and press the round button";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_SENSEBOX = "Check that your device is in programming mode (LED dimming in a pattern), if not, double press the red button. Right click on you program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2 = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2_EDISON = "click on »Play« to play your program to Edison and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3 = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3_EDISON = "wait until Edison beeps, then unplug.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4 = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_EDISON = "Press the triangle button to start your program on your Edison<br><span style='font-size: 14px;'>Having trouble? Turn up the volume and check that all sound enhancements are turned off</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_SENSEBOX = "now click on the »Save« button on the bottom right.";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Simdi güncelle";
Blockly.Msg.POPUP_EMAIL = "E-posta";
Blockly.Msg.POPUP_EMAIL_SEND = "Simdi gönder";
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don't change it, it probably won't work anymore. It's already copied to your clipboard!</br>$";  // untranslated
Blockly.Msg.POPUP_MULTIPLE_ROBOTS = "Select multiple programs for the simulation";  // untranslated
Blockly.Msg.POPUP_MULTROBOTS_NOPROGRAMS = "Please create and store at least two programs which then can be executed each by a simulated robot!";  // untranslated
Blockly.Msg.POPUP_NAME = "Isim";
Blockly.Msg.POPUP_NEW_PASSWORD = "Yeni parola";
Blockly.Msg.POPUP_OLD_PASSWORD = "Eski parola";
Blockly.Msg.POPUP_PASSWORD = "Parola";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "Parolayi sifirla ...";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Program beklenmedik bir sekilde calismayi durdurdu!";
Blockly.Msg.POPUP_REGISTER_USER = "Simdi kaydol";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Sifreyi tekrar girin";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Voltaj";
Blockly.Msg.POPUP_ROBOT_NAME = "Isim";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Öncelikle robotunuzla bir baglanti saglamalisiniz.";
Blockly.Msg.POPUP_ROBOT_STATE = "Durum";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "Mesgul";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "Baglanti koptu";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "Bekle";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "Sistem";
Blockly.Msg.POPUP_ROBOT_WAIT = "Bekleme zamani";
Blockly.Msg.POPUP_SCANNED_ROBOTS = "found robots";  // untranslated
Blockly.Msg.POPUP_STARTUP_COOKIES = "Icerik kisisellestirilmesi ve trafik analizimiz icin cerezleri kullaniyoruz.";
Blockly.Msg.POPUP_STARTUP_HELP = "Yardima ihtiyaciniz var mi?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Tamam, bu ekrani bir daha bana gösterme ve secenegimi hatirla.";
Blockly.Msg.POPUP_STARTUP_START = "Sisteminizi secin!";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";  // untranslated
Blockly.Msg.POPUP_TOUR = "Bir tur atin";
Blockly.Msg.POPUP_USERNAME = "Kullanici adi";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "Giris yapmadiniz";
Blockly.Msg.POPUP_VALUE = "Deger";
Blockly.Msg.POPUP_WLAN_SECURITY_INFORMATION = "Please note that the data provided in this dialog window is private and will not be stored in the OpenRoberta lab; it will only be used for program creation and during the compilation process. Make sure that for each new session you enter these credentials again. Please keep in mind that exposing this information to public may pose security risks.";  // untranslated
Blockly.Msg.POPUP_WLAN_SSID = "SSID";  // untranslated
Blockly.Msg.PORT_ANKLE = "ankle";  // untranslated
Blockly.Msg.PORT_BUMPER = "bumper";  // untranslated
Blockly.Msg.PORT_ELBOW = "elbow";  // untranslated
Blockly.Msg.PORT_HAND = "hand";  // untranslated
Blockly.Msg.PORT_HEAD = "head";  // untranslated
Blockly.Msg.PORT_HIP = "hip";  // untranslated
Blockly.Msg.PORT_INTERNAL = "Port internal";  // untranslated
Blockly.Msg.PORT_KNEE = "knee";  // untranslated
Blockly.Msg.PORT_SHOULDER = "shoulder";  // untranslated
Blockly.Msg.PORT_WRIST = "wrist";  // untranslated
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Represents a potentiometer.";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "Eğer ifadelerine izin ver";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "ile :";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Kullanıcı tanımlı fonksiyonu çalıştır '%1' .";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Kullanıcı tanımlı fonksiyonu çalıştır '%1' ve çıktısını kullan .";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "ile :";
Blockly.Msg.PROCEDURES_CREATE_DO = "'%1' oluştur";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Bu işlevi açıkla...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "birşey yap";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "e";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Çıktı vermeyen bir fonksiyon yaratır .";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "Geri dön";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Çıktı veren bir fonksiyon oluşturur.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Uyarı: Bu fonksiyon yinelenen parametreler vardır.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Fonksiyon tanımı vurgulamak";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Eğer değer doğruysa, ikinci değere geri dön.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Uyarı: Bu blok yalnızca bir fonksiyon tanımı içinde kullanılır.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "girdi adı:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "İşleve bir girdi ekleyin.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "girdiler";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Bu işlevin girdilerini ekleyin, çıkarın, ya da yeniden sıralayın.";
Blockly.Msg.PROCEDURES_TITLE = "Prosedür";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Hata: Bu blok sadece ... icerisinde kullanilabilir";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Hata: Bu blok sadece ... deklare eden bir döngü icerisinde kullanilabilir";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected programs.";  // untranslated
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Click here to delete your program.";  // untranslated
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Click here to load your robot configuration in the configuration environment.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Click here to share your program with a friend.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Do you really want to share your program with everybody? If you are not sure please check the question and answers <a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>here</a>.";  // untranslated
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Click here to upload your program to the gallery hence share it with all other users.";  // untranslated
Blockly.Msg.PROGRAM_ERROR_EXPRBLOCK_PARSE = "This expression is syntactically incorrect.";  // untranslated
Blockly.Msg.PROGRAM_ERROR_EXPRBLOCK_TYPECHECK = "This expression is invalid. The type check failed.";  // untranslated
Blockly.Msg.PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.PULSETOOLTIP = "Represents a pulse sensor.";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Gets the RSSI of the last package.";  // untranslated
Blockly.Msg.REDO = "Yinele";
Blockly.Msg.RELAY = "relay";  // untranslated
Blockly.Msg.RELAY_ARDUINO = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.RELAY_TOOLTIP = "Represents a relay.";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Yorumu Sil";
Blockly.Msg.RENAME_VARIABLE = "Değişkeni yeniden adlandır...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Tüm '%1' değişkenlerini yeniden isimlendir:";
Blockly.Msg.RESEND_ACTIVATION = "resend verification email";  // untranslated
Blockly.Msg.RETURN = "return";  // untranslated
Blockly.Msg.RFID_TOOLTIP = "Represents an RFID reader.";  // untranslated
Blockly.Msg.RGBLED_TOOLTIP = "Represents an RGB LED.";  // untranslated
Blockly.Msg.RGB_LED_TOOLTIP = "Turns the LED on or off and changes the color.";  // untranslated
Blockly.Msg.RIGHT = "right";  // untranslated
Blockly.Msg.ROLL = "roll";  // untranslated
Blockly.Msg.ROTATIONS_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.SAY = "say";  // untranslated
Blockly.Msg.SAY_PARAMETERS_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 0-100) and the pitch of the voice (range: 0-100) with the input fields";  // untranslated
Blockly.Msg.SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text.";  // untranslated
Blockly.Msg.SDCARD_TOOLTIP = "Represents an SD card.";  // untranslated
Blockly.Msg.SEND_DATA = "Gönderilecek veri";
Blockly.Msg.SEND_DATA_SENSEMAP = "openSenseMap";  // untranslated
Blockly.Msg.SEND_DATA_TO = "send data to";  // untranslated
Blockly.Msg.SEND_DATA_TO_OSM_TOOLTIP = "This block is used to send data from sensors to the openSenseMap. Please configure the IDs in the configuration prior to the usage of this block.";  // untranslated
Blockly.Msg.SENSEBOXBRICK_TOOLTIP = "Represents the senseBox. Please configure here the id's from the openSenseMap, if you want to use them.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_X_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the X axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_X_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the X axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Y_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the Y axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Y_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the Y axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Z_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the Z axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Z_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the Z axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_AMBIENTLIGHT = "ambientlight sensor";  // untranslated
Blockly.Msg.SENSOR_ANALOGOUT = "sensor analog";  // untranslated
Blockly.Msg.SENSOR_ANY = "anyplace";  // untranslated
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Returns true, if the selected part of the arm is touched, otherwise false.";  // untranslated
Blockly.Msg.SENSOR_BATTERY = "Voltaj (V)";
Blockly.Msg.SENSOR_BOTTOM = "bottom";  // untranslated
Blockly.Msg.SENSOR_CALIBRATE = "calibrate";  // untranslated
Blockly.Msg.SENSOR_CODE = "code pad";  // untranslated
Blockly.Msg.SENSOR_COLOUR = "Renk sensörü";
Blockly.Msg.SENSOR_COLOUR_EDISON = "line tracker";  // untranslated
Blockly.Msg.SENSOR_COMPASS = "Pusula sensörü";
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT compass sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE = "face detector";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Returns one or an array of IDs (number) of the last detected NAO Mark(s). If no marks are detected, -1 or an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.SENSOR_DIGITALOUT = "sensor digital";  // untranslated
Blockly.Msg.SENSOR_DROP = "drop sensor";  // untranslated
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gets the current reading from the drop sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_DROP_OFF = "drop-off sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT = "current sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "Kodlayici";
Blockly.Msg.SENSOR_FLAME = "flame sensor";  // untranslated
Blockly.Msg.SENSOR_FSR = "force-sensing resistor";  // untranslated
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesture";  // untranslated
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "active?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face up.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Returns »true« if it is free falling.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Returns »true« if it is shaken.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Is the system in the selected state?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is upright.";  // untranslated
Blockly.Msg.SENSOR_GET = "get";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "Degeri al";
Blockly.Msg.SENSOR_GPS_ALTITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the altitude in meters.";  // untranslated
Blockly.Msg.SENSOR_GPS_DATE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the current date.";  // untranslated
Blockly.Msg.SENSOR_GPS_LATITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the latitude in degree.";  // untranslated
Blockly.Msg.SENSOR_GPS_LONGITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the longitude in degree.";  // untranslated
Blockly.Msg.SENSOR_GPS_SENSEBOX = "GPS receiver";  // untranslated
Blockly.Msg.SENSOR_GPS_SPEED_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the speed in km/h.";  // untranslated
Blockly.Msg.SENSOR_GPS_TIME_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the current time.";  // untranslated
Blockly.Msg.SENSOR_GROVE = "Grove";  // untranslated
Blockly.Msg.SENSOR_GYRO = "Jiroskop";
Blockly.Msg.SENSOR_GYRO_TILTED_GETSAMPLE_TOOLTIP_WEDO = "Is the tilt sensors position the indicated manner?";  // untranslated
Blockly.Msg.SENSOR_GYRO_WEDO = "tilt sensor";  // untranslated
Blockly.Msg.SENSOR_GYRO_X_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the X axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_GYRO_Y_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the Y axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_GYRO_Z_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the Z axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_HTCOLOUR = "HT colour sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY = "humidity sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_ARDUINO = "humidity sensor DHT11";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Gets the current reading from the humidity sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_SENSEBOX = "humidity/temperature sensor HDC1080";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "Kizilötesi sensörü";
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP_WEDO = "Gets the current relative distance from the infrared sensor. The values are between 1, close, and 10, further away.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER = "HT infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_EDISON = "IR seeker";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gets the position of an infrared beacon.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_RCCODE_GETSAMPLE_TOOLTIP_EDISON = "Receives a message from a remote control.";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "is arm";  // untranslated
Blockly.Msg.SENSOR_IS_PIN = "is";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "Basildi?";
Blockly.Msg.SENSOR_IS_TILTED = "tilted?";  // untranslated
Blockly.Msg.SENSOR_IS_TOUCHED = "touched?";  // untranslated
Blockly.Msg.SENSOR_JOYSTICK = "joystick";  // untranslated
Blockly.Msg.SENSOR_KEY = "Buton";
Blockly.Msg.SENSOR_KEYPAD = "keypad";  // untranslated
Blockly.Msg.SENSOR_KEY_ANY = "Herhangi bir";
Blockly.Msg.SENSOR_KEY_DOWN = "Asagi";
Blockly.Msg.SENSOR_KEY_ENTER = "Gir";
Blockly.Msg.SENSOR_KEY_ESCAPE = "çıkış";
Blockly.Msg.SENSOR_KEY_LEFT = "sol";
Blockly.Msg.SENSOR_KEY_PLAY = "play";  // untranslated
Blockly.Msg.SENSOR_KEY_REC = "record";  // untranslated
Blockly.Msg.SENSOR_KEY_RIGHT = "sağ";
Blockly.Msg.SENSOR_KEY_STOP = "stop";  // untranslated
Blockly.Msg.SENSOR_KEY_UP = "yukari";
Blockly.Msg.SENSOR_LIGHT = "ışık sensörü";
Blockly.Msg.SENSOR_LIGHTVEML = "visible/UV light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_LIGHT_GETSAMPLE_TOOLTIP = "Reads the current value of the visible light sensor in lux. The value is between 0 to 220000 lux.";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_UVLIGHT_GETSAMPLE_TOOLTIP = "Reads the current value of the UV light sensor in μW/cm². The value is between 0 and more than 1000.";  // untranslated
Blockly.Msg.SENSOR_LIGHT_LIGHT_GETSAMPLE_TOOLTIP_EDISON = "Gets the current reading of the light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHT_LINETRACKER = "line tracker";  // untranslated
Blockly.Msg.SENSOR_MIC = "microphone";  // untranslated
Blockly.Msg.SENSOR_MOISTURE = "moisture sensor";  // untranslated
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the moisture sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_MOTION = "motion sensor";  // untranslated
Blockly.Msg.SENSOR_MOTION_ARDUINO = "motion sensor HC-SR501";  // untranslated
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Gets the current reading from the motion sensor (true/false).";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "ms icerisinde";
Blockly.Msg.SENSOR_OBSTACLEDETECTOR = "Obstacle detector";  // untranslated
Blockly.Msg.SENSOR_OUT = "sensor";  // untranslated
Blockly.Msg.SENSOR_OUT_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_OUT_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PARTICLE = "SDS011 particle sensor";  // untranslated
Blockly.Msg.SENSOR_PARTICLE_PM10_GETSAMPLE_TOOLTIP = "Reads the current value of PM10 from the particle sensor.";  // untranslated
Blockly.Msg.SENSOR_PARTICLE_PM25_GETSAMPLE_TOOLTIP = "Reads the current value of PM2.5 from the particle sensor.";  // untranslated
Blockly.Msg.SENSOR_PIN = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH = "pin";  // untranslated
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSEHIGH_GETSAMPLE_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSELOW_GETSAMPLE_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER = "potentiometer";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gets the current reading from the potentiometer in volts (0-5V).";  // untranslated
Blockly.Msg.SENSOR_PULSE = "pulse sensor";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gets the current reading from the pulse sensor.";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the pulse sensor. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "radio RSSI sensor";  // untranslated
Blockly.Msg.SENSOR_RESET = "sıfırla";
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_RESET_TOOLTIP_EDISON = "Resets the sensors and clears the values.";  // untranslated
Blockly.Msg.SENSOR_RFID = "RFID reader";  // untranslated
Blockly.Msg.SENSOR_RFID_ARDUINO = "RFID-RC522 reader";  // untranslated
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gets the current reading from the RFID reader.";  // untranslated
Blockly.Msg.SENSOR_RSSI = "signal strength";  // untranslated
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gets the signal strength from the last received message.";  // untranslated
Blockly.Msg.SENSOR_SONAR = "sonar";
Blockly.Msg.SENSOR_SOUND = "ses sensörü";
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "microphone";  // untranslated
Blockly.Msg.SENSOR_SOUND_CLAP_GETSAMPLE_TOOLTIP_EDISON = "Is a clap detected?";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE = "temperature sensor";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_ARDUINO = "temperature sensor TMP36";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_PRESSURE_GETSAMPLE_TOOLTIP = "Gets the current reading of the air pressure sensor in Pascal. Normal air pressure is 101325 Pascal.";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_SENSEBOX = "temperature/pressure sensor BMP280";  // untranslated
Blockly.Msg.SENSOR_TIME = "zaman";
Blockly.Msg.SENSOR_TIMER = "zamanlayici";
Blockly.Msg.SENSOR_TOP = "top";  // untranslated
Blockly.Msg.SENSOR_TOUCH = "Dokunmatik sensör";
Blockly.Msg.SENSOR_ULTRASONIC = "ultrasonik sensör";
Blockly.Msg.SENSOR_ULTRASONIC_ARDUINO = "ultrasonic sensor HC-SR04";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm.";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm. Minimum distance tp measure is 3 cm.";  // untranslated
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s²";  // untranslated
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";  // untranslated
Blockly.Msg.SENSOR_UNIT_CM = "cm";  // untranslated
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";  // untranslated
Blockly.Msg.SENSOR_UNIT_DEGREE_PER_SECOND = "°/s";  // untranslated
Blockly.Msg.SENSOR_UNIT_IRRADIANCE = "μW/cm²";  // untranslated
Blockly.Msg.SENSOR_UNIT_LUX = "lx";  // untranslated
Blockly.Msg.SENSOR_UNIT_METER = "m";  // untranslated
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";  // untranslated
Blockly.Msg.SENSOR_UNIT_MM = "mm";  // untranslated
Blockly.Msg.SENSOR_UNIT_MS = "ms";  // untranslated
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";  // untranslated
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";  // untranslated
Blockly.Msg.SENSOR_UNIT_PASCAL = "Pascal";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";  // untranslated
Blockly.Msg.SENSOR_UNIT_PM = "μg/m³";  // untranslated
Blockly.Msg.SENSOR_UNIT_SPEED = "km/h";  // untranslated
Blockly.Msg.SENSOR_UNIT_VOLT = "V";  // untranslated
Blockly.Msg.SENSOR_VALUE = "value";  // untranslated
Blockly.Msg.SENSOR_WALL = "wall sensor";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "Open Roberta Lab su an icin kullanilamiyor. </br> Lütfen internet baglantinizi kontrol edin ve sayfayi yeniden yüklemeyi deneyin. Probleminiz devam ederse, lütfen bizle email yoluyla baglantiya gecmekten cekinmeyin: </br>support-o-r@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servo motor";  // untranslated
Blockly.Msg.SERVO_MOTOR_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.SERVO_TOOLTIP = "Represents a servo motor.";  // untranslated
Blockly.Msg.SET = "Ayarla";
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Set the language.";  // untranslated
Blockly.Msg.SET_LED = "turn LED";  // untranslated
Blockly.Msg.SET_RELAY = "turn relay";  // untranslated
Blockly.Msg.SET_RELAY_ARDUINO = "turn relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.SET_RELAY_TOOLTIP = "Turns the relay on or off";  // untranslated
Blockly.Msg.SET_RGB_LED = "turn RGB LED";  // untranslated
Blockly.Msg.SHARE_PROGRAMS_USERGROUP_HINT = "To share programs with a user group, open your program list and share a program with a user group.";  // untranslated
Blockly.Msg.SHARE_WITH_USER = "Share your program with another user ...";  // untranslated
Blockly.Msg.SHARE_WITH_USERGROUP = "Share your program with the members of one of your user groups ...";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF = "turn side brush off";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Turns the side brush off.";  // untranslated
Blockly.Msg.SIDE_BRUSH_STATUS = "turn side brush";  // untranslated
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Turns the side brush on or off .";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Ne yazik ki bu blok simülasyonda kullanilamaz!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Bu sensör konfigürasyonda yok! Gercek robot üzerinde program davranisi beklenenden farkli olacaktir, lütfen robot konfigürasyonunu kontrol edin!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "Konfigurasyonda kizilötesi sensör bagli degil! Gercek robot üzerinde program davranisi beklenenden farkli olacaktir, lütfen robot konfigürasyonunu kontrol edin!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "Bu blok icin yanlis sensör port'u kullandiniz! Gercek robot üzerinde program davranisi beklenenden farkli olacaktir, lütfen robot konfigürasyonunu kontrol edin!";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Turns the single motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.SLEEP = "sleep";  // untranslated
Blockly.Msg.SLOT_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_LEFT = "left";  // untranslated
Blockly.Msg.SLOT_LEFT_PITCH = "left pitch";  // untranslated
Blockly.Msg.SLOT_LEFT_ROLL = "left roll";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW = "left yaw";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "left yaw pitch";  // untranslated
Blockly.Msg.SLOT_MIDDLE = "middle";  // untranslated
Blockly.Msg.SLOT_PITCH = "pitch";  // untranslated
Blockly.Msg.SLOT_REAR = "rear";  // untranslated
Blockly.Msg.SLOT_RIGHT = "right";  // untranslated
Blockly.Msg.SLOT_RIGHT_PITCH = "right pitch";  // untranslated
Blockly.Msg.SLOT_RIGHT_ROLL = "right roll";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW = "right yaw";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "right yaw pitch";  // untranslated
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_TILTED_ANY = "any";  // untranslated
Blockly.Msg.SLOT_TILTED_BACK = "back";  // untranslated
Blockly.Msg.SLOT_TILTED_DOWN = "down";  // untranslated
Blockly.Msg.SLOT_TILTED_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_TILTED_NO = "not";  // untranslated
Blockly.Msg.SLOT_TILTED_UP = "up";  // untranslated
Blockly.Msg.SLOT_YAW = "yaw";  // untranslated
Blockly.Msg.SOCKET = "socket";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor in the range 0 to 100. 0 is quiet and 100 is loud.";  // untranslated
Blockly.Msg.SOUND_TOOLTIP = "Bir ses sensörünü temsil eder.";
Blockly.Msg.SOURCE_CODE_EDITOR_BUILD_TOOLTIP = "Build the source code.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_CLOSE_CONFIRMATION = "All your changes will be lost!";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_IMPORT_TOOLTIP = "Import current NEPO program.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_PLACEHOLDER = "Import current NEPO program or just start typing";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_RUN_TOOLTIP = "Run on the robot.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_UPLOAD_TOOLTIP = "Upload the source code.";  // untranslated
Blockly.Msg.SSID = "SSID";  // untranslated
Blockly.Msg.START = "Başlat";
Blockly.Msg.START_ACTIVITY = "Aktivite";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Ek aktiviteleri başlatir.";
Blockly.Msg.START_PROGRAM = "Başlat";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "autonomous behaviour";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "Sensör datasini göster.";
Blockly.Msg.START_TOOLTIP = "Ana program icin baslangic noktasi.";
Blockly.Msg.STEPMOTOR_TOOLTIP = "Represents a step motor.";  // untranslated
Blockly.Msg.STEPS_PER_REVOLUTION = "steps per revolution";  // untranslated
Blockly.Msg.STEP_MOTOR = "step motor";  // untranslated
Blockly.Msg.STEP_MOTOR_ARDUINO = "step motor 28BYJ-48";  // untranslated
Blockly.Msg.STEP_MOTOR_ON_TOOLTIP = "Turns motor on with a provided speed in rpm and stops motor after execution of provided number of rotations.";  // untranslated
Blockly.Msg.STRENGTH = "strength";  // untranslated
Blockly.Msg.SWITCH = "switch";  // untranslated
Blockly.Msg.SWITCH_LED_MATRIX_TOOLTIP = "Enables/Disables the LED matrix to use the dual purpose pins.";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Robot konfigürasyonu";
Blockly.Msg.TAB_PROGRAM = "Program";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperature sensor in °C.";  // untranslated
Blockly.Msg.TEMPERATURE_TOOLTIP = "Represents a temperature sensor.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "Metin Ekle";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "e";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Değişken '%1' e bazı metinler ekleyin.";
Blockly.Msg.TEXT_CAST_CHAR_TONUMBER = "cast %1 at index %2 to Number";  // untranslated
Blockly.Msg.TEXT_CAST_CHAR_TONUMBER_TOOLTIP = "Convert the character at the given position in this string into the corresponding ASCII number. The first character in the string is at position 0!";  // untranslated
Blockly.Msg.TEXT_CAST_STRING_TONUMBER = "cast %1 to Number";  // untranslated
Blockly.Msg.TEXT_CAST_STRING_TONUMBER_TOOLTIP = "Convert this string into a number, if it contains a number.";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "küçük harf";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Baş Harfler Büyük";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "büyük harf";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Metnin bir kopyasını farklı bir harf durumunda (HEPSİ BÜYÜK - hepsi küçük) getirir.";
Blockly.Msg.TEXT_CHARAT_FIRST = "İlk harfini al";
Blockly.Msg.TEXT_CHARAT_FROM_END = "# dan sona harfleri al";
Blockly.Msg.TEXT_CHARAT_FROM_START = "# harfini al";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "metinde";
Blockly.Msg.TEXT_CHARAT_LAST = "son harfi al";
Blockly.Msg.TEXT_CHARAT_RANDOM = "Rastgele bir harf al";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Belirli pozisyonda ki bir harfi döndürür.";
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Write a comment to your code here, to make it easier for you and others to read and understand your code. It will also generate an inline comment in the generated source code";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Metine bir öğe ekle.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "Katıl";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Bu metin bloğunu düzenlemek için bölüm ekle,sil veya yeniden görevlendir.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "Sondan # harfe";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "# harfe";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "son harfe";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "metinde";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "ilk harften başlayarak alt-string alma";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "n inci harften sona kadar alt-string alma";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "n inci harften alt-string alma";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Metinin belirli bir kısmını döndürür.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "metinde";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "Metnin ilk varolduğu yeri bul";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "Metnin son varolduğu yeri bul";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "İlk metnin ikinci metnin içindeki ilk ve son varoluşlarının indeksini döndürür.Metin bulunamadıysa -1 döndürür.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 boş";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Verilen metin boşsa true(doğru) değerini verir.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "ile metin oluştur";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Herhangi bir sayıda ki öğeleri bir araya getirerek metnin bir parçasını oluştur.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "%1 in uzunluğu";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Yazı içerisinde verilen harflerin ( harf arasındaki boşluklar dahil) sayısını verir .";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "%1 ' i Yaz";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Belirli bir metni,sayıyı veya başka bir değeri yaz.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Kullanıcıdan sayı al .";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Kullanıcıdan Yazım al .";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Kullanıcıdan sayı al , istek mesajı göstererek";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Kullanıcıdan yazım al , istek mesajıyla";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Metnin bir harfi,kelimesi veya satırı.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "iki tarafından da boşlukları temizle";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "solundan boşlukları temizle";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "sağından boşlukları temizle";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Metnin bir veya her iki sondan da boşlukları silinmiş şekilde kopyasını verir.";
Blockly.Msg.THETA = "theta";  // untranslated
Blockly.Msg.TIMEOUT = "timeout";  // untranslated
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "Zamanlayiciyi sifirlar.";
Blockly.Msg.TITLE = "title";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Bugün";
Blockly.Msg.TOOLBOX_ACTION = "Hareket";
Blockly.Msg.TOOLBOX_ANIMATION = "Animation";  // untranslated
Blockly.Msg.TOOLBOX_CLEANING = "Cleaning";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Renkler";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Mesajlar";
Blockly.Msg.TOOLBOX_CONTROL = "Kontrol";
Blockly.Msg.TOOLBOX_DECISION = "Kararlar";
Blockly.Msg.TOOLBOX_DISPLAY = "Göster";
Blockly.Msg.TOOLBOX_DRIVE = "Sür";
Blockly.Msg.TOOLBOX_IMAGE = "Images";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "ışıklar";
Blockly.Msg.TOOLBOX_LIST = "Listeler";
Blockly.Msg.TOOLBOX_LOGIC = "Mantik";
Blockly.Msg.TOOLBOX_LOOP = "Döngüler";
Blockly.Msg.TOOLBOX_MATH = "Matematik";
Blockly.Msg.TOOLBOX_MOVE = "Hareket";
Blockly.Msg.TOOLBOX_PIN = "Pin";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Fonksiyonlar";
Blockly.Msg.TOOLBOX_SENSOR = "Sensörler";
Blockly.Msg.TOOLBOX_SOUND = "Sesler";
Blockly.Msg.TOOLBOX_TEXT = "Metin";
Blockly.Msg.TOOLBOX_VARIABLE = "Degiskenler";
Blockly.Msg.TOOLBOX_VISION = "Vision";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Bekle";
Blockly.Msg.TOOLBOX_WALK = "Walk";  // untranslated
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Dokunmatik sensöre basildi mi?";
Blockly.Msg.TOUR1_DESCRIPTION00 = "Ileri";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Hosgeldiniz, <br> >>ilerle<<'ye tiklayin ve Open Roberta Lab ile bir tura baslayin. <br> Size, robotunuzu NEPO ile nasil programlayacaginizi gosterecegim. <br> Bu turu, sag üst kösedeki »X«'e tiklayarak her zaman sonlandirabilirsiniz.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Menü ;-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Burada robotunuzu programlamak icin ihtiyaciniz olan her seyi bulabilirsiniz!<br><span class='typcn typcn-document-text'></span> Programlari kaydedin ve yükleyin<br><span class='typcn typcn-Roberta'></span> Robotunuzu Open Roberta Lab'a baglayin<br><span class='typcn typcn-lightbulb'></span> Tüm cesit problemler icin yardim<br><span class='typcn typcn-user'></span>Kullanici hesaplari hakkinda her sey, örnegin: oturum acmak ya da cikis yapmak";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Buraya tiklayin ve robot konfigürasyonunu degistirin.";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Robot konfigürasyonunu sonradan adapte edebilirsiniz, <br> eger baska bir robot olusturduysaniz.<br>Eger bir robotunuz yoksa ve programinizi simülasyonda test etmek istiyorsaniz, <br>bu konfigürasyon uygulanir.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Buraya tiklayin ve programlama alanina geri dönün!";
Blockly.Msg.TOUR1_DESCRIPTION07 = "Arac kutusu. <br> Burada tüm programlama bloklarini bulabilirsiniz.";
Blockly.Msg.TOUR1_DESCRIPTION07a = "Once you are an experienced user you can switch here to the expert mode of the toolbox.<br>You will then find more blocks to program your robot.<br><span class='typcn typcn-media-stop-outline'></span> beginner mode<br><span class='typcn typcn-star-outline'></span> expert mode";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION08 = "Her program program-baslat-blok'uyla baslar«.<br>Robotun calistirmasi gereken baska programlama bloklari, bu blok'a eklenmeli.<br> Sadece istediginiz blok'u baslangic blok'unun altina sürükleyip birakin.";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Burada bazi kisayollari bulabilirsiniz!<br>Soldan saga dogru:<br><span class='typcn typcn-media-play'></span> Gercek robot üzerinde programi calistirmak icin buraya tiklayin <br><span class='typcn typcn-media-play-outline'></span> Robotu simülasyonda calistirmak icin buraya tiklayin <br><span class='typcn typcn-cloud-storage'></span> Programinizi kaydedin, bunun icin önce oturum acmaniz gerekiyor <br><span class='typcn typcn-zoom'></span> Eger istiyorsaniz, buraya tiklayin ve bloklar üzerine yakinlastirin <br><span class='typcn typcn-archive'></span> Cöp kutusu! Bloklari silmek icin, sadece bloklari cöp kutusunun icine tasiyin <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dikkat: Bloklar silindikten sonra bloklari tekrar geri dönüsturemezsiniz! <br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "»Eylem«'e tiklayin";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Simdi yeni blok'u baglamak icin basla-program-blok'un hemen altina sürükleyip birakin.";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Simdi programinizi simulasyonda test edin!";
Blockly.Msg.TOUR1_DESCRIPTION13a = "and test your program in the simulation!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION15 = "Harika, <br> robotunuz 20 cm ileriye gidiyor, <br> siy de bunu programlamistiniz!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "Güle güle ve daha fazlasini kesfederken iyi eglenceler!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to measure is 255 cm.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "Bir ultrasonik sensörü temsil eder.";
Blockly.Msg.UNDO = "Geri al";
Blockly.Msg.USERGROUP_ADD_MEMBERS = "Add members";  // untranslated
Blockly.Msg.USERGROUP_CREATE = "Create new user group";  // untranslated
Blockly.Msg.USERGROUP_CREATE_TOOLTIP = "Click here to create a new usergroup";  // untranslated
Blockly.Msg.USERGROUP_DELETE_WITH_MEMBERS_WARNING = "Are your sure that you want to delete the usergroup including all members? No member did log in so far.";  // untranslated
Blockly.Msg.USERGROUP_GENERATED_MEMBERS = "Automatically generated members";  // untranslated
Blockly.Msg.USERGROUP_GENERATED_MEMBERS_TOOLTIP = "Automatically genertated members are normal members of a user group. They are generated with a number as username, which you can change afterwards.";  // untranslated
Blockly.Msg.USERGROUP_LIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected user groups.";  // untranslated
Blockly.Msg.USERGROUP_LIST_DELETE_TOOLTIP = "Click here to delete the user group.";  // untranslated
Blockly.Msg.USERGROUP_LOGIN_LOST_PASSWORD_HINT = "If you forgot your password, you can ask the owner of your user group to reset the password to the initial password for you. It will be the password you had to enter when you logged in first.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_CREATE_TOOLTIP = "Click here to add members to your usergroup.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_DEFAULT_PASSWORD_HINT = "The password for your account is not safe. Set your own password, so that only you can login to your account.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected user group members.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_DELETE_TOOLTIP = "Click here to delete this user group member.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_RESET_ALL_PASSWORDS_TOOLTIP = "Click here to reset the password of all selected user group members to their corresponding default password.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_RESET_PASSWORD_TOOLTIP = "Click here to reset the password of this user group member to the default password.";  // untranslated
Blockly.Msg.USERGROUP_NAME_HINT = "The user group to which you want to log in has a name. Enter it here.";  // untranslated
Blockly.Msg.VACUUM_OFF = "turn vacuum off";  // untranslated
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Turns the vacuum off.";  // untranslated
Blockly.Msg.VACUUM_ON = "turn vacuum on %";  // untranslated
Blockly.Msg.VACUUM_ON_TOOLTIP = "Turns on the vacuum speed in procent";  // untranslated
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Valid special characters: »=+!?.,%#+&^@_-«";  // untranslated
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Bu alan bos birakilamaz!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "The max. lenght is 25 characters!";  // untranslated
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Minimum sifre uzunlugu 6 olmalidir!";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Iki sifre birbiriyle ayni olmali!";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Belirtec uzunlugu 8 karakterdir!";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Lütfen gecerli bir email adresi giriniz!";
Blockly.Msg.VALUE_TO = "value to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "öge";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "'set %1' oluştur";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Bu değişkenin değerini verir.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Global bir degiskeni tanimlar.";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Yerel bir degiskeni tanimlar.";
Blockly.Msg.VARIABLES_SET = "Atamak %1 e %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "'get %1' oluştur";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Bu değişkeni girilen değere eşitler.";
Blockly.Msg.VARIABLES_TITLE = "Degisken";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "Boolean Listesi";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "Renk Listesi";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "Baglanti Listesi";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "List Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "Sayi Listesi";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "Karakter Dizisi Listesi";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Mantıksal";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Renk";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Bağlantı";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "Image";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Sayı";
Blockly.Msg.VARIABLES_TYPE_STRING = "Metin";
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "The variable is used before declaration.";  // untranslated
Blockly.Msg.VOICE_PITCH = "voice pitch";  // untranslated
Blockly.Msg.VOICE_SPEED = "voice speed";  // untranslated
Blockly.Msg.WAIT = "Bekle(ms)";
Blockly.Msg.WAIT_FOR_TOOLTIP = "Sensör değerleri için bekle";
Blockly.Msg.WAIT_OR = "Veya şunun için bekle";
Blockly.Msg.WAIT_TIME_TOOLTIP = "Şu kadar milisaniye bekle";
Blockly.Msg.WAIT_TOOLTIP = "Ifade dogru olana kadar bekle";
Blockly.Msg.WAIT_UNTIL = "Kadar bekle";
Blockly.Msg.WIRELESS_TOOLTIP = "Represents a wireless connection.";  // untranslated
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Sends the value to chosen pin.";  // untranslated
Blockly.Msg.X = "x";  // untranslated
Blockly.Msg.XEND = "end of X axis";  // untranslated
Blockly.Msg.XLABEL = "X axis label";  // untranslated
Blockly.Msg.XSTART = "start of X axis";  // untranslated
Blockly.Msg.XTICK = "distance between X ticks";  // untranslated
Blockly.Msg.Y = "y";  // untranslated
Blockly.Msg.YAW = "yaw";  // untranslated
Blockly.Msg.YEND = "end of Y axis";  // untranslated
Blockly.Msg.YES = "Evet";
Blockly.Msg.YLABEL = "Y axis label";  // untranslated
Blockly.Msg.YOUNGER_THEN_14 = "I am younger than 16!";  // untranslated
Blockly.Msg.YSTART = "start of Y axis";  // untranslated
Blockly.Msg.YTICK = "distance between Y ticks";  // untranslated
Blockly.Msg.Z = "z";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.ACTION_LEDBAR = Blockly.Msg.LEDBAR;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HUMIDITY_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_COLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_HTCOLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.SENSOR_HTCOLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_HUMIDITY_HUMIDITY_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.SENSOR_TEMPERATURE_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HTCOLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.ACTION_FOURDIGITDISPLAY = Blockly.Msg.FOURDIGITDISPLAY;
Blockly.Msg.SENSOR_HTCOLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HTCOLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_RGB_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.HTCOLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP;