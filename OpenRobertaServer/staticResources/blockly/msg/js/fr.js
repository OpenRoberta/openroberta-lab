// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.fr');

goog.require('Blockly.Msg');

Blockly.Msg.ABOUT = "à propos de";
Blockly.Msg.ACCELERATION_TOOLTIP = "Lit la valeur actuelle de l'accélération en milli gravité terrestre";
Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP = "Get the tilt or rotations in degrees.";  // untranslated
Blockly.Msg.ACCELEROMETER_TOOLTIP = "Represents an accelerometer.";  // untranslated
Blockly.Msg.ACTION_ANALOGIN = "actuator analog";  // untranslated
Blockly.Msg.ACTION_BUZZER = "buzzer";
Blockly.Msg.ACTION_BUZZER_ARDUINO = "buzzer HYT120";  // untranslated
Blockly.Msg.ACTION_DIGITALIN = "actuator digital";  // untranslated
Blockly.Msg.ACTION_EVAL = "eval";  // untranslated
Blockly.Msg.ACTION_EVAL_AS = "as";  // untranslated
Blockly.Msg.ACTION_IN = "actuator";  // untranslated
Blockly.Msg.ACTION_INFRARED = "infrared emitter";  // untranslated
Blockly.Msg.ACTION_LCD = "LCD 1602";
Blockly.Msg.ACTION_LCDI2C = "LCD 1602 I²C";
Blockly.Msg.ACTION_LCDI2C_SENSEBOX = "OLED Display I²C";  // untranslated
Blockly.Msg.ACTION_LED = "LED";
Blockly.Msg.ACTION_MOTOR = "moteur";
Blockly.Msg.ACTION_PLAY = "jouer";
Blockly.Msg.ACTION_PLOTTING = "plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR = "clear the plot";  // untranslated
Blockly.Msg.ACTION_PLOT_CLEAR_TOOLTIP = "Removes all the data from the plot.";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT = "plot a point on";  // untranslated
Blockly.Msg.ACTION_PLOT_POINT_TOOLTIP = "Plots a point with specified value (Y axis) at the specified tickmark (X axis).";  // untranslated
Blockly.Msg.ACTION_PLOT_TICKMARK = "at tickmark";  // untranslated
Blockly.Msg.ACTION_RELAY = "rejouer";
Blockly.Msg.ACTION_RGBLED = "LED RVB";
Blockly.Msg.ACTION_SDCARD = "SD card";  // untranslated
Blockly.Msg.ACTION_SERIAL_PRINT = "afficher sur le moniteur série";
Blockly.Msg.ACTION_SERIAL_PRINT_TOOLTIP = "Affiche des données sur le moniteur série. Tu peux trouver le moniteur série dans le menu Vue puis Programme USB.";
Blockly.Msg.ACTION_SERVO = "servomoteur";
Blockly.Msg.ACTION_SERVO_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.ACTION_STEPMOTOR = "moteur pas à pas";
Blockly.Msg.ACTION_WIRELESS = "WiFi connection.";  // untranslated
Blockly.Msg.ACTIVITY_TOOLTIP = "ajouter blocs";
Blockly.Msg.ACTOR_ANALOGIN_TOOLTIP = "Writes an analog value (PWM wave) to a pin. Only values between 0 and 255 should be used";  // untranslated
Blockly.Msg.ACTOR_DIGITALIN_TOOLTIP = "Writes a HIGH or a LOW value to a digital pin. Only the values HIGH »1« and LOW »0« should be used.";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "autres activités";
Blockly.Msg.ADDRESS = "address";  // untranslated
Blockly.Msg.ADD_COMMENT = "Ajouter un commentaire";
Blockly.Msg.ANALOG = "analogique";
Blockly.Msg.ANALOGIN_TOOLTIP = "Represents any actuator connected to an analog pin.";  // untranslated
Blockly.Msg.ANALOGOUT_TOOLTIP = "Represents any sensor connected to an analog pin.";  // untranslated
Blockly.Msg.AND = "et";
Blockly.Msg.ARDUBRICK_TOOLTIP = "Bloc pour le Bot'n Roll board qui indique les acteurs et les capteurs connectés. Il y a d'autres acteurs et capteurs comme p. ex. les buttons, le display...";
Blockly.Msg.AUTH = "Veuillez autoriser cette application à permettre la sauvegarde de votre travail et à l’autoriser d'être partagé par vous.";
Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP = "Gets the current voltage from the battery.";  // untranslated
Blockly.Msg.BELOW = "below";  // untranslated
Blockly.Msg.BLOCK_NOT_EXECUTED = "Le bloc n'a pas été exécuté !";
Blockly.Msg.BLOCK_NOT_SUPPORTED = "This robot does not support this block!";  // untranslated
Blockly.Msg.BLOCK_USED_INCORRECTLY = "Unfortunately, this block cannot be used in this way.";  // untranslated
Blockly.Msg.BOB3_READNUMBER_TOOLTIP = "Donne le nombre enrégistré.";
Blockly.Msg.BOB3_RECALL_NUMBER = "redemander le nombre";
Blockly.Msg.BOB3_REMEMBER_NUMBER = "mémoriser le nombre";
Blockly.Msg.BOB3_SAVENUMBER_TOOLTIP = "Le nombre doit être un entier entre 0 et 255.";
Blockly.Msg.BOTH = "les deux";
Blockly.Msg.BOX_ID = "Device ID";  // untranslated
Blockly.Msg.BRICKLIGHT = "lumière du robot";
Blockly.Msg.BRICKLIGHT_BLUE = "bleu";
Blockly.Msg.BRICKLIGHT_COLOR = "couleur";
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "double clignotement";
Blockly.Msg.BRICKLIGHT_FLASH = "clignotement";
Blockly.Msg.BRICKLIGHT_GREEN = "vert";
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Eteind la lumière du robot";
Blockly.Msg.BRICKLIGHT_ON = "allumée en continu";
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Allume la lumière du robot";
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";
Blockly.Msg.BRICKLIGHT_RED = "rouge";
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Réinitialise la lumière du robot à sa valeur par défaut : vert clignotant";
Blockly.Msg.BRICKNAME_WEDO = "WeDo";
Blockly.Msg.BRICK_IPADDRESS = "adresse IP";
Blockly.Msg.BRICK_PASSWORD = "mot de passe";
Blockly.Msg.BRICK_PHENOMENON = "Phenomenon";  // untranslated
Blockly.Msg.BRICK_PORT = "port";
Blockly.Msg.BRICK_TRACK_WIDTH = "écartement entre les roues";
Blockly.Msg.BRICK_USERNAME = "nom d'utilisateur";
Blockly.Msg.BRICK_WHEEL_DIAMETER = "diamètre des roues";
Blockly.Msg.BRUSH_OFF = "arrêter le balai";
Blockly.Msg.BRUSH_OFF_TOOLTIP = "Arrête le balai";
Blockly.Msg.BRUSH_ON = "allumer le balai (tours/min)";
Blockly.Msg.BRUSH_ON_TOOLTIP = "Met en marche le balai à la vitesse donnée, en tours par minute entre 0 et 10000";
Blockly.Msg.BUTTON_DO_SHARE = "Partager";
Blockly.Msg.BUTTON_DO_UPLOAD_GALLERY = "Ajouter « $ » à la galerie";
Blockly.Msg.BUTTON_EMPTY_LIST = "Vider la liste";
Blockly.Msg.BUZZER_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.CALLIOPEBRICK_TOOLTIP = "Bloc pour Calliopé, un mini-ordinateur. Il y a d'autres acteurs et capteurs comme p. ex. les buttons, le display...";
Blockly.Msg.CB_ALL = "Calli:bot all";  // untranslated
Blockly.Msg.CB_BOTH = "Calli:bot both";  // untranslated
Blockly.Msg.CB_LEFT = "Calli:bot left";  // untranslated
Blockly.Msg.CB_RIGHT = "Calli:bot right";  // untranslated
Blockly.Msg.CENTER = "milieu";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifier la valeur :";
Blockly.Msg.CHAT = "Discutez avec votre collaborateur en tapant dans cette zone !";
Blockly.Msg.CLEAN_UP = "Nettoyer les blocs";
Blockly.Msg.CLEAR = "clear";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Réduire les blocs";
Blockly.Msg.COLLAPSE_BLOCK = "Réduire le bloc";
Blockly.Msg.COLON = "deux-points";
Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = "Gets the current ambient light reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "couleur 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "couleur 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "taux";
Blockly.Msg.COLOUR_BLEND_TITLE = "mélanger";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mélange deux couleurs dans une proportion donnée (de 0.0 à 1.0).";
Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP = "Gets the current colour reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP = "Gets the current brightness reading from the sensor.";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choisir une couleur dans la palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "couleur aléatoire";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choisir une couleur au hasard.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP = "Gets the current colour reading from the colour sensor. Values are in the range 0 to 255.";  // untranslated
Blockly.Msg.COLOUR_RGB_GREEN = "vert";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rouge";
Blockly.Msg.COLOUR_RGB_TITLE = "colorier avec";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Créer une couleur avec la quantité spécifiée de rouge, vert et bleu. Les valeurs doivent être comprises entre 0 et 255.";
Blockly.Msg.COLOUR_RGB_WHITE = "blanc";
Blockly.Msg.COLOUR_TOOLTIP = "représente un capteur de couleur";
Blockly.Msg.COMPASS_CALIBRATE_TOOLTIP = "Calibre la boussole. Tourne la boussole très lentement deux fois (pendant environ 40 secondes).";
Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP = "Gets the current reading from the compass sensor.";  // untranslated
Blockly.Msg.COMPASS_TOOLTIP = "Bloc pour le capteur boussole.";
Blockly.Msg.COMPASS_TOOLTIP_EV3 = "Représente un capteur boussole HiTechnic NXT";
Blockly.Msg.CONFIGURATION_ERROR_ACTOR_MISSING = "This actuator is not configured. Please add the corresponding block in the configuration tab!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTORS_ROTATION_DIRECTION = "Le sens de rotation entre le moteur gauche et le moteur droit est différent.";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Le moteur gauche est manquant dans la configuration du robot !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Le moteur gauche n'est pas ajusté!";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Pas de moteur connecté dans la configuration du robot !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Le moteur droit est manquant dans la configuration du robot !";
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Le moteur droit n'est pas ajusté !";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_LEFT_MOTORS = "La configuration du robot ne peut pas contenir plus qu'un moteur gauche.";
Blockly.Msg.CONFIGURATION_ERROR_MULTIPLE_RIGHT_MOTORS = "La configuration du robot ne peut pas contenir plus qu'un moteur droite.";
Blockly.Msg.CONFIGURATION_ERROR_OTHER_NOT_SUPPORTED = "Other power consumer does not support this type of block!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_OVERLAPPING_PORTS = "Another component is already using the same port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "Le capteur n'est pas connecté à ce port !";
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Un autre capteur est branché à ce port !";
Blockly.Msg.CONFIGURATION_ERROR_WLAN_CREDENTIALS_MISSING = "Missing WLAN credentials, please enter them in robot -> WLAN credentials ... !";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_WLAN_MISSING = "WiFi is not configured. Please add the corresponding block in the configuration tab!";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PHENOMENON = "no phenomenon";  // untranslated
Blockly.Msg.CONFIGURATION_NO_PORT = "pas de port";
Blockly.Msg.CONFIGURATION_PORT = "Port 1";
Blockly.Msg.CONFLIST_DELETE_ALL_TOOLTIP = "Clique ici pour effacer tous les programmes sélectionnés.";
Blockly.Msg.CONFLIST_DELETE_TOOLTIP = "Clique ici pour effacer la configuration du robot.";
Blockly.Msg.CONFLIST_LOAD_TOOLTIP = "Clique ici pour télécharger ta configuration du robot dans l'environnement de travail.";
Blockly.Msg.CONNECTION_CHECK = "la connexion au robot %1 est-elle active ?";
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "Teste si la connexion au robot est active";
Blockly.Msg.CONNECTION_CONNECT = "se connecter au robot nommé";
Blockly.Msg.CONNECTION_FROM_CONNECTION = "à partir de la connexion";
Blockly.Msg.CONNECTION_FROM_ROBOT = "du robot";
Blockly.Msg.CONNECTION_MBED_RECEIVE_TOOLTIP = "Lit un message via un canal (0 - 255). Le canal par défaut est le canal 0.";
Blockly.Msg.CONNECTION_MBED_SEND_TOOLTIP = "Envoie un message à un autre système. Tu peux paramétrer la force du signal entre 0 et 7,  étant le plus faible. Si tu n'indiques pas de canal, le canal 0 est utilisé.";
Blockly.Msg.CONNECTION_OVER_CHANNEL = "sur le canal";
Blockly.Msg.CONNECTION_POWER = "avec la force";
Blockly.Msg.CONNECTION_PROTOCOL_BLUETOOTH = "Bluetooth";
Blockly.Msg.CONNECTION_RECEIVED_DATA = "recevoir un message";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Attend un message en provenance du robot défini pour la connexion";
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_BOB3 = "Reads a message via the IR receiver. Only numbers can be received.";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP_MBOT = "Reads a message from the IR receiver. Only strings can be received.";  // untranslated
Blockly.Msg.CONNECTION_SEND_DATA = "envoyer un message";
Blockly.Msg.CONNECTION_SEND_TOOLTIP = "Envoie un message à un autre robot";
Blockly.Msg.CONNECTION_SEND_TOOLTIP_BOB3 = "Sends a message of type number to another Bob3. Hold the Bob3's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SEND_TOOLTIP_MBOT = "Sends a message of type string to another mBot. Hold the mBots's face to face!";  // untranslated
Blockly.Msg.CONNECTION_SET_CHANNEL = "met le canal à %1";
Blockly.Msg.CONNECTION_SET_CHANNEL_TOOLTIP = "Paramétrage (0 à 255) du canal pour envoyer et recevoir des messages.";
Blockly.Msg.CONNECTION_START_TOOLTIP = "Essaie de se connecter à un autre robot via Bluetooth";
Blockly.Msg.CONNECTION_TOOLTIP = "La connexion d'un robot";
Blockly.Msg.CONNECTION_TO_CONNECTION = "à la connexion";
Blockly.Msg.CONNECTION_TO_ROBOT = "au robot";
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "attendre la connexion";
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Attend une demande de connexion Bluetooth";
Blockly.Msg.CONNECTOR = "hub";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "quitter la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "passer à l’itération de boucle suivante";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sortir de la boucle englobante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauter le reste de cette boucle, et poursuivre avec l’itération suivante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Attention : Ce bloc ne devrait être utilisé que dans une boucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pour chaque élément %1 dans la liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pour chaque élément d’une liste, assigner la valeur de l’élément à la variable '%1', puis exécuter des instructions.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "compter avec %1 de %2 à %3 par %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faire prendre à la variable « %1 » les valeurs depuis le nombre de début jusqu’au nombre de fin, en s’incrémentant du pas spécifié, et exécuter les instructions spécifiées.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ajouter une condition au bloc si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Ajouter une condition finale fourre-tout au bloc si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Ajouter, supprimer ou réordonner les sections pour reconfigurer ce bloc si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinon";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinon si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si une valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres. Si aucune des valeurs n’est vraie, exécuter le dernier bloc d’ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://fr.wikipedia.org/wiki/Boucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faire";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "répéter %1 fois";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Exécuter des instructions plusieurs fois.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "répéter jusqu’à";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "répéter tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Tant qu’une valeur est fausse, alors exécuter des instructions.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Tant qu’une valeur est vraie, alors exécuter des instructions.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Date de mise à jour";
Blockly.Msg.DATATABLE_CONFIGURATIONS = "configurations";
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Nom de la configuration";
Blockly.Msg.DATATABLE_CREATED_BY = "Créé par";
Blockly.Msg.DATATABLE_CREATED_ON = "Créé le";
Blockly.Msg.DATATABLE_MEMBERS = "members";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "programmes";
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Nom du programme";
Blockly.Msg.DATATABLE_SHARED = "Partager";
Blockly.Msg.DATATABLE_SHARED_PROGRAMS = "shared programs";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Partager avec";
Blockly.Msg.DATATABLE_USERGROUP = "user group";  // untranslated
Blockly.Msg.DATATABLE_USERGROUPS = "user groups";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_NAME = "Name of the user group";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_NAME_CREATE_HINT = "The name of the user group. Kepp in mind, that the members will have to type it in each time they log in.";  // untranslated
Blockly.Msg.DATATABLE_USERGROUP_OWNER = "Name of the owner of the user group";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Supprimer ces %1 blocs ?";
Blockly.Msg.DELETE_BLOCK = "Supprimer le bloc";
Blockly.Msg.DELETE_USERGROUP_MEMBER_AFTER_LOGIN_WARNING = "A member you want to delete did already log in and might have create own programs. Are you sure that you want to delete the selected member(s)?";  // untranslated
Blockly.Msg.DELETE_USERGROUP_MEMBER_WARNING = "Are you sure that you want to delete the selected member(s)?";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "Supprimer %1 blocs";
Blockly.Msg.DIGITAL = "digital";
Blockly.Msg.DIGITALIN_TOOLTIP = "Represents any actuator connected to a digital pin.";  // untranslated
Blockly.Msg.DIGITALOUT_TOOLTIP = "Represents any sensor connected to a digital.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Désactiver le bloc";
Blockly.Msg.DISPLAY_ANIMATION = "animation";
Blockly.Msg.DISPLAY_CHARACTER = "caractère";
Blockly.Msg.DISPLAY_CLEAR = "effacer l'écran";
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Efface l'affichage de l'écran";
Blockly.Msg.DISPLAY_COL = "sur la colonne";
Blockly.Msg.DISPLAY_GET_BRIGHTNESS_TOOLTIP = "Lit la valeur de l'intensité des LED. 0 si toutes les LED sont éteintes, 9 pour le maximum.";
Blockly.Msg.DISPLAY_GET_PIXEL_TOOLTIP = "Lit la valeur de l'intensité d'une LED. 0 si la LED est éteinte, 9 pour le maximum.";
Blockly.Msg.DISPLAY_IMAGE = "image";
Blockly.Msg.DISPLAY_PICTURE = "image";
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "yeux ouverts";
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "yeux fermés";
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "fleurs";
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "lunettes";
Blockly.Msg.DISPLAY_PICTURE_TACHO = "compteur de vitesse";
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Affiche une image à l'écran.";
Blockly.Msg.DISPLAY_PIXEL_BRIGHTNESS = "intensité de la lumière";
Blockly.Msg.DISPLAY_PIXEL_TITLE = "LED";
Blockly.Msg.DISPLAY_ROW = "sur la ligne";
Blockly.Msg.DISPLAY_SET_BRIGHTNESS_TOOLTIP = "Réglage de la valeur de l'intensité des LED's. 0 si LED's éteints, 9 pour le maximum.";
Blockly.Msg.DISPLAY_SET_PIXEL_TOOLTIP = "Réglage la valeur de l'intensité du LED. 0 si le LED est éteint, 9 pour le maximum.";
Blockly.Msg.DISPLAY_SHOW = "afficher";
Blockly.Msg.DISPLAY_TEXT = "texte";
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "affiche du texte à l'écran";
Blockly.Msg.DROP_TOOLTIP = "Représente un capteur de chute";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliquer";
Blockly.Msg.ENABLE_BLOCK = "Activer le bloc";
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Initialise le capteur de rotation";
Blockly.Msg.ENCODER_TOOLTIP = "Représente un encodeur";
Blockly.Msg.ERROR_MISSING_PARAMETER = "Il manque une valeur d'entrée !";
Blockly.Msg.ERROR_MISSING_RETURN = "La valeur de retour de la fonction est manquante !";
Blockly.Msg.EV3BRICK_TOOLTIP = "bloc pour le EV3";
Blockly.Msg.EXPAND_ALL = "Développer les blocs";
Blockly.Msg.EXPAND_BLOCK = "Développer le bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Entrées externes";
Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP = "Gets the current reading from the flame sensor.";  // untranslated
Blockly.Msg.FLAME_TOOLTIP = "Représente un capteur de flamme";
Blockly.Msg.FLYOUT_VARIABLE_TEXT = "Besoin d'une variable ? Commence par la déclarer en cliquant sur le bouton + dans le bloc « démarrage du programme »";
Blockly.Msg.FOR = "pour";
Blockly.Msg.FOURDIGITDISPLAY = "Afficheur 4 chiffres";
Blockly.Msg.FOURDIGITDISPLAY_CLEAR_TOOLTIP = "Efface l'afficheur 4 chiffres Grove de Seeed";
Blockly.Msg.FOURDIGITDISPLAY_SHOW_TOOLTIP = "Affiche un nombre entre 0 et 9999 sur l'afficheur 4 chiffres Grove de Seeed. La position entre 0 et 3 représente la position du début du nombre. L'afficheur doit êre connecté au connecteur Grove A1 (à droite).";
Blockly.Msg.FOURDIGITDISPLAY_TOOLTIP = "Represents a Grove 4-Digit Display by Seeed";  // untranslated
Blockly.Msg.FROM_POSITION = "à partir de la position";
Blockly.Msg.FSR_TOOLTIP = "Lit la valeur actuelle du capteur de force sous les pieds du robot.";
Blockly.Msg.GALLERY_BY = "fait par";
Blockly.Msg.GALLERY_DATE = "créé le";
Blockly.Msg.GALLERY_DISLIKE = "n'aime pas";
Blockly.Msg.GALLERY_LIKE = "aime";
Blockly.Msg.GALLERY_SHARED_ALREADY = "Tu as déjà uploadé ce programme dans la galerie. Si tu veux le modifier, cherche la version dans la galerie et modifie la. Tu peux aussi l'enlever de la galerie.";
Blockly.Msg.GEARED_MOTOR = "geared motor";  // untranslated
Blockly.Msg.GET = "lire";
Blockly.Msg.GETSAMPLE_TOOLTIP = "Lit la valeur du capteur sélectionné";
Blockly.Msg.GET_CODE_TOOLTIP = "Returns the value of the solderable code pad in the head piece. Values are in range 0-31.";  // untranslated
Blockly.Msg.GO_TO_GROUPS = "Go to groups";  // untranslated
Blockly.Msg.GPS_TOOLTIP = "Represents a GPS receiver.";  // untranslated
Blockly.Msg.GROUP_CREATE_NAME_HINT = "Please keep in mind, that all members of a group have to enter the group name on each login. It should neither be complicated nor long.";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "initialise le capteur gyroscopique";
Blockly.Msg.GYRO_TOOLTIP = "représente une capteur gyroscopique";
Blockly.Msg.GYRO_TOOLTIP_WEDO = "Represents a tilt sensor.";  // untranslated
Blockly.Msg.HELP = "Aide";
Blockly.Msg.HINT_USERGROUP_MEMBER = "Enter the member id of your user here. It should be a two digit number.";  // untranslated
Blockly.Msg.HINT_USERGROUP_OWNER = "Do <strong>not</strong> enter the real name of the owner of the user group here, but his <strong>username</strong> instead.";  // untranslated
Blockly.Msg.HINT_USER_ACCOUNT = "« JeSuisBotman » ou « RobertaStracciatella » ? Pas besoin de mettre ton vrai nom. Invente un pseudo amusant dont tu te souviendras.";
Blockly.Msg.HINT_USER_AGE = "Tu as moins de 16 ans ? Demande à tes parents de t'aider. Ils peuvent utiliser leur adresse mail pour valider ton compte.";
Blockly.Msg.HINT_USER_EMAIL = "L'email est optionel ! Mais certaines fonctionnalités sont disponibles uniquement si ton compte a été validé par email. Tu as moins de 16 ans ? Demande à tes parents d'utiliser leur adresse mail.";
Blockly.Msg.HINT_USER_NAME = "Tu peux mettre ton vrai nom si tu veux. Il sera uniquement visible par toi.";
Blockly.Msg.HINT_USER_PASSWORT = "1234 n'est pas un mot de passe très sécurisé. Invente une combinaison de chiffres et de lettres que tu n'oublieras pas.";
Blockly.Msg.HINT_USER_PASSWORT_CONFIRM = "Retape ton mot de passe pour vérifier que tu le connais.";
Blockly.Msg.HTCOLOUR_TOOLTIP = "Represents a HiTechnic NXT Color Sensor V2.";  // untranslated
Blockly.Msg.HUMIDITY_TOOLTIP = "Représente un capteur d'hygrométrie (humidité)";
Blockly.Msg.ICON_BLOCKING_TOOLTIP = "Blocking block! This blocks needs some time to be executed, so other's have to wait until it gives back the control to the caller function.";  // untranslated
Blockly.Msg.ID = "ID";  // untranslated
Blockly.Msg.IF_TOOLTIP = "vérifie la condition SI. Si elle est vraie, execute l'action";
Blockly.Msg.IMAGE_GET_TOOLTIP = "Retour vers l'image choisie.";
Blockly.Msg.IMAGE_GET_TOOLTIP_ANGRY = "en colère";
Blockly.Msg.IMAGE_GET_TOOLTIP_ASLEEP = "endormi";
Blockly.Msg.IMAGE_GET_TOOLTIP_BUTTERFLY = "papillon";
Blockly.Msg.IMAGE_GET_TOOLTIP_CHESSBOARD = "échiquier";
Blockly.Msg.IMAGE_GET_TOOLTIP_CONFUSED = "confus";
Blockly.Msg.IMAGE_GET_TOOLTIP_COW = "vache";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND = "diamant";
Blockly.Msg.IMAGE_GET_TOOLTIP_DIAMOND_SMALL = "petit diamant";
Blockly.Msg.IMAGE_GET_TOOLTIP_DUCK = "canard";
Blockly.Msg.IMAGE_GET_TOOLTIP_FABULOUS = "fabuleux";
Blockly.Msg.IMAGE_GET_TOOLTIP_GHOST = "fantôme";
Blockly.Msg.IMAGE_GET_TOOLTIP_GIRAFFE = "giraffe";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART = "coeur";
Blockly.Msg.IMAGE_GET_TOOLTIP_HEART_SMALL = "petit coeur";
Blockly.Msg.IMAGE_GET_TOOLTIP_HOUSE = "maison";
Blockly.Msg.IMAGE_GET_TOOLTIP_MEH = "meuh !";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_CROTCHET = "note de musique";
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVER = "music quaver";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_MUSIC_QUAVERS = "music quavers";  // untranslated
Blockly.Msg.IMAGE_GET_TOOLTIP_NO = "non";
Blockly.Msg.IMAGE_GET_TOOLTIP_PACMAN = "pacman";
Blockly.Msg.IMAGE_GET_TOOLTIP_PITCHFORK = "fourche";
Blockly.Msg.IMAGE_GET_TOOLTIP_RABBIT = "lièvre";
Blockly.Msg.IMAGE_GET_TOOLTIP_ROLLERSKATE = "rollerskate";
Blockly.Msg.IMAGE_GET_TOOLTIP_SAD = "triste";
Blockly.Msg.IMAGE_GET_TOOLTIP_SILLY = "idiot";
Blockly.Msg.IMAGE_GET_TOOLTIP_SKULL = "crâne";
Blockly.Msg.IMAGE_GET_TOOLTIP_SMILE = "sourire";
Blockly.Msg.IMAGE_GET_TOOLTIP_SNAKE = "serpent";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE = "carré";
Blockly.Msg.IMAGE_GET_TOOLTIP_SQUARE_SMALL = "petit carré";
Blockly.Msg.IMAGE_GET_TOOLTIP_STICKFIGURE = "personnage bâtons";
Blockly.Msg.IMAGE_GET_TOOLTIP_SWORD = "épée";
Blockly.Msg.IMAGE_GET_TOOLTIP_TARGET = "cible";
Blockly.Msg.IMAGE_GET_TOOLTIP_TORTOISE = "tortue";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE = "triangle";
Blockly.Msg.IMAGE_GET_TOOLTIP_TRIANGLE_LEFT = "triangle à gauche";
Blockly.Msg.IMAGE_GET_TOOLTIP_TSHIRT = "t-shirt";
Blockly.Msg.IMAGE_GET_TOOLTIP_UMBRELLA = "parapluie";
Blockly.Msg.IMAGE_GET_TOOLTIP_XMAS = "noël";
Blockly.Msg.IMAGE_GET_TOOLTIP_YES = "oui";
Blockly.Msg.IMAGE_INVERT = "inverser";
Blockly.Msg.IMAGE_INVERT_TOOLTIP = "Inverse l'image. Les pixels sans valeur ou à 0 passeront à # ou 9, et les pixels avec une valeur de # ou 9 passeront à 0 ou sans valeur.";
Blockly.Msg.IMAGE_SHIFT = "décaler";
Blockly.Msg.IMAGE_SHIFT_TOOLTIP = "Décale l'image d'un certain nombre de pixels dans la direction donnée";
Blockly.Msg.IMAGE_TOOLTIP = "Crée une image à afficher. La luminosité de chaque pixel peut est spécifiée par un nombre entre 0 et 9 ou avec le caractère #. 0 signifie pas de lumière, 1 est légèrement lumineux, et 9 ou # est le plus lumineux.";
Blockly.Msg.INFO_DOCUMENTATION_HINT = "Documente ton programme ici...";
Blockly.Msg.INFO_TAGS = "tags";
Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = "Gets the current relative distance from the infrared sensor. The values are between 1 and 75 cm.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the light sensor -- if a black line is detected (true/false).";  // untranslated
Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = "Returns an array of measurements for the presence of a beacon.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "représente un capteur infrarouge";
Blockly.Msg.INLINE_INPUTS = "Entrées en ligne";
Blockly.Msg.INPUT = "entrée";
Blockly.Msg.INTERNAL_PORT = "internal";  // untranslated
Blockly.Msg.IRSEEKER_TOOLTIP = "Représente un capteur infrarouge HiTechnic NXT IRSeeker V2";
Blockly.Msg.JOYSTICK_GETSAMPLE_TOOLTIP = "Lit la valeur actuelle d'un des axes du joystick";
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.KEY_TOOLTIP = "Représente un bouton";
Blockly.Msg.LANGUAGE = "langue";
Blockly.Msg.LANGUAGE_ARABIC = "arabe";
Blockly.Msg.LANGUAGE_BRAZILIAN = "brézilien";
Blockly.Msg.LANGUAGE_CHINESE = "chinois";
Blockly.Msg.LANGUAGE_CZECH = "tchèque";
Blockly.Msg.LANGUAGE_DANISH = "danois";
Blockly.Msg.LANGUAGE_DUTCH = "néerlandais";
Blockly.Msg.LANGUAGE_ENGLISH = "anglais";
Blockly.Msg.LANGUAGE_FINNISH = "finnois";
Blockly.Msg.LANGUAGE_FRENCH = "français";
Blockly.Msg.LANGUAGE_GERMAN = "allemand";
Blockly.Msg.LANGUAGE_GREEK = "grec";
Blockly.Msg.LANGUAGE_ITALIAN = "italien";
Blockly.Msg.LANGUAGE_JAPANESE = "japonais";
Blockly.Msg.LANGUAGE_KOREAN = "coréen";
Blockly.Msg.LANGUAGE_NORWEGIAN = "norvégien";
Blockly.Msg.LANGUAGE_POLISH = "polonais";
Blockly.Msg.LANGUAGE_PORTUGUESE = "portugais";
Blockly.Msg.LANGUAGE_RUSSIAN = "russe";
Blockly.Msg.LANGUAGE_SPANISH = "espagnol";
Blockly.Msg.LANGUAGE_SWEDISH = "suédois";
Blockly.Msg.LANGUAGE_TURKISH = "turque";
Blockly.Msg.LCDI2C_TOOLTIP = "Représente un écran LCD 1602 avec un module I²C intégré.";
Blockly.Msg.LCD_TOOLTIP = "Représente un écran LCD.";
Blockly.Msg.LED = "LED";
Blockly.Msg.LEDBAR = "barre de LED";
Blockly.Msg.LEDBAR_SET_TOOLTIP = "Règle la luminosité entre 0 et 8 de la LED donnée entre 0 et 9. La barre de LED doit être connectée au connecteur Grove A1 (à droite).";
Blockly.Msg.LEDBAR_TOOLTIP = "Represents a Grove LED Bar v2.0 by Seeed.";  // untranslated
Blockly.Msg.LED_MATRIX = "LED matrix";  // untranslated
Blockly.Msg.LED_OFF = "éteindre LED";
Blockly.Msg.LED_OFF_TOOLTIP = "Éteint la LED";
Blockly.Msg.LED_ON = "allumer LED";
Blockly.Msg.LED_ON_TOOLTIP = "Allume la LED et change sa couleur";
Blockly.Msg.LED_ON_TOOLTIP_CB = "Turns the LED on and changes the color. Attention: calli:Bot only supports 7 different colors, the nearest will be chosen.";  // untranslated
Blockly.Msg.LED_ON_TOOLTIP_EDISON = "Turns the LED on.";  // untranslated
Blockly.Msg.LED_ON_WHITE_TOOLTIP = "Allume la LED. Attention c'est très lumineux !";
Blockly.Msg.LED_TOOLTIP = "Représente une LED.";
Blockly.Msg.LEFT = "gauche";
Blockly.Msg.LIGHTVEML_TOOLTIP = "Represents a visible/UV light sensor.";  // untranslated
Blockly.Msg.LIGHT_ARDU_TOOLTIP = "Represents 8 light sensors.";  // untranslated
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gets the current reading from the light sensor in percent.";  // untranslated
Blockly.Msg.LIGHT_TOOLTIP = "Représente un capteur de lumière.";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "créer une liste vide";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement";
Blockly.Msg.LISTS_CREATE_TITLE = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ajouter, supprimer, ou réordonner les sections pour reconfigurer ce bloc de liste.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "créer une liste avec";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ajouter un élément à la liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Créer une liste avec un nombre quelconque d’éléments.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "premier";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# depuis la fin";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtenir";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtenir et supprimer";
Blockly.Msg.LISTS_GET_INDEX_LAST = "dernier";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aléatoire";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "supprimer";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Supprime et renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Supprime et renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Supprime et renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Supprime le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Supprime l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Supprime l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Supprime le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Supprime un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "jusqu’à # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "jusqu’à #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jusqu’à la fin";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtenir la sous-liste depuis le début";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtenir la sous-liste depuis # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtenir la sous-liste depuis #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crée une copie de la partie spécifiée d’une liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trouver la première occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "trouver la dernière occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de l’élément dans la liste. Renvoie 0 si l'élément n'est pas trouvé.";
Blockly.Msg.LISTS_INLIST = "dans la liste";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Renvoie vrai si la liste est vide.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Renvoie la longueur d’une liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "créer une liste avec l’élément %1 répété %2 fois";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crée une liste consistant en la valeur fournie répétée le nombre de fois indiqué.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "comme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insérer en";
Blockly.Msg.LISTS_SET_INDEX_SET = "mettre";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insère l’élément au début d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Insère l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Insère l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Ajouter l’élément à la fin d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Insère l’élément au hasard dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fixe le premier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fixe l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fixe l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fixe le dernier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fixe un élément au hasard dans une liste.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "croissant";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "décroissant";
Blockly.Msg.LISTS_SORT_TITLE = "trier %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Trier une copie d’une liste.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabétique, en ignorant la casse";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérique";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabétique";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "créer une liste depuis le texte";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "créer un texte depuis la liste";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Réunir une liste de textes en un seul, en les séparant par un séparateur.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Couper un texte en une liste de textes, en coupant à chaque séparateur.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "avec le séparateur";
Blockly.Msg.LIST_BACK_TOOLTIP = "retourne à l'écran précédent";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faux";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Renvoie soit vrai soit faux.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "vrai";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://fr.wikipedia.org/wiki/Inegalite_(mathematiques)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Renvoyer vrai si les deux entrées sont égales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Renvoyer vrai si la première entrée est plus grande que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Renvoyer vrai si la première entrée est plus grande ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Renvoyer vrai si la première entrée est plus petite que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Renvoyer vrai si la première entrée est plus petite ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Renvoyer vrai si les deux entrées sont différentes.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "pas %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Renvoie vrai si l’entrée est fausse. Renvoie faux si l’entrée est vraie.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Renvoie nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "et";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ou";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Renvoyer vrai si les deux entrées sont vraies.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Renvoyer vrai si au moins une des entrées est vraie.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si faux";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si vrai";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Vérifier la condition dans 'test'. Si elle est vraie, renvoie la valeur 'si vrai' ; sinon renvoie la valeur 'si faux'.";
Blockly.Msg.LOOP = "répéter jusqu'à ce que";
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Répète indéfiniment une instruction";
Blockly.Msg.LOOP_FOREVER = "répéter indéfiniment";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://fr.wikipedia.org/wiki/Arithmetique";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Renvoie la somme des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Renvoie le quotient des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Renvoie la différence des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Renvoie le produit des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Renvoie le premier nombre élevé à la puissance du second.";
Blockly.Msg.MATH_CAST_TOCHAR = "cast %1 to Char";  // untranslated
Blockly.Msg.MATH_CAST_TOCHAR_TOOLTIP = "Convert this number into a single ASCII character";  // untranslated
Blockly.Msg.MATH_CAST_TOSTRING = "cast %1 to String";  // untranslated
Blockly.Msg.MATH_CAST_TOSTRING_TOOLTIP = "Convert this number into a string.";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "incrémenter %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Ajouter un nombre à la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Renvoie une des constantes courantes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infini).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contraindre %1 entre %2 et %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Contraindre un nombre à être entre les limites spécifiées (incluses).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "est divisible par";
Blockly.Msg.MATH_IS_EVEN = "est pair";
Blockly.Msg.MATH_IS_NEGATIVE = "est négatif";
Blockly.Msg.MATH_IS_ODD = "est impair";
Blockly.Msg.MATH_IS_POSITIVE = "est positif";
Blockly.Msg.MATH_IS_PRIME = "est premier";
Blockly.Msg.MATH_IS_TOOLTIP = "Vérifier si un nombre est pair, impair, premier, entier, positif, négatif, ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.";
Blockly.Msg.MATH_IS_WHOLE = "est entier";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "reste de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Renvoyer le reste de la division euclidienne des deux nombres.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://fr.wikipedia.org/wiki/Nombre";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nombre.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "moyenne de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "médiane de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majoritaires de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "élément aléatoire de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "écart-type de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "somme de la liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Renvoyer la moyenne (arithmétique) des valeurs numériques dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Renvoyer le plus grand nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Renvoyer le nombre médian de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Renvoyer le plus petit nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Renvoyer une liste des élément(s) le(s) plus courant(s) dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Renvoyer un élément dans la liste au hasard.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Renvoyer l’écart-type de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Renvoyer la somme de tous les nombres dans la liste.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraction aléatoire";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Renvoyer une fraction aléatoire entre 0.0 (inclus) et 1.0 (exclus).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entier aléatoire entre %1 et %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Renvoyer un entier aléatoire entre les deux limites spécifiées, incluses.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrondir";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrondir par défaut";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrondir par excès";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrondir un nombre au-dessus ou au-dessous.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://fr.wikipedia.org/wiki/Racine_carree";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "valeur absolue";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "racine carrée";
Blockly.Msg.MATH_SINGLE_OP_SQUARE = "square";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Renvoie la valeur absolue d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Renvoie e à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Renvoie le logarithme naturel d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Renvoie le logarithme base 10 d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Renvoie l’opposé d’un nombre";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Renvoie 10 à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Renvoie la racine carrée d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_SQUARE = "Return the number multiplied by itself.";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Renvoie l’arccosinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Renvoie l’arcsinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Renvoie l’arctangente d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Renvoie le cosinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Renvoie le sinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Renvoie la tangente d’un angle en degrés (pas en radians).";
Blockly.Msg.ME = "Moi";
Blockly.Msg.MENU_ABOUT = "à propos";
Blockly.Msg.MENU_ABOUT_PROJECT = "à propos du projet Open Roberta";
Blockly.Msg.MENU_ATTACH = "attacher...";
Blockly.Msg.MENU_BEGINNER = "débutant";
Blockly.Msg.MENU_CHANGE = "modifier...";
Blockly.Msg.MENU_CHECK = "vérifier";
Blockly.Msg.MENU_CODE_DOWNLOAD_TOOLTIP = "Télécharge le code source du programme sur ton ordinateur";
Blockly.Msg.MENU_CODE_REFRESH_TOOLTIP = "Rafraichit le code source, si tu as changé des blocs NEPO";
Blockly.Msg.MENU_CONNECT = "connecter...";
Blockly.Msg.MENU_CREATE_LINK = "générer un lien...";
Blockly.Msg.MENU_DEBUG_START_TOOLTIP = "Enter Debugging Mode.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_BREAKPOINT_TOOLTIP = "Step forward to the next breakpoint in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_INTO_TOOLTIP = "Step Into to the next block in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STEP_OVER_TOOLTIP = "Step Over to the next block in the program.";  // untranslated
Blockly.Msg.MENU_DEBUG_STOP_TOOLTIP = "Exit Debugging Mode.";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "supprimer l'utilisateur";
Blockly.Msg.MENU_EDIT = "modifier";
Blockly.Msg.MENU_EDIT_TOOLTIP = "modifier";
Blockly.Msg.MENU_EV3 = "préparer EV3";
Blockly.Msg.MENU_EXPERT = "expert";
Blockly.Msg.MENU_EXPORT_PROG = "exporter le programme";
Blockly.Msg.MENU_FAQ = "questions fréquentes";
Blockly.Msg.MENU_GALLERY = "galerie";
Blockly.Msg.MENU_GALLERY_TOOLTIP = "galerie";
Blockly.Msg.MENU_GENERAL = "aide générale";
Blockly.Msg.MENU_HELP = "aide";
Blockly.Msg.MENU_HELP_TOOLTIP = "aide";
Blockly.Msg.MENU_IMPORT_PROG = "importer un programme";
Blockly.Msg.MENU_LANGUAGE = "langue";
Blockly.Msg.MENU_LANGUAGE_TOOLTIP = "langue";
Blockly.Msg.MENU_LIST = "lister...";
Blockly.Msg.MENU_LIST_CONF = "mes configurations...";
Blockly.Msg.MENU_LIST_PROG = "mes programmes...";
Blockly.Msg.MENU_LIST_PROG_EXAMPLES = "exemples de programmes...";
Blockly.Msg.MENU_LOGGING = "logs";
Blockly.Msg.MENU_LOG_IN = "connexion...";
Blockly.Msg.MENU_LOG_OUT = "déconnexion";
Blockly.Msg.MENU_MANAGE_USERGROUPS = "Manage user groups ...";  // untranslated
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Ton programme a été téléchargé";
Blockly.Msg.MENU_NEW = "nouveau...";
Blockly.Msg.MENU_PROGRAMMING = "programmer avec NEPO";
Blockly.Msg.MENU_PROPERTIES = "propriétés";
Blockly.Msg.MENU_RESET_FIRMWARE = "reset to factory defaults";  // untranslated
Blockly.Msg.MENU_RIGHT_CODE_TOOLTIP = "Ouvrir/fermer l'onglet code source.";
Blockly.Msg.MENU_RIGHT_HELP_TOOLTIP = "aide";
Blockly.Msg.MENU_RIGHT_INFO_TOOLTIP = "informations";
Blockly.Msg.MENU_RIGHT_LEGAL_TOOLTIP = "Open/close the legal information view.";  // untranslated
Blockly.Msg.MENU_RIGHT_SIM_TOOLTIP = "Ouvrir/fermer l'onglet simulation.";
Blockly.Msg.MENU_RIGHT_TUTORIAL_TOOLTIP = "Ouvrir/fermer l'onglet tutoriel.";
Blockly.Msg.MENU_ROBOT = "robot";
Blockly.Msg.MENU_ROBOT_STATE_INFO = "informations";
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "info robot";
Blockly.Msg.MENU_ROBOT_STOP_HINT_EV3 = "Appuye sur les boutons <span class='typcn typcn-media-stop\"></span>+<span class=\"typcn typcn-arrow-sorted-down\"></span> du robot pour arrêter le programme !";
Blockly.Msg.MENU_ROBOT_STOP_HINT_NXT = "Appuye sur le bouton <span class='typcn typcn-media-cancel\"></span> du robot pour arrêter le programme !";
Blockly.Msg.MENU_ROBOT_TOOLTIP = "robots";
Blockly.Msg.MENU_ROBOT_WLAN = "WLAN credentials ...";  // untranslated
Blockly.Msg.MENU_RUN_MULT_SIM = "multiple robot simulation ...";  // untranslated
Blockly.Msg.MENU_SAVE = "sauvegarder";
Blockly.Msg.MENU_SAVE_AS = "sauvegarder sous...";
Blockly.Msg.MENU_SHOW_AGAIN = "afficher l'écran de démarrage";
Blockly.Msg.MENU_SHOW_CODE = "code source";
Blockly.Msg.MENU_SIM_BACK = "retour";
Blockly.Msg.MENU_SIM_DRAW = "dessiner Parcours";
Blockly.Msg.MENU_SIM_IMPORT_TOOLTIP = "uploader une image de fond qui sera ajoutée à la liste d'images";
Blockly.Msg.MENU_SIM_MATH = "coordonnées du parcours";
Blockly.Msg.MENU_SIM_POSE_TOOLTIP = "réinitialiser la position du robot";
Blockly.Msg.MENU_SIM_RESCUE = "Parcours Rescue";
Blockly.Msg.MENU_SIM_ROBERTA = "Parcours Roberta";
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "afficher le robot";
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "changer la scène";
Blockly.Msg.MENU_SIM_SIMPLE = "Parcours facile";
Blockly.Msg.MENU_SIM_START_TOOLTIP = "démarrer le programme dans la simulation";
Blockly.Msg.MENU_SIM_STOP = "stop";
Blockly.Msg.MENU_SIM_STOP_TOOLTIP = "stopper le programme dans la simulation";
Blockly.Msg.MENU_SIM_VALUES_TOOLTIP = "afficher les données des capteurs";
Blockly.Msg.MENU_SIM_VARIABLES_TOOLTIP = "Open/close the variable data view.";  // untranslated
Blockly.Msg.MENU_SIM_WRO = "World Robot Olympiad scene";  // untranslated
Blockly.Msg.MENU_SOURCE_CODE_EDITOR = "open source code editor";  // untranslated
Blockly.Msg.MENU_START_BRICK = "démarrer le robot";
Blockly.Msg.MENU_START_SIM = "démarrer une simulation";
Blockly.Msg.MENU_STATE_INFO = "informations détaillées";
Blockly.Msg.MENU_STOP_BRICK = "stop program on »$«";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "blocs NEPO";
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "blocs NEPO pour débutant";
Blockly.Msg.MENU_TOOLBOX_EXPERT = "blocs NEPO pour expert";
Blockly.Msg.MENU_TUTORIAL = "tutoriels";
Blockly.Msg.MENU_TUTORIAL_TOOLTIP = "tutoriels";
Blockly.Msg.MENU_USER = "connexion";
Blockly.Msg.MENU_USERGROUP_LOG_IN = "Log in with user group ...";  // untranslated
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "info utilisateur";
Blockly.Msg.MENU_USER_TOOLTIP = "utilisateur";
Blockly.Msg.MENU_WLAN_CREDENTIALS = "WLAN credentials";  // untranslated
Blockly.Msg.MENU_ZOOM = "zoomer";
Blockly.Msg.MENU_ZOOM_IN = "agrandir";
Blockly.Msg.MENU_ZOOM_OUT = "réduire";
Blockly.Msg.MENU_ZOOM_RESET = "réinitialiser";
Blockly.Msg.MESSAGE_ADDED_USER = "L'utilisateur « $ » a été ajouté.";
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Tu as effacé la configuration « $ » du robot";
Blockly.Msg.MESSAGE_EDIT_CHECK = "Vérification de ton programme !";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Ta configuration $ a été sauvegardée !";
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Ta configuration a été sauvegardée sous le nom « $ »";
Blockly.Msg.MESSAGE_EDIT_SAVE_GROUP_AS = "Le groupe a été créé";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Ton programme a été sauvegardé";
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Ton programme a été sauvegardé sous le nom « $ »";
Blockly.Msg.MESSAGE_EDIT_START = "Your program »$« will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "Incomptabilité entre le firmware de Open Roberta Lab et celui de ton robot. Envoi nous s'il te plaît un email !";
Blockly.Msg.MESSAGE_GROUP_DELETED = "Le groupe « $ » a été supprimé";
Blockly.Msg.MESSAGE_INVALID_CONF_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers. The default name »[robot]basis« can't be used here.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Utilise uniquement des lettres et des chiffres et commance TOUJOURS par une letrre. Réessaie de nouveau !";
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Cette fonction n'existe pas encore, désolé !";
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Tu as effacé ton programme '$'.";
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Connecte de nouveau ton robot avec Open Roberta Lab.";
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Ton robot $ est maintenant connecté.";
Blockly.Msg.MESSAGE_ROBOT_DISCONNECTED = "Un robot actif a été déconnecté";
Blockly.Msg.MESSAGE_USER_DELETED = "Tu as effacé ton compte d'utilisateur. Nous espérons que tu reviennes bientôt !";
Blockly.Msg.MESSAGE_USER_GROUP_DELETED = "L'utilisateur « $ » a été supprimé";
Blockly.Msg.MESSAGE_USER_LOGIN = "Salut « $ » !";
Blockly.Msg.MESSAGE_USER_LOGOUT = "Tu n'es plus connecté";
Blockly.Msg.MICROBITBRICK_TOOLTIP = "Represents micro:bit, a pocket-sized codeable computer. There are also inbuilt actors and sensors available, e.g. buttons, display ...";  // untranslated
Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP = "Gets the current reading from the microphone in % (mapped to 0 - 100). If the value is always low, the value has to be multiplied by 10, because the amplification is missing on the hardware.";  // untranslated
Blockly.Msg.MODE = "mode";
Blockly.Msg.MODE_ACCELERATION = "accélération";
Blockly.Msg.MODE_ALTITUDE = "altitude";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "lumière ambiante";
Blockly.Msg.MODE_ANALOG = "analog value";  // untranslated
Blockly.Msg.MODE_ANGLE = "angle";
Blockly.Msg.MODE_CLAP = "clap";  // untranslated
Blockly.Msg.MODE_CLOSE = "close";  // untranslated
Blockly.Msg.MODE_COLOUR = "couleur";
Blockly.Msg.MODE_COMPASS = "boussole";
Blockly.Msg.MODE_CURRENT = "current";  // untranslated
Blockly.Msg.MODE_DATE = "date";  // untranslated
Blockly.Msg.MODE_DEGREE = "degré";
Blockly.Msg.MODE_DIGITAL = "digital value";  // untranslated
Blockly.Msg.MODE_DISTANCE = "distance";
Blockly.Msg.MODE_HUMIDITY = "humidité";
Blockly.Msg.MODE_IDALL = "liste d'identifiants";
Blockly.Msg.MODE_IDONE = "identifiant";
Blockly.Msg.MODE_INFO = "information";
Blockly.Msg.MODE_LATITUDE = "latitude";  // untranslated
Blockly.Msg.MODE_LIGHT = "lumière";
Blockly.Msg.MODE_LINE = "line";  // untranslated
Blockly.Msg.MODE_LONGITUDE = "longitude";  // untranslated
Blockly.Msg.MODE_MODULATED = "modulated";  // untranslated
Blockly.Msg.MODE_MOISTURE = "moisture";  // untranslated
Blockly.Msg.MODE_NAMEALL = "liste de noms";
Blockly.Msg.MODE_NAMEONE = "nom";
Blockly.Msg.MODE_OBSTACLE = "obstacle";
Blockly.Msg.MODE_OPEN = "open";  // untranslated
Blockly.Msg.MODE_ORIENTATION = "orientation";
Blockly.Msg.MODE_PM10 = "PM10";  // untranslated
Blockly.Msg.MODE_PM25 = "PM2.5";  // untranslated
Blockly.Msg.MODE_PRESENCE = "présence";
Blockly.Msg.MODE_PRESSED = "pressed";  // untranslated
Blockly.Msg.MODE_PRESSURE = "pressure";  // untranslated
Blockly.Msg.MODE_PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.MODE_PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.MODE_RATE = "rotation";
Blockly.Msg.MODE_RCCODE = "R/C code";  // untranslated
Blockly.Msg.MODE_REFLEXION = "reflected light";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";
Blockly.Msg.MODE_ROTATION = "nombre de rotation";
Blockly.Msg.MODE_SENSOR1 = "Light Sensor1";  // untranslated
Blockly.Msg.MODE_SENSOR2 = "Light Sensor2";  // untranslated
Blockly.Msg.MODE_SOUND = "son";
Blockly.Msg.MODE_SPEED = "speed";  // untranslated
Blockly.Msg.MODE_TEMPERATURE = "température";
Blockly.Msg.MODE_TILTED = "penché";
Blockly.Msg.MODE_TIME = "time";  // untranslated
Blockly.Msg.MODE_UNMODULATED = "unmodulated";  // untranslated
Blockly.Msg.MODE_UVLIGHT = "UV light";  // untranslated
Blockly.Msg.MODE_VALUE = "valeur";
Blockly.Msg.MODE_WORD = "mot";
Blockly.Msg.MODE_X = "X-value";  // untranslated
Blockly.Msg.MODE_Y = "Y-value";  // untranslated
Blockly.Msg.MODE_Z = "Z-value";  // untranslated
Blockly.Msg.MOISTURE_TOOLTIP = "Represents a moisture sensor.";  // untranslated
Blockly.Msg.MOTIONKIT = "MotionKit";  // untranslated
Blockly.Msg.MOTIONKIT_DUAL_TOOLTIP = "Sets each MotionKit motor to the specified direction.";  // untranslated
Blockly.Msg.MOTIONKIT_SINGLE_TOOLTIP = "Sets the selected MotionKit motor/motors to the specified direction.";  // untranslated
Blockly.Msg.MOTION_TOOLTIP = "Represents a motion sensor.";  // untranslated
Blockly.Msg.MOTOR = "moteur";
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "démarre le robot à la vitesse donnée puis l'arrête après la distance donnée";
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "démarre le robot à la vitesse donnée";
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "stoppe le robot";
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "fait tourner le robot selon l'angle donné";
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "fait tourner le robot";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE = "Allume les moteurs A et B à la puissance donnée.";
Blockly.Msg.MOTORS_ON_TOOLTIP_CALLIOPE_CB = "Turns both motors on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTORS_STOP_TOOLTIP = "Arrête les deux moteurs A et B.";
Blockly.Msg.MOTOR_ARDU_TOOLTIP = "Represents a Bot'n Roll chassis motor.";  // untranslated
Blockly.Msg.MOTOR_BACKWARD = "en arrière";
Blockly.Msg.MOTOR_BIG = "grand";
Blockly.Msg.MOTOR_BIG_TOOLTIP = "représente un grand moteur";
Blockly.Msg.MOTOR_BRAKE = "freiner";
Blockly.Msg.MOTOR_DEGREE = "degrés";
Blockly.Msg.MOTOR_DISTANCE = "distance en cm";
Blockly.Msg.MOTOR_DRIVE = "rouler";
Blockly.Msg.MOTOR_FLOAT = "roue libre";
Blockly.Msg.MOTOR_FOREWARD = "en avant";
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Lit la puissance actuelle de ce moteur";
Blockly.Msg.MOTOR_LEFT = "gauche";
Blockly.Msg.MOTOR_MIDDLE = "moyen";
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Représente un moyen moteur";
Blockly.Msg.MOTOR_NONE = "aucun";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "démarre le moteur et l'arrête après le nombre de tours ou de degrés donné";
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_MS = "Turns motor on and stops motor after execution after time has passed.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_RPM = "Turns motor on at speed in rpms (rotation per minute) and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP_SERVO = "Sets the servo motor to a specific position in degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "démarre le moteur avec une certaine puissance";
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE = "Turns motor A, B or A+B on with a specific power.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP_CALLIOPE_CB = "Turns left or right motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "autre consommateur d'énergie";
Blockly.Msg.MOTOR_PAN = "pan";  // untranslated
Blockly.Msg.MOTOR_PORT = "moteur sur le port";
Blockly.Msg.MOTOR_PORT_ARDUINO = "motor 28BYJ-48 port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "paramétrage";
Blockly.Msg.MOTOR_RIGHT = "droite";
Blockly.Msg.MOTOR_ROTATION = "tours";
Blockly.Msg.MOTOR_ROTATION_PER_MINUTE = "tours/min";
Blockly.Msg.MOTOR_ROTATION_REVERSE = "sens de rotation";
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "régler la puissance du moteur";
Blockly.Msg.MOTOR_SIDE = "côté";
Blockly.Msg.MOTOR_SPEED = "vitesse en %";
Blockly.Msg.MOTOR_SPEED_0 = "La vitesse du moteur est nulle !";
Blockly.Msg.MOTOR_STEER = "rouler";
Blockly.Msg.MOTOR_STOP = "stopper";
Blockly.Msg.MOTOR_STOP_TOOLTIP = "stoppe ce moteur";
Blockly.Msg.MOTOR_TILT = "inclinaison";
Blockly.Msg.MOTOR_TURN = "tourner";
Blockly.Msg.NAO_ABSOLUTE = "valeur absolue";
Blockly.Msg.NAO_ACCELEROMETER = "accéléromètre";
Blockly.Msg.NAO_ACCELEROMETER_TOOLTIP = "Lit la valeur actuelle de l'accéléromètre dans la direction donnée";
Blockly.Msg.NAO_ANIMATION_TOOLTIP = "Lance une animation. Tai chi est une suite artistique de mouvements compliqués. Clignoter fait clignoter le robot avec les LED. Les animations \"cligner de l'oeil\" et \"essuyer le front\" peuvent être lancées quand le robot est assis ou debout.";
Blockly.Msg.NAO_ANSWER = "réponse";
Blockly.Msg.NAO_APPLYPOSTURE = "faire que NAO";
Blockly.Msg.NAO_APPLYPOSTURE_TOOLTIP = "Dit au robot de se mettre dans la position donnée.";
Blockly.Msg.NAO_AUTONOMOUS = "Activer le comportement autonome";
Blockly.Msg.NAO_AUTONOMOUS_TOOLTIP = "Active out désactive le comportement autonome. Quand il est activé, le robot réagit aux sons, se déplace légèrement sur les côtés et suit les visages. Désactive le si cela perturbe ton programme.";
Blockly.Msg.NAO_BLINK = "clignoter";
Blockly.Msg.NAO_CAMERA = "caméra";
Blockly.Msg.NAO_CAMERA_BOTTOM = "du haut";
Blockly.Msg.NAO_CAMERA_TOP = "du bas";
Blockly.Msg.NAO_FACE_GET_INFORMATION_TOOLTIP = "Returns additional information about the given detected in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_FILENAME = "nom de fichier";
Blockly.Msg.NAO_FORGETFACEOF = "oublier le visage de";
Blockly.Msg.NAO_FORGETFACE_TOOLTIP = "Supprime un visage préalablement sauvegardé de la base de données de reconnaissance faciale du robot.";
Blockly.Msg.NAO_FRAME = "frame";  // untranslated
Blockly.Msg.NAO_FRAME_TORSO = "torse";
Blockly.Msg.NAO_FRAME_WORLD = "world";  // untranslated
Blockly.Msg.NAO_FSR = "force sensitive resistor";  // untranslated
Blockly.Msg.NAO_GETLANGUAGE_TOOLTIP = "Get the active language. This is the language the robot is currently using for Text to Speech and Voice recognition.";  // untranslated
Blockly.Msg.NAO_GETVOLUME_TOOLTIP = "Get current volume.";  // untranslated
Blockly.Msg.NAO_GYROMETER = "gyrometer";  // untranslated
Blockly.Msg.NAO_GYROMETER_TOOLTIP = "Get the current reading from the gyrometer in the given direction.";  // untranslated
Blockly.Msg.NAO_HAND = "hand";  // untranslated
Blockly.Msg.NAO_HAND_TOOLTIP = "Open or close a single hand (wrist) of the robot.";  // untranslated
Blockly.Msg.NAO_HEADSENSOR = "head sensor";  // untranslated
Blockly.Msg.NAO_INTENSITY = "intensity";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEPITCH = "ankle pitch";  // untranslated
Blockly.Msg.NAO_JOINT_ANKLEROLL = "ankle roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWROLL = "elbow roll";  // untranslated
Blockly.Msg.NAO_JOINT_ELBOWYAW = "elbow yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HAND = "hand";  // untranslated
Blockly.Msg.NAO_JOINT_HEADPITCH = "head pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HEADYAW = "head yaw";  // untranslated
Blockly.Msg.NAO_JOINT_HIPPITCH = "hip pitch";  // untranslated
Blockly.Msg.NAO_JOINT_HIPROLL = "hip roll";  // untranslated
Blockly.Msg.NAO_JOINT_HIPYAWPITCH = "hip yaw pitch";  // untranslated
Blockly.Msg.NAO_JOINT_KNEEPITCH = "knee pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERPITCH = "shoulder pitch";  // untranslated
Blockly.Msg.NAO_JOINT_SHOULDERROLL = "shoulder roll";  // untranslated
Blockly.Msg.NAO_JOINT_WRISTYAW = "wrist yaw";  // untranslated
Blockly.Msg.NAO_LEARNFACEOF = "mémoriser le visage de";
Blockly.Msg.NAO_LEARNFACE_TOOLTIP = "Mémorise un visage dans la base de données de reconnaissance faciale du robot sous le nom donné.";
Blockly.Msg.NAO_LED = "LED";
Blockly.Msg.NAO_LEDOFF_TOOLTIP = "Turn the selected LED(s) off.";  // untranslated
Blockly.Msg.NAO_LEDRESET_TOOLTIP = "Reset the selected LEDs to their original state regarding colour and intensity.";  // untranslated
Blockly.Msg.NAO_LED_ALL = "all";  // untranslated
Blockly.Msg.NAO_LED_CHEST = "poitrine";
Blockly.Msg.NAO_LED_EAR = "oreille";
Blockly.Msg.NAO_LED_EARS = "oreilles";
Blockly.Msg.NAO_LED_EYE = "œil";
Blockly.Msg.NAO_LED_EYES = "yeux";
Blockly.Msg.NAO_LED_FOOT = "pied";
Blockly.Msg.NAO_LED_HEAD = "tête";
Blockly.Msg.NAO_LED_TOOLTIP = "Règle la couleur des LED sélectionnées pour les yeux ou les pieds.";
Blockly.Msg.NAO_LOOKAT = "look at";  // untranslated
Blockly.Msg.NAO_MARK_GET_INFORMATION_TOOLTIP = "Returns additional information about the given NAO mark in an array with following values: [XAngle, YAngle, XSize, YSize, Heading], please note that all values are given in camera angles.";  // untranslated
Blockly.Msg.NAO_MOVE = "move";  // untranslated
Blockly.Msg.NAO_MOVEJOINT_TOOLTIP = "Move a single joint of the robot. A relative movement means that the current position of the selected joint is used to calculate the new position. Be aware that every joint has different limits. Therefore the input range for the degerees varies.";  // untranslated
Blockly.Msg.NAO_PART_ARM = "arm";  // untranslated
Blockly.Msg.NAO_PART_ARMS = "arms";  // untranslated
Blockly.Msg.NAO_PART_BODY = "body";  // untranslated
Blockly.Msg.NAO_PART_HEAD = "head";  // untranslated
Blockly.Msg.NAO_PART_LEG = "leg";  // untranslated
Blockly.Msg.NAO_PART_LEGS = "legs";  // untranslated
Blockly.Msg.NAO_PERFORM = "faire";
Blockly.Msg.NAO_PHRASE = "phrase";  // untranslated
Blockly.Msg.NAO_PLAYFILE_TOOLTIP = "Plays a sound file from the robot. Enter the name of the file. The file needs to be transferred to the robot beforehand.";  // untranslated
Blockly.Msg.NAO_PLAY_FILE = "play file";  // untranslated
Blockly.Msg.NAO_POINTAT = "point at";  // untranslated
Blockly.Msg.NAO_POINTLOOKAT_TOOLTIP = "Robot points or looks at a given position. The robot will move one of its hands or the head. Select the frame that is the point of reference. The values are entered in centimeter. Refer to the wiki for more information about the coordinate systems.";  // untranslated
Blockly.Msg.NAO_POSTURE_CROUCH = "s'accroupisse";
Blockly.Msg.NAO_POSTURE_LYINGBACK = "s'allonge sur le dos";
Blockly.Msg.NAO_POSTURE_LYINGBELLY = "s'allonge sur le ventre";
Blockly.Msg.NAO_POSTURE_REST = "se repose";
Blockly.Msg.NAO_POSTURE_SIT = "s'assoie";
Blockly.Msg.NAO_POSTURE_SITRELAX = "s'assoie de façon détendue";
Blockly.Msg.NAO_POSTURE_STAND = "se lève";
Blockly.Msg.NAO_POSTURE_STANDINIT = "stand init";  // untranslated
Blockly.Msg.NAO_POSTURE_STANDZERO = "stand zero";  // untranslated
Blockly.Msg.NAO_QQVGA = "160 x 120";
Blockly.Msg.NAO_QVGA = "320 x 240";
Blockly.Msg.NAO_RANDOMEYES = "yeux aléatoires";
Blockly.Msg.NAO_RANDOMEYES_TOOLTIP = "Change de façon aléatoire la couleur des yeux pendant le durée indiquée en millisecondes.";
Blockly.Msg.NAO_RASTA = "yeux rasta";
Blockly.Msg.NAO_RASTA_TOOLTIP = "La couleur des yeux alterne entre vert, jaune et rouge pendant la durée indiquée en millisecondes.";
Blockly.Msg.NAO_RECOGNIZEWORD = "reconnaissance de parole";
Blockly.Msg.NAO_RECOGNIZEWORD_TOOLTIP = "Retourne un mot de la liste donnée quand NAO le reconnaît";
Blockly.Msg.NAO_RECORDVIDEO = "enregistrer vidéo";
Blockly.Msg.NAO_RECORDVIDEO_TOOLTIP = "Enregistre une vidéo et la sauvegarde sur le robot. Utilise le système de fichiers du robot pour accéder à la vidéo.";
Blockly.Msg.NAO_RELATIVE = "valeur relative";
Blockly.Msg.NAO_RESOLUTION = "résolution";
Blockly.Msg.NAO_SETINTENSITY_TOOLTIP = "Set the intensity of selected LED(s) in a range from 0 to 100. Ears, head and chest LEDs are available";  // untranslated
Blockly.Msg.NAO_SETLANGUAGE_TOOLTIP = "Set the language. Be aware that it is necessary to download the language pack before you can use it. For more information refer to the manual of your robot.";  // untranslated
Blockly.Msg.NAO_SETVOLUME_TOOLTIP = "Set the volume in a range from 0 to 100.";  // untranslated
Blockly.Msg.NAO_STIFFNESS = "lock motors";  // untranslated
Blockly.Msg.NAO_STIFFNESS_TOOLTIP = "The stiffness of the selected body part of the robot will be turned on or off. Be aware that releasing the leg motors while the robot is standing may result in robot collapsing.";  // untranslated
Blockly.Msg.NAO_STOP = "stop movement";  // untranslated
Blockly.Msg.NAO_STOP_TOOLTIP = "The robot immediately stops all movement. Be aware that this can lead to situations where downfall is possible.";  // untranslated
Blockly.Msg.NAO_TAI_CHI = "tai chi";
Blockly.Msg.NAO_TAKEPICTURE = "prendre photo";
Blockly.Msg.NAO_TAKEPICTURE_TOOLTIP = "Takes a picture and saves it on the robot. Access the robots file system to view the picture.";  // untranslated
Blockly.Msg.NAO_TOUCHSENSOR_TOOLTIP = "Is true if the selected touchsensor on the robot was touched.";  // untranslated
Blockly.Msg.NAO_TURN_TOOLTIP = "Turns the robot for number of degrees. Only enter positive values and use the dropdown to select the direction. It is possible to enter values up to 360 degrees.";  // untranslated
Blockly.Msg.NAO_VGA = "640*480";  // untranslated
Blockly.Msg.NAO_WALK = "marcher";
Blockly.Msg.NAO_WALKTO = "marcher jusqu'à";
Blockly.Msg.NAO_WALKTO_TOOLTIP = "The robot walks to the given position. The values are entered in cm and radians and are based on the coordinate system in NAOs body. Please refer to the wiki for more information on the coordinate system and how to calculate the coordinates.";  // untranslated
Blockly.Msg.NAO_WALK_ASYNC_TOOLTIP = "Fait marcher le robot jusqu'à la position données. Les valeurs données en cm et radians sont basées sur le système de coordonnées du NAO. Consulte le wiki pour en savoir plus sur le système de coordonnées.";
Blockly.Msg.NAO_WALK_TOOLTIP = "Fait marcher le robot sur la distance donnée en cm. Pour de petites distances en dessous de 10cm il est possible que le robot n'avance pas. La distance peut ne pas être exacte et dépend du robot et de la surface sur laquelle il marche.";
Blockly.Msg.NAO_WAVE = "vague";
Blockly.Msg.NAO_WIPE_FOREHEAD = "essuyer le front";
Blockly.Msg.NEW_VARIABLE = "Nouvelle variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nouveau nom de la variable :";
Blockly.Msg.NO = "non";
Blockly.Msg.NXTBRICK_TOOLTIP = "brique NXT.";
Blockly.Msg.OFF = "éteindre";
Blockly.Msg.OLDER_THEN_14 = "J'ai plus de 16 ans !";
Blockly.Msg.ON = "allumer";
Blockly.Msg.ORA_ACCESS_RIGHT_CHANGED = "The shared right for user »$« is updated!";  // untranslated
Blockly.Msg.ORA_ACCESS_RIGHT_DELETED = "The shared right for user »$« is deleted!";  // untranslated
Blockly.Msg.ORA_ACCOUNT_NOT_ACTIVATED_TO_SHARE = "Your are not allowed to share. Please activate your account! <br><a href='https://www.roberta-home.de/index.php?id=138&L=1' target='_blank'>Further information ...</a>";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "Le serveur n'a pas trouvé la configuration du robot.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "Le transfer de la configuration du robot vers le language de programmation a échoué.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "Le programm n'a pas pu être traduit en language machine.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "La génération du programm a échouée.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED_WITH_PARAMETERS = "The program could not be generated. Pin {PIN} is incorrect in block {BLOCK}";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "Le programm n'a pas pu être trouvé dans la base de données.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "Erreur d'enregistrement du programm.";
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "Le programm n'a pas pu être transféré vers le language de programmation.";
Blockly.Msg.ORA_COMPILERWORKFLOW_SUCCESS = "The program build succeeded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "Erreur lors de la suppression de la configuration du robot. Réessaie !";
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Tu as effacé la configuration $ du robot.";
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Le nom de la configuration du robot n'est pas valide.";
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "La configuration du robot est prête.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "La configuration du robot  n'a pas pu être trouvée dans la base de données.";
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "La configuration $ est prête.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "Erreur d'enregistrement de la configuration du robot.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "Erreur d'enregistrement de la configuration du robot dans la base de données.";
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "La configuration $ du robot a été enrégistrée !";
Blockly.Msg.ORA_FIRMWARE_RESET_ERROR = "Loading the original program failed!";  // untranslated
Blockly.Msg.ORA_FIRMWARE_RESET_SUCCESS = "Your original program will run in a moment!";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_ERROR = "Your program »$« couldn't be uploaded to the gallery, it seems as if it is already uploaded.";  // untranslated
Blockly.Msg.ORA_GALLERY_UPLOAD_SUCCESS = "Your program »$« is now in the gallery!";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR = "There was an error while adding new members the user group. Please reload the current form and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR_LIMIT_REACHED = "You can not have more than 99 members in one user group.";  // untranslated
Blockly.Msg.ORA_GROUP_ADD_MEMBER_ERROR_SMALLER_THAN_ONE = "To add automatically generated members, you must enter an integer that is bigger or equals to 1.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR = "There was an error on creating the user group. Please try different inputs or try again later. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_GROUP_ALREADY_EXISTS = "You already have a user group with the that name. Please enter another name.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_GROUP_LIMIT_REACHED = "You reached the limit of user groups. You can not have more than 100 user groups in total.";  // untranslated
Blockly.Msg.ORA_GROUP_CREATE_ERROR_NOT_SAVED_TO_DB = "This group already exists";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR = "There was an error while deleting the user group. Please reload the user group list and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR_GROUP_DOES_NOT_EXISTS = "Could not find a user group with the specified name. Please reload the list of your user groups and try again.";  // untranslated
Blockly.Msg.ORA_GROUP_DELETE_ERROR_GROUP_HAS_MEMBERS = "One or more members of the user group have logged in in the past and created programs. In order to delete the user group, delete its members first.";  // untranslated
Blockly.Msg.ORA_GROUP_ERROR_MISSING_RIGHTS_TO_BE_GROUP_OWNER = "You are not allowed to be a user group owner. Your account must have an validated email attached.";  // untranslated
Blockly.Msg.ORA_GROUP_ERROR_NAME_INVALID = "The name of the user group is invalid. Please do not use special characters and enter at least one character.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ALL_ERROR = "There was an error while aquiring the list of user groups. Please reload the menu and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ONE_ERROR = "There was an error while aquiring the user group. Please reload the menu and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_GET_ONE_ERROR_NOT_FOUND = "Could not find a user group with the specified name.";  // untranslated
Blockly.Msg.ORA_GROUP_MEMBER_ERROR_ALREADY_EXISTS = "A member with the given name already exists in the user group.";  // untranslated
Blockly.Msg.ORA_GROUP_MEMBER_SHARE_RESTRICTION_EXCEEDED = "You can only share programs with other members of your user group. The owner of your user group can automatically read your programs.";  // untranslated
Blockly.Msg.ORA_GROUP_RENAME_ERROR = "There was an error while changing the name of the user group. Please reload the current form and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_TO_SHARE_DOES_NOT_EXIST = "You do not own a user group with the name you entered. <br />Try again with a different name!";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR = "There was an error while updating the user group. Please reload the user group list and try again. If this error should persist, please contact our support.";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR_NOT_FOUND = "Could not find a user group with the specified name. Please reload the current form and try again.";  // untranslated
Blockly.Msg.ORA_GROUP_UPDATE_ERROR_NOT_OWNER = "Could not update the user group. You are not the owner of that group.";  // untranslated
Blockly.Msg.ORA_LIKE_DELETE_SUCCESS = "You do not like program »$« anymore!";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_ERROR_EXISTS = "You couldn't like program »$«. Maybe you have already liked it.";  // untranslated
Blockly.Msg.ORA_LIKE_SAVE_SUCCESS = "You like program »$« now!";  // untranslated
Blockly.Msg.ORA_LIST_CREATE_WITH_ERROR = "Error: This block may be used only within a variable declaration.";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "Cet utilisateur n'existe pas!";
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Le programm n'est pas compatible avec la configuration du robot.";
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "Erreur lors de la suppression du programm, réessaie !";
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Tu as effacé le programm $ .";
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "Le nom du programm existe déjà. Choisi un autre et réessaie !";
Blockly.Msg.ORA_PROGRAM_GET_ALL_ERROR_USER_NOT_FOUND = "Can not load the programs of the specified user. Please reload the lab and try again.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Les programmes sont prêts.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Le programm n'a pas pu être trouvé dans la base de données.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "Tu n'es pas connecté. Réessaie avec ton utilisateur et mot de passe ou crée ton compte.";
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Programme téléchargé";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "$.xml n'est pas un programme compatible NEPO et ne peut pas être téléchargé";
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR_WRONG_ROBOT_TYPE = "You tried to import a program suitable for »$«, which is different from your menu selection.<br> Please switch the robot type in the robot's menu and try to import again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_INVALID_STATEMETNS = "There are errors in your program or configuration. Please check the messages.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "Le programme existe déjà.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "Tu n'as pas les droits nécessaires pour modifier le programme.";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "Ton programme a été modifié récemment. Tu dois enregistrer tes modification dans un nouveau programme >enregistrer sous<";
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "Le programme est introuvable, la mise à jour est impossible.";
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Le programme $ est enregistré.";
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "Le partage du programme $ n'est pas possible. Il n'existe pas.";
Blockly.Msg.ORA_ROBOT_DOES_NOT_EXIST = "It seems that we do not support the desired robot system!<br>Please choose another one.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "Erreur lors du mise à jour du nouveau system pour ton robot.";
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "Le robot est mise à jour avec la toute dernière version.";
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "Le robot n'est pas connecté au serveur. Regarde, si le robot est allumé, puis connecte le au serveur avec le mot de passe sous - connexion serveur.<br/> Si cela ne fonctionne pas, regarde dans l'aide.";
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "Le robot est actuellement inactif.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Envoi du programme en cours, le robot va démarrer.";
Blockly.Msg.ORA_ROBOT_PUSH_RUN_CALLIOPE2016 = "Your program »$« is downloaded to Calliope, press the reset button to start it!";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN_NXT = "Your program »$« is downloaded to the NXT, start it on the robot!";  // untranslated
Blockly.Msg.ORA_ROBOT_SET_SUCCESS = "Switched to robot system »$«!";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Erreur du serveur";
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "As-tu allumé on robot et connecté au serveur?<br/> Si cela ne fonctionne pas, regarde l'aide.";
Blockly.Msg.ORA_TOKEN_SET_ERROR_WRONG_ROBOTTYPE = "You are trying to connect a robot of a different type as selected in the menu. <br> Please switch the robot type in the robot's menu and try to connect again!";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Très bien! Ton robot $ est connecté au serveur.";
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "Erreur lors de la suppression de la palette, ressaie!";
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Tu as supprimé la palette.";
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Le nom de la palette n'est pas valide.";
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Tu as chargé ta palette.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "Ta palette na pas pu être trouvée ans la base de données.";
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "La palette est prête !";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "erreur de sauvegarde de la palette.";
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "erreur de sauvegarde de la palette";
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "la palette a été enrégistrée!";
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_INVALID_URL = "The link is not valid anymore. Please ask for resending your verification mail again";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »support-o-r@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_ACTIVATION_SUCCESS = "Your account is successfully verified! Please login!";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_ACCOUNT_LENGTH = "Your account name or your user name is to long. Please make sure that they are not longer then 25 digits. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_CONTAINS_SPECIAL_CHARACTERS = "You are using some one or more special characters in your account name! Please remove them. Your account couldn't be created.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Vérifie si toutes les cases ont été remplies.";
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Erreur de sauvegarde; l'utilisateur existe déjà ou réesaie !";
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "L'utilisateur a été créé !";
Blockly.Msg.ORA_USER_DEACTIVATION_SUCCESS = "Your account is currently not verified, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_HAS_GROUPS = "You have user groups associated with your account. Please delete them first, before you delete your account.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Erreur lors de la suppression de l'utilisateur $.";
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Erreur de suppression de l'utilisateur $ de la base de données.";
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "Tu as supprimé ton compte d'utilisateur. Nous espérons que tu reviendras bientôt !";
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "L'adresse mail inconnue. Vérifie son écriture.";
Blockly.Msg.ORA_USER_ERROR_EMAIL_USED = "There is already an account with this email address registered. Please enter another email address!";  // untranslated
Blockly.Msg.ORA_USER_ERROR_NOT_LOGGED_IN = "You need to be logged in to a user account to use this function. If you are logged in, please log out and in again.";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Ton compte d'utilisateur a été chargé.";
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "Erreur de connexion. L'utilisateur et le mot de passe, sont-ils corrects? <br /> Réessaie !";
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Login correct !";
Blockly.Msg.ORA_USER_GROUP_SAVE_AS_ERROR_USER_GROUP_EXISTS = "This user already belongs to the group";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_EXPIRED_URL = "The link is not valid anymore. Please ask for resetting your password again, if you still cannot remember it!";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_FAIL = "Sorry, we cannot send a mail to you, please contact »support-o-r@iais.fraunhofer.de«";  // untranslated
Blockly.Msg.ORA_USER_PASSWORD_RECOVERY_SENT_MAIL_SUCCESS = "We send a mail to you, please check your mailbox!";  // untranslated
Blockly.Msg.ORA_USER_TO_ADD_NOT_FOUND = "User was not found";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "L'utilisateur pour le partage de ton programme n'existe pas. L'as-tu écrit correctement?<br /> Réessaie !";
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "Tu ne peux pas partager les programmes avec toi-même.";
Blockly.Msg.ORA_USER_UPDATE_ERROR_NOT_SAVED_TO_DB = "The password could not be saved to the database. Are you sure that you entered the old password correctly?";  // untranslated
Blockly.Msg.ORA_USER_UPDATE_SUCCESS = "Your changes have been successfully saved!";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.PARTICLE_TOOLTIP = "Represents SDS011 particle sensor.";  // untranslated
Blockly.Msg.PASSWORD = "Password";  // untranslated
Blockly.Msg.PIN_ISTOUCHED_TOOLTIP = "Is the selected pin touched?";  // untranslated
Blockly.Msg.PIN_PULL = "pull";  // untranslated
Blockly.Msg.PIN_PULL_DOWN = "down";  // untranslated
Blockly.Msg.PIN_PULL_NONE = "none";  // untranslated
Blockly.Msg.PIN_PULL_UP = "up";  // untranslated
Blockly.Msg.PIN_SET_PULL_TOOLTIP = "Sets the pull of the chosen pin";  // untranslated
Blockly.Msg.PIN_WRITE = "write";  // untranslated
Blockly.Msg.PITCH = "pitch";  // untranslated
Blockly.Msg.PLAY = "jouer un son";
Blockly.Msg.PLAY_DURATION = "durée en ms";
Blockly.Msg.PLAY_EIGHTH = "pendant un demi temps la note";
Blockly.Msg.PLAY_FILE = "depuis le fichier";
Blockly.Msg.PLAY_FILE_TOOLTIP = "Joue un fichier son";
Blockly.Msg.PLAY_FREQUENZ = "fréquence en Hz";
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Lit la valeur actuelle du volume.";
Blockly.Msg.PLAY_HALF = "pendant deux temps la note";
Blockly.Msg.PLAY_NOTE = "note";
Blockly.Msg.PLAY_NOTE_TOOLTIP = "Joue une note de musique";
Blockly.Msg.PLAY_QUARTER = "pendant un temps la note";
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Règle le volume";
Blockly.Msg.PLAY_SIXTEENTH = "pendant un quart de temps la note";
Blockly.Msg.PLAY_TONE = "note";
Blockly.Msg.PLAY_TONE_TOOLTIP = "joue une note";
Blockly.Msg.PLAY_TOOLTIP = "Represents a buzzer.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "volume";
Blockly.Msg.PLAY_WHOLE = "pendant quatre temps la note";
Blockly.Msg.POPUP_ABOUT_JOIN = "je souhaite aider";
Blockly.Msg.POPUP_ABOUT_TEXT = "Open Roberta Lab est un environnement de programmation online pour les jeunes qui permet de façon simplifiée et sans obstacles techniques la programmation d'un robot. <br /> L'environnement de programmation est complètement »open source«, Vous pouvez l'améliorer!  Les Open-Source-developpertools sont à votre disposition sur le serveur Fraunhofer";
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "Open Roberta Lab a été développé par Fraunhofer-Instituts IAIS dans le cadre de l'iInitiative  <a href='http://www.roberta-home.de/'>»Roberta – apprendre grâce aux robots«</a>";
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta a été créé en coopération avec Google Deutschland afin de permettre un approche simple de la programmation pour les élèves et les professeurs. Open Roberta a été financé par Google.org (2014 - 2015) à hauteur de 1Mio Euro. </a>";
Blockly.Msg.POPUP_AGE = "Age";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "attention";
Blockly.Msg.POPUP_BACKGROUND_STORAGE = "The Open Roberta Lab can automatically load your simulation background on your next visits. For this purpose, we will save data in the Local Storage on your computer. <a href='https://www.roberta-home.de/en/privacy-policy-open-roberta-lab/' target='_blank'>More information in our privacy policy.</a>";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD = "Il faut enregistrer ta configuration et t'inscrire avant de pouvoir quitter cette page. Sinon tu vas perdre tout ton travail !";
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "Il faut enregistrer ta configuration avant de pouvoir quitter cette page. Sinon tu vas perdre tout ton travail !";
Blockly.Msg.POPUP_CANCEL = "annuler";
Blockly.Msg.POPUP_CHANGE_PASSWORD = "changer le mot de passe";
Blockly.Msg.POPUP_CONFIRM_CONTINUE = "<br><br><i>Clique « OK » pour perdre ton travail. Clique « Annuler » pour rester sur cette page et sauvegarder tes données.</i>";
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Veux-tu vraiment supprimer ta configuration du robot ?";
Blockly.Msg.POPUP_CONFIRM_DELETE_GROUP = "Do you really want to delete these groups?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Veux-tu vraiment supprimer ton programme ?";
Blockly.Msg.POPUP_CONFIRM_DELETE_USER_GROUP = "Do you really want to remove these users below from the current group?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "Le firmware du robot a changé. il se peut que tes programmes fonctionnent encore, mais nous te conseillons de le mettre à jour. Clique sur >> actualiser <<";
Blockly.Msg.POPUP_CONTINUE = "continuer";
Blockly.Msg.POPUP_CREATE_BOOKMARK = "Create a browser bookmark now to save your robot selection!";  // untranslated
Blockly.Msg.POPUP_DISPLAY_HEADER = "output of your program";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD = "Download your program to »$«";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_CHECK = "Okay, I've changed the download folder of my browser permanently. Don't show this popup again and download my programs directly.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1 = "Right click on your program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_EDISON = "Connect your Edison via the EdComm cable and press the round button";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_1_SENSEBOX = "Check that your device is in programming mode (LED dimming in a pattern), if not, double press the red button. Right click on you program link below and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2 = "choose »Save link as ...«, then";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_2_EDISON = "click on »Play« to play your program to Edison and";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3 = "click on your connected »$« in the left column,";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_3_EDISON = "wait until Edison beeps, then unplug.";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4 = "now click on the »Save« button on the bottom right.<br><span style='font-size: 14px;'>If your program doesn't start automatically press the reset button after a while.</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_EDISON = "Press the triangle button to start your program on your Edison<br><span style='font-size: 14px;'>Having trouble? Turn up the volume and check that all sound enhancements are turned off</span>";  // untranslated
Blockly.Msg.POPUP_DOWNLOAD_STEP_4_SENSEBOX = "now click on the »Save« button on the bottom right.";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "actualiser";
Blockly.Msg.POPUP_EMAIL = "e-mail";
Blockly.Msg.POPUP_EMAIL_SEND = "Envoyer maintenant";
Blockly.Msg.POPUP_GET_LINK = "Here is the link to your actual program. Please don't change it, it probably won't work anymore. It's already copied to your clipboard!</br>$";  // untranslated
Blockly.Msg.POPUP_MULTIPLE_ROBOTS = "Select multiple programs for the simulation";  // untranslated
Blockly.Msg.POPUP_MULTROBOTS_NOPROGRAMS = "Please create and store at least two programs which then can be executed each by a simulated robot!";  // untranslated
Blockly.Msg.POPUP_NAME = "Nom";
Blockly.Msg.POPUP_NEW_PASSWORD = "nouveau mot de passe";
Blockly.Msg.POPUP_OLD_PASSWORD = "Ancien mot de passe";
Blockly.Msg.POPUP_PASSWORD = "Mot de passe";
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "réinitialiser le mot de passe";
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "Le programme n'a pas pu s'exécuter sur le robot.";
Blockly.Msg.POPUP_REGISTER_USER = "Inscris-toi maintenant";
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Répéter le mot de passe";
Blockly.Msg.POPUP_ROBOT_BATTERY = "Charge de la batterie";
Blockly.Msg.POPUP_ROBOT_NAME = "nom";
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "Le robot n'est actuellement pas connecté au serveur. Regarde s'il est allumé puis connecte le de nouveau au serveur et donne le mot de passe dans la case - connexion <br />Si cela ne fonctionne pas, regarde dans l'aide.";
Blockly.Msg.POPUP_ROBOT_STATE = "état";
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "Programme est en cours d'exécution.";
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "Pas de connexion avec le robot.";
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "le robot attend";
Blockly.Msg.POPUP_ROBOT_SYSTEM = "système";
Blockly.Msg.POPUP_ROBOT_WAIT = "temps d'attente";
Blockly.Msg.POPUP_SCANNED_ROBOTS = "found robots";  // untranslated
Blockly.Msg.POPUP_STARTUP_COOKIES = "Nous utilisons les cookies pour personnaliser le contenu et les affichages et pour analyser l'utilisation du site web.";
Blockly.Msg.POPUP_STARTUP_HELP = "As-tu besoin d'aide?";
Blockly.Msg.POPUP_STARTUP_HELP_TEXT = "In our detailed help, we will explain everything you need, from building instructions to frequently asked questions.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Ne plus afficher cette fenêtre la prochain fois.";
Blockly.Msg.POPUP_STARTUP_START = "Choisis ton système !";
Blockly.Msg.POPUP_STARTUP_TOUR_TEXT = "Would you like to get started, but do not know exactly how? We will show you the first steps in an interactive tutorial.";  // untranslated
Blockly.Msg.POPUP_TOUR = "visite";
Blockly.Msg.POPUP_USERNAME = "Nom d'utilisateur";
Blockly.Msg.POPUP_USERNAME_LOGOFF = "tu n'es pas inscrit";
Blockly.Msg.POPUP_VALUE = "valeur";
Blockly.Msg.POPUP_WLAN_SECURITY_INFORMATION = "Please note that the data provided in this dialog window is private and will not be stored in the OpenRoberta lab; it will only be used for program creation and during the compilation process. Make sure that for each new session you enter these credentials again. Please keep in mind that exposing this information to public may pose security risks.";  // untranslated
Blockly.Msg.POPUP_WLAN_SSID = "SSID";  // untranslated
Blockly.Msg.PORT_ANKLE = "cheville";
Blockly.Msg.PORT_BUMPER = "bumper";
Blockly.Msg.PORT_ELBOW = "coude";
Blockly.Msg.PORT_HAND = "main";
Blockly.Msg.PORT_HEAD = "tête";
Blockly.Msg.PORT_HIP = "hanche";
Blockly.Msg.PORT_INTERNAL = "Port internal";  // untranslated
Blockly.Msg.PORT_KNEE = "genoux";
Blockly.Msg.PORT_SHOULDER = "épaule";
Blockly.Msg.PORT_WRIST = "poignet";
Blockly.Msg.POTENTIOMETER_TOOLTIP = "Représente un potentiomètre.";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "autoriser les ordres";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://fr.wikipedia.org/wiki/Proc%C3%A9dure_%28informatique%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur et utiliser son résultat.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Créer '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Décrire cette fonction…";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faireQuelqueChose";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "pour";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crée une fonction sans sortie.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retour";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crée une fonction avec une sortie.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Attention : Cette fonction a des paramètres en double.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Surligner la définition de la fonction";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Attention : Ce bloc pourrait n’être utilisé que dans une définition de fonction.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nom de l’entrée :";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Ajouter une entrée à la fonction.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entrées";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Ajouter, supprimer, ou réarranger les entrées de cette fonction.";
Blockly.Msg.PROCEDURES_TITLE = " »";
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Erreur : cette variable ne peut être utilisée que dans la fonction « ";
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Erreur : cette variable ne peut être utilisée que dans dans la boucle ou le bloc qui déclare la variable ";
Blockly.Msg.PROGLIST_DELETE_ALL_TOOLTIP = "Clique ici pour supprimer tous les programme sélectionnés";
Blockly.Msg.PROGLIST_DELETE_TOOLTIP = "Clique ici pour supprimer ton programme";
Blockly.Msg.PROGLIST_LOAD_TOOLTIP = "Clique ici pour charger la configuration du robot";
Blockly.Msg.PROGLIST_SHARE_TOOLTIP = "Clique ici pour partager ton programme avec des amis";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY = "Es-tu sûr de vouloir partager ton programme avec tout le monde ?";
Blockly.Msg.PROGLIST_SHARE_WITH_GALLERY_TOOLTIP = "Clique ici pour ajouter ton programme à la galerie où ils sera visible par tout le monde";
Blockly.Msg.PROGRAM_ERROR_EXPRBLOCK_PARSE = "This expression is syntactically incorrect.";  // untranslated
Blockly.Msg.PROGRAM_ERROR_EXPRBLOCK_TYPECHECK = "This expression is invalid. The type check failed.";  // untranslated
Blockly.Msg.PULSEHIGH = "pulse time HIGH";  // untranslated
Blockly.Msg.PULSELOW = "pulse time LOW";  // untranslated
Blockly.Msg.PULSETOOLTIP = "Represents a pulse sensor.";  // untranslated
Blockly.Msg.RADIO_GET_RSSI_TOOLTIP = "Gets the RSSI of the last package.";  // untranslated
Blockly.Msg.REDO = "Refaire";
Blockly.Msg.RELAY = "relay";  // untranslated
Blockly.Msg.RELAY_ARDUINO = "relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.RELAY_TOOLTIP = "Represents a relay.";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Supprimer un commentaire";
Blockly.Msg.RENAME_VARIABLE = "Renommer la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renommer toutes les variables « %1 » en :";
Blockly.Msg.RESEND_ACTIVATION = "resend verification email";  // untranslated
Blockly.Msg.RETURN = "retourner";
Blockly.Msg.RFID_TOOLTIP = "Represents an RFID reader.";  // untranslated
Blockly.Msg.RGBLED_TOOLTIP = "Represents an RGB LED.";  // untranslated
Blockly.Msg.RGB_LED_TOOLTIP = "Turns the LED on or off and changes the color.";  // untranslated
Blockly.Msg.RIGHT = "right";  // untranslated
Blockly.Msg.ROLL = "roll";  // untranslated
Blockly.Msg.ROTATIONS_PER_MINUTE = "rpm";  // untranslated
Blockly.Msg.SAY = "say";  // untranslated
Blockly.Msg.SAY_PARAMETERS_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text. Modify the speed (range: 0-100) and the pitch of the voice (range: 0-100) with the input fields";  // untranslated
Blockly.Msg.SAY_TOOLTIP = "The robot says the given text. It is also possible to enter special charaters. The robot will use the selected language to try and speak the entered text.";  // untranslated
Blockly.Msg.SDCARD_TOOLTIP = "Represents an SD card.";  // untranslated
Blockly.Msg.SEND_DATA = "envoi des données";
Blockly.Msg.SEND_DATA_SENSEMAP = "openSenseMap";  // untranslated
Blockly.Msg.SEND_DATA_TO = "send data to";  // untranslated
Blockly.Msg.SEND_DATA_TO_OSM_TOOLTIP = "This block is used to send data from sensors to the openSenseMap. Please configure the IDs in the configuration prior to the usage of this block.";  // untranslated
Blockly.Msg.SENSEBOXBRICK_TOOLTIP = "Represents the senseBox. Please configure here the id's from the openSenseMap, if you want to use them.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER = "accelerometer";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_X_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the X axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_X_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the X axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Y_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the Y axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Y_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the Y axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Z_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the acceleration value on the Z axis in g. Can be in range from -4 g to 4 g.";  // untranslated
Blockly.Msg.SENSOR_ACCELEROMETER_Z_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the acceleration value on the Z axis in g. Can be in range from -2 g to 2 g.";  // untranslated
Blockly.Msg.SENSOR_AMBIENTLIGHT = "ambientlight sensor";  // untranslated
Blockly.Msg.SENSOR_ANALOGOUT = "sensor analog";  // untranslated
Blockly.Msg.SENSOR_ANY = "anyplace";  // untranslated
Blockly.Msg.SENSOR_ARM_TOOLTIP = "Returns true, if the selected part of the arm is touched, otherwise false.";  // untranslated
Blockly.Msg.SENSOR_BATTERY = "voltage en mV";
Blockly.Msg.SENSOR_BOTTOM = "bottom";  // untranslated
Blockly.Msg.SENSOR_CALIBRATE = "calibrate";  // untranslated
Blockly.Msg.SENSOR_CODE = "code pad";  // untranslated
Blockly.Msg.SENSOR_COLOUR = "capteur de couleur";
Blockly.Msg.SENSOR_COLOUR_EDISON = "line tracker";  // untranslated
Blockly.Msg.SENSOR_COMPASS = "boussole";
Blockly.Msg.SENSOR_COMPASS_EV3 = "HT compass sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE = "face detector";  // untranslated
Blockly.Msg.SENSOR_DETECTFACE_GETSAMPLE_TOOLTIP = "Detect a face previously learned and saved.";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK = "NAO Mark sensor";  // untranslated
Blockly.Msg.SENSOR_DETECTMARK_GETSAMPLE_TOOLTIP = "Returns one or an array of IDs (number) of the last detected NAO Mark(s). If no marks are detected, -1 or an array consisting of 1 element with value -1 is returned. For a list of NAO marks with corresponding numbers refer to the wiki.";  // untranslated
Blockly.Msg.SENSOR_DIGITALOUT = "sensor digital";  // untranslated
Blockly.Msg.SENSOR_DROP = "drop sensor";  // untranslated
Blockly.Msg.SENSOR_DROP_GETSAMPLE_TOOLTIP = "Gets the current reading from the drop sensor in percent.";  // untranslated
Blockly.Msg.SENSOR_DROP_OFF = "drop-off sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT = "current sensor";  // untranslated
Blockly.Msg.SENSOR_ELECTRICCURRENT_GETSAMPLE_TOOLTIP = "Get the electric current from the motorboard in the selected joint.";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "capteur de rotation";
Blockly.Msg.SENSOR_FLAME = "capteur de flamme";
Blockly.Msg.SENSOR_FSR = "capteur de force";
Blockly.Msg.SENSOR_FSR_GETSAMPLE_TOOLTIP = "Get the current reading from the force sensitive resistor under the feet of the robot.";  // untranslated
Blockly.Msg.SENSOR_GESTURE = "gesture";  // untranslated
Blockly.Msg.SENSOR_GESTURE_ACTIVE = "active?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN = "upside down";  // untranslated
Blockly.Msg.SENSOR_GESTURE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN = "at the front side";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_DOWN_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face down.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP = "at the back";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FACE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is face up.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL = "freely falling";  // untranslated
Blockly.Msg.SENSOR_GESTURE_FREEFALL_GETSAMPLE_TOOLTIP = "Returns »true« if it is free falling.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE = "shaking";  // untranslated
Blockly.Msg.SENSOR_GESTURE_SHAKE_GETSAMPLE_TOOLTIP = "Returns »true« if it is shaken.";  // untranslated
Blockly.Msg.SENSOR_GESTURE_TOOLTIP = "Is the system in the selected state?";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP = "upright";  // untranslated
Blockly.Msg.SENSOR_GESTURE_UP_GETSAMPLE_TOOLTIP = "Returns »true« if the posture is upright.";  // untranslated
Blockly.Msg.SENSOR_GET = "get";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "lire";
Blockly.Msg.SENSOR_GPS_ALTITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the altitude in meters.";  // untranslated
Blockly.Msg.SENSOR_GPS_DATE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the current date.";  // untranslated
Blockly.Msg.SENSOR_GPS_LATITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the latitude in degree.";  // untranslated
Blockly.Msg.SENSOR_GPS_LONGITUDE_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the longitude in degree.";  // untranslated
Blockly.Msg.SENSOR_GPS_SENSEBOX = "GPS receiver";  // untranslated
Blockly.Msg.SENSOR_GPS_SPEED_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the speed in km/h.";  // untranslated
Blockly.Msg.SENSOR_GPS_TIME_GETSAMPLE_TOOLTIP_SENSEBOX = "Returns the current time.";  // untranslated
Blockly.Msg.SENSOR_GROVE = "Grove";
Blockly.Msg.SENSOR_GYRO = "capteur gyroscopique";
Blockly.Msg.SENSOR_GYRO_TILTED_GETSAMPLE_TOOLTIP_WEDO = "Is the tilt sensors position the indicated manner?";  // untranslated
Blockly.Msg.SENSOR_GYRO_WEDO = "tilt sensor";  // untranslated
Blockly.Msg.SENSOR_GYRO_X_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the X axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_GYRO_Y_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the Y axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_GYRO_Z_GETSAMPLE_TOOLTIP_ARDUINO = "Returns the gyroscope output on the Z axis in degrees per second. Can be in range from -2000 °/s to 2000 °/s.";  // untranslated
Blockly.Msg.SENSOR_HTCOLOUR = "HT colour sensor";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY = "capteur d'hygrométrie";
Blockly.Msg.SENSOR_HUMIDITY_ARDUINO = "humidity sensor DHT11";  // untranslated
Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP = "Lit la valeur actuelle du capteur d'hygrométrie";
Blockly.Msg.SENSOR_HUMIDITY_SENSEBOX = "humidity/temperature sensor HDC1080";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "capteur infrarouge";
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP_WEDO = "Gets the current relative distance from the infrared sensor. The values are between 1, close, and 10, further away.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER = "HT infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_EDISON = "IR seeker";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_GETSAMPLE_TOOLTIP = "Gets the position of an infrared beacon.";  // untranslated
Blockly.Msg.SENSOR_IRSEEKER_RCCODE_GETSAMPLE_TOOLTIP_EDISON = "Receives a message from a remote control.";  // untranslated
Blockly.Msg.SENSOR_IS_ARM = "is arm";  // untranslated
Blockly.Msg.SENSOR_IS_PIN = "is";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "enfoncé ?";
Blockly.Msg.SENSOR_IS_TILTED = "penché ?";
Blockly.Msg.SENSOR_IS_TOUCHED = "touché ?";
Blockly.Msg.SENSOR_JOYSTICK = "joystick";
Blockly.Msg.SENSOR_KEY = "bouton";
Blockly.Msg.SENSOR_KEYPAD = "keypad";  // untranslated
Blockly.Msg.SENSOR_KEY_ANY = "n'importe lequel";
Blockly.Msg.SENSOR_KEY_DOWN = "bas";
Blockly.Msg.SENSOR_KEY_ENTER = "milieu";
Blockly.Msg.SENSOR_KEY_ESCAPE = "retour";
Blockly.Msg.SENSOR_KEY_LEFT = "gauche";
Blockly.Msg.SENSOR_KEY_PLAY = "play";  // untranslated
Blockly.Msg.SENSOR_KEY_REC = "record";  // untranslated
Blockly.Msg.SENSOR_KEY_RIGHT = "droite";
Blockly.Msg.SENSOR_KEY_STOP = "stop";  // untranslated
Blockly.Msg.SENSOR_KEY_UP = "haut";
Blockly.Msg.SENSOR_LIGHT = "capteur de lumière";
Blockly.Msg.SENSOR_LIGHTVEML = "visible/UV light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_LIGHT_GETSAMPLE_TOOLTIP = "Reads the current value of the visible light sensor in lux. The value is between 0 to 220000 lux.";  // untranslated
Blockly.Msg.SENSOR_LIGHTVEML_UVLIGHT_GETSAMPLE_TOOLTIP = "Reads the current value of the UV light sensor in μW/cm². The value is between 0 and more than 1000.";  // untranslated
Blockly.Msg.SENSOR_LIGHT_LIGHT_GETSAMPLE_TOOLTIP_EDISON = "Gets the current reading of the light sensor";  // untranslated
Blockly.Msg.SENSOR_LIGHT_LINETRACKER = "line tracker";  // untranslated
Blockly.Msg.SENSOR_MIC = "micro";
Blockly.Msg.SENSOR_MOISTURE = "capteur d'humidité";
Blockly.Msg.SENSOR_MOISTURE_GETSAMPLE_TOOLTIP = "Lit la valeur actuelle du capteur d'humidité";
Blockly.Msg.SENSOR_MOTION = "capteur de mouvement";
Blockly.Msg.SENSOR_MOTION_ARDUINO = "motion sensor HC-SR501";  // untranslated
Blockly.Msg.SENSOR_MOTION_GETSAMPLE_TOOLTIP = "Lit la valeur actuelle du capteur de mouvement.";
Blockly.Msg.SENSOR_MS_TIMER = "unité ms";
Blockly.Msg.SENSOR_OBSTACLEDETECTOR = "Obstacle detector";  // untranslated
Blockly.Msg.SENSOR_OUT = "sensor";  // untranslated
Blockly.Msg.SENSOR_OUT_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_OUT_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PARTICLE = "SDS011 particle sensor";  // untranslated
Blockly.Msg.SENSOR_PARTICLE_PM10_GETSAMPLE_TOOLTIP = "Reads the current value of PM10 from the particle sensor.";  // untranslated
Blockly.Msg.SENSOR_PARTICLE_PM25_GETSAMPLE_TOOLTIP = "Reads the current value of PM2.5 from the particle sensor.";  // untranslated
Blockly.Msg.SENSOR_PIN = "broche";
Blockly.Msg.SENSOR_PINTOUCH = "broche";
Blockly.Msg.SENSOR_PINTOUCH_BOB3 = "arm";  // untranslated
Blockly.Msg.SENSOR_PIN_ANALOG_GETSAMPLE_TOOLTIP = "Returns the value from the specified analog pin. The value is between 0 and 1024.";  // untranslated
Blockly.Msg.SENSOR_PIN_DIGITAL_GETSAMPLE_TOOLTIP = "Returns the value from the specified digital pin. The value is either HIGH »1« or LOW »0«.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSEHIGH_GETSAMPLE_TOOLTIP = "Returns the pulse HIGH on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_PIN_PULSELOW_GETSAMPLE_TOOLTIP = "Returns the pulse LOW on a pin in microseconds or -1 if no complete pulse was received within the timeout.";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER = "potentiometer";  // untranslated
Blockly.Msg.SENSOR_POTENTIOMETER_GETSAMPLE_TOOLTIP = "Gets the current reading from the potentiometer in volts (0-5V).";  // untranslated
Blockly.Msg.SENSOR_PULSE = "pulse sensor";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP = "Gets the current reading from the pulse sensor.";  // untranslated
Blockly.Msg.SENSOR_PULSE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the pulse sensor. The value is between 0 and 1023.";  // untranslated
Blockly.Msg.SENSOR_RADIO_RSSI = "radio RSSI sensor";  // untranslated
Blockly.Msg.SENSOR_RESET = "réinitialiser";
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_RESET_TOOLTIP_EDISON = "Resets the sensors and clears the values.";  // untranslated
Blockly.Msg.SENSOR_RFID = "RFID reader";  // untranslated
Blockly.Msg.SENSOR_RFID_ARDUINO = "RFID-RC522 reader";  // untranslated
Blockly.Msg.SENSOR_RFID_GETSAMPLE_TOOLTIP = "Gets the current reading from the RFID reader.";  // untranslated
Blockly.Msg.SENSOR_RSSI = "signal strength";  // untranslated
Blockly.Msg.SENSOR_RSSI_VALUE_GETSAMPLE_TOOLTIP = "Gets the signal strength from the last received message.";  // untranslated
Blockly.Msg.SENSOR_SONAR = "sonar";
Blockly.Msg.SENSOR_SOUND = "capteur de son";
Blockly.Msg.SENSOR_SOUND_CALLIOPE = "micro";
Blockly.Msg.SENSOR_SOUND_CLAP_GETSAMPLE_TOOLTIP_EDISON = "Is a clap detected?";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE = "capteur de température";
Blockly.Msg.SENSOR_TEMPERATURE_ARDUINO = "temperature sensor TMP36";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_PRESSURE_GETSAMPLE_TOOLTIP = "Gets the current reading of the air pressure sensor in Pascal. Normal air pressure is 101325 Pascal.";  // untranslated
Blockly.Msg.SENSOR_TEMPERATURE_SENSEBOX = "temperature/pressure sensor BMP280";  // untranslated
Blockly.Msg.SENSOR_TIME = "temps";
Blockly.Msg.SENSOR_TIMER = "capteur temps";
Blockly.Msg.SENSOR_TOP = "haut";
Blockly.Msg.SENSOR_TOUCH = "capteur tactile";
Blockly.Msg.SENSOR_ULTRASONIC = "capteur ultra-son";
Blockly.Msg.SENSOR_ULTRASONIC_ARDUINO = "capteur ultrason HC-SR04";
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_ARDUINO = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm.";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC_DISTANCE_GETSAMPLE_TOOLTIP_MBOT = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to messure is 400 cm. Minimum distance tp measure is 3 cm.";  // untranslated
Blockly.Msg.SENSOR_UNIT_ACCEL = "m/s² ";
Blockly.Msg.SENSOR_UNIT_AMPERE = "A";
Blockly.Msg.SENSOR_UNIT_CM = "cm";
Blockly.Msg.SENSOR_UNIT_DEGREE = "°";
Blockly.Msg.SENSOR_UNIT_DEGREE_PER_SECOND = "°/s";  // untranslated
Blockly.Msg.SENSOR_UNIT_IRRADIANCE = "μW/cm²";  // untranslated
Blockly.Msg.SENSOR_UNIT_LUX = "lx";  // untranslated
Blockly.Msg.SENSOR_UNIT_METER = "m";  // untranslated
Blockly.Msg.SENSOR_UNIT_MILLIG = "milli-g";
Blockly.Msg.SENSOR_UNIT_MM = "mm";
Blockly.Msg.SENSOR_UNIT_MS = "ms";
Blockly.Msg.SENSOR_UNIT_NEWTON = "N";
Blockly.Msg.SENSOR_UNIT_OMEGA = "ω";
Blockly.Msg.SENSOR_UNIT_PASCAL = "Pascal";  // untranslated
Blockly.Msg.SENSOR_UNIT_PERCENT = "%";
Blockly.Msg.SENSOR_UNIT_PM = "μg/m³";  // untranslated
Blockly.Msg.SENSOR_UNIT_SPEED = "km/h";  // untranslated
Blockly.Msg.SENSOR_UNIT_VOLT = "V";
Blockly.Msg.SENSOR_VALUE = "valeur";
Blockly.Msg.SENSOR_WALL = "wall sensor";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "Open Roberta Lab est actuellement indisponible. </br> Vérifie ta connexion internet et actualise la page. Si le problème persiste, merci de bien vouloir nous le signaler par mail :</br>support-o-r@iais.fraunhofer.de";
Blockly.Msg.SERVO_MOTOR = "servomoteur";
Blockly.Msg.SERVO_MOTOR_ARDUINO = "servo motor SG90";  // untranslated
Blockly.Msg.SERVO_TOOLTIP = "Représente un servomoteur.";
Blockly.Msg.SET = "régler";
Blockly.Msg.SETLANGUAGE_TOOLTIP = "Change la langue.";
Blockly.Msg.SET_LED = "LED";
Blockly.Msg.SET_RELAY = "turn relay";  // untranslated
Blockly.Msg.SET_RELAY_ARDUINO = "turn relay SRD-05VDC-SL-C";  // untranslated
Blockly.Msg.SET_RELAY_TOOLTIP = "Turns the relay on or off";  // untranslated
Blockly.Msg.SET_RGB_LED = "LED RVB";
Blockly.Msg.SHARE_PROGRAMS_USERGROUP_HINT = "To share programs with a user group, open your program list and share a program with a user group.";  // untranslated
Blockly.Msg.SHARE_WITH_USER = "Share your program with another user ...";  // untranslated
Blockly.Msg.SHARE_WITH_USERGROUP = "Share your program with the members of one of your user groups ...";  // untranslated
Blockly.Msg.SIDE_BRUSH_OFF = "arrêter le balai latéral";
Blockly.Msg.SIDE_BRUSH_OFF_TOOLTIP = "Arrête le balai latéral.";
Blockly.Msg.SIDE_BRUSH_STATUS = "balai latéral";
Blockly.Msg.SIDE_BRUSH_TOOLTIP = "Met en marche ou arrête le balai latéral.";
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Ce bloc n'est malheureusement pas disponible pour la simulation!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "Ce capteur n'est pas prévu dans la configuration de ton robot. Vérifie s'il te plaît!";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "Confusion entre capteur infrarouge et ultra-son. Vérifie s'il te plaït !";
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "Mauvais port du capteur ! Vérifie s'il te plaît !";
Blockly.Msg.SINGLE_MOTOR_ON_TOOLTIP_CALLIOPE = "Turns the single motor on with a specific power. Power can be positiv or negativ for reverse direction.";  // untranslated
Blockly.Msg.SLEEP = "sleep";  // untranslated
Blockly.Msg.SLOT_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_LEFT = "left";  // untranslated
Blockly.Msg.SLOT_LEFT_PITCH = "left pitch";  // untranslated
Blockly.Msg.SLOT_LEFT_ROLL = "left roll";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW = "left yaw";  // untranslated
Blockly.Msg.SLOT_LEFT_YAW_PITCH = "left yaw pitch";  // untranslated
Blockly.Msg.SLOT_MIDDLE = "middle";  // untranslated
Blockly.Msg.SLOT_PITCH = "pitch";  // untranslated
Blockly.Msg.SLOT_REAR = "rear";  // untranslated
Blockly.Msg.SLOT_RIGHT = "right";  // untranslated
Blockly.Msg.SLOT_RIGHT_PITCH = "right pitch";  // untranslated
Blockly.Msg.SLOT_RIGHT_ROLL = "right roll";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW = "right yaw";  // untranslated
Blockly.Msg.SLOT_RIGHT_YAW_PITCH = "right yaw pitch";  // untranslated
Blockly.Msg.SLOT_SIDE = "side";  // untranslated
Blockly.Msg.SLOT_TILTED_ANY = "any";  // untranslated
Blockly.Msg.SLOT_TILTED_BACK = "back";  // untranslated
Blockly.Msg.SLOT_TILTED_DOWN = "down";  // untranslated
Blockly.Msg.SLOT_TILTED_FRONT = "front";  // untranslated
Blockly.Msg.SLOT_TILTED_NO = "not";  // untranslated
Blockly.Msg.SLOT_TILTED_UP = "up";  // untranslated
Blockly.Msg.SLOT_YAW = "yaw";  // untranslated
Blockly.Msg.SOCKET = "socket";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor in the range 0 to 100. 0 is quiet and 100 is loud.";  // untranslated
Blockly.Msg.SOUND_TOOLTIP = "Représente un capteur de son.";
Blockly.Msg.SOURCE_CODE_EDITOR_BUILD_TOOLTIP = "Build the source code.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_CLOSE_CONFIRMATION = "All your changes will be lost!";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_IMPORT_TOOLTIP = "Import current NEPO program.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_PLACEHOLDER = "Import current NEPO program or just start typing";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_RUN_TOOLTIP = "Run on the robot.";  // untranslated
Blockly.Msg.SOURCE_CODE_EDITOR_UPLOAD_TOOLTIP = "Upload the source code.";  // untranslated
Blockly.Msg.SSID = "SSID";  // untranslated
Blockly.Msg.START = "démarrage";
Blockly.Msg.START_ACTIVITY = "activité";
Blockly.Msg.START_ACTIVITY_TOOLTIP = "démarre une activité supplémentaire";
Blockly.Msg.START_PROGRAM = "démarrage du programme";
Blockly.Msg.START_PROGRAM_AUTOMOMOUSLIFE = "comportement autonome";
Blockly.Msg.START_PROGRAM_DEBUG = "affiche les données du capteur";
Blockly.Msg.START_TOOLTIP = "Bloc de démarrage du programme principal";
Blockly.Msg.STEPMOTOR_TOOLTIP = "Représente un moteur pas à pas";
Blockly.Msg.STEPS_PER_REVOLUTION = "nombre de pas par tour complet";
Blockly.Msg.STEP_MOTOR = "moteur pas à pas";
Blockly.Msg.STEP_MOTOR_ARDUINO = "step motor 28BYJ-48";  // untranslated
Blockly.Msg.STEP_MOTOR_ON_TOOLTIP = "Allume le moteur à la vitesse donnée en tours par minute et stoppe le moteur après le nombre de rotations données.";
Blockly.Msg.STRENGTH = "force";
Blockly.Msg.SWITCH = "switch";  // untranslated
Blockly.Msg.SWITCH_LED_MATRIX_TOOLTIP = "Enables/Disables the LED matrix to use the dual purpose pins.";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "configuration du robot";
Blockly.Msg.TAB_PROGRAM = "programme";
Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP = "Gets the current reading from the temperature sensor in °C.";  // untranslated
Blockly.Msg.TEMPERATURE_TOOLTIP = "Représente un capteur de températuer";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ajouter le texte";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "à";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Ajouter du texte à la variable '%1'.";
Blockly.Msg.TEXT_CAST_CHAR_TONUMBER = "cast %1 at index %2 to Number";  // untranslated
Blockly.Msg.TEXT_CAST_CHAR_TONUMBER_TOOLTIP = "Convert the character at the given position in this string into the corresponding ASCII number. The first character in the string is at position 0!";  // untranslated
Blockly.Msg.TEXT_CAST_STRING_TONUMBER = "cast %1 to Number";  // untranslated
Blockly.Msg.TEXT_CAST_STRING_TONUMBER_TOOLTIP = "Convert this string into a number, if it contains a number.";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minuscules";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Majuscule Au Début De Chaque Mot";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAJUSCULES";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Renvoyer une copie du texte dans une autre casse.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtenir la première lettre";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtenir la lettre # depuis la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtenir la lettre #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_CHARAT_LAST = "obtenir la dernière lettre";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtenir une lettre au hasard";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Renvoie la lettre à la position indiquée.";
Blockly.Msg.TEXT_COMMENT_TOOLTIP = "Write a comment to your code here, to make it easier for you and others to read and understand your code. It will also generate an inline comment in the generated source code";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Ajouter un élément au texte.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "joindre";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Ajouter, supprimer, ou réordonner des sections pour reconfigurer ce bloc de texte.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "jusqu’à la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "jusqu’à la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "jusqu’à la dernière lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dans le texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtenir la sous-chaîne depuis la première lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtenir la sous-chaîne depuis la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtenir la sous-chaîne depuis la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Renvoie une partie indiquée du texte.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trouver la première occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trouver la dernière occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de la première chaîne dans la seconde. Renvoie -1 si la chaîne n’est pas trouvée.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Renvoie vrai si le texte fourni est vide.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "créer un texte avec";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Créer un morceau de texte en agrégeant un nombre quelconque d’éléments.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Renvoie le nombre de lettres (espaces compris) dans le texte fourni.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "afficher %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afficher le texte, le nombre ou une autre valeur spécifié.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Demander un nombre à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Demander un texte à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "invite pour un nombre avec un message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "invite pour un texte avec un message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Une lettre, un mot ou une ligne de texte.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "supprimer les espaces des deux côtés";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "supprimer les espaces du côté gauche";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "supprimer les espaces du côté droit";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Renvoyer une copie du texte avec les espaces supprimés d’un bout ou des deux.";
Blockly.Msg.THETA = "theta";
Blockly.Msg.TIMEOUT = "durée maximale";
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "initialise le temps";
Blockly.Msg.TITLE = "title";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Aujourd'hui";
Blockly.Msg.TOOLBOX_ACTION = "Action";
Blockly.Msg.TOOLBOX_ANIMATION = "Animation";
Blockly.Msg.TOOLBOX_CLEANING = "Nettoyage";
Blockly.Msg.TOOLBOX_COLOUR = "Couleurs";
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";
Blockly.Msg.TOOLBOX_CONTROL = "Contrôle";
Blockly.Msg.TOOLBOX_DECISION = "Décision";
Blockly.Msg.TOOLBOX_DISPLAY = "Affichage";
Blockly.Msg.TOOLBOX_DRIVE = "Rouler";
Blockly.Msg.TOOLBOX_IMAGE = "Images";
Blockly.Msg.TOOLBOX_LIGHT = "Lumière";
Blockly.Msg.TOOLBOX_LIST = "Listes";
Blockly.Msg.TOOLBOX_LOGIC = "Logique";
Blockly.Msg.TOOLBOX_LOOP = "Boucles";
Blockly.Msg.TOOLBOX_MATH = "Mathématiques";
Blockly.Msg.TOOLBOX_MOVE = "Mouvement";
Blockly.Msg.TOOLBOX_PIN = "Broche";
Blockly.Msg.TOOLBOX_PROCEDURE = "Fonctions";
Blockly.Msg.TOOLBOX_SENSOR = "Capteurs";
Blockly.Msg.TOOLBOX_SOUND = "Son";
Blockly.Msg.TOOLBOX_TEXT = "Texte";
Blockly.Msg.TOOLBOX_VARIABLE = "Variables";
Blockly.Msg.TOOLBOX_VISION = "Vision";
Blockly.Msg.TOOLBOX_WAIT = "Attendre";
Blockly.Msg.TOOLBOX_WALK = "Marcher";
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Bloc pour le capteur tactile.";
Blockly.Msg.TOUR1_DESCRIPTION00 = "suivant";
Blockly.Msg.TOUR1_DESCRIPTION01 = "Salut,<br>clique sur »next« et découvre Open Roberta Lab.<br>Je vais te montrer comment tu peux programmer avec NEPO.<br>Tu peux l'abandonner à tout moment en cliquant sur »X« en haut à droite.";
Blockly.Msg.TOUR1_DESCRIPTION02 = "Le menu ;-)";
Blockly.Msg.TOUR1_DESCRIPTION03 = "Ici, tu trouves tout ce dont tu as besoin pour programmer le robot!<br><span class='typcn typcn-document-text'></span> Enregistrer et ouvrir un programme<br><span class='typcn typcn-Roberta'></span> Connecte ton robot à Open Roberta Lab<br><span class='typcn typcn-lightbulb'></span> Aide<br><span class='typcn typcn-user'></span>Information sur ton compte, p. ex. login et logoff";
Blockly.Msg.TOUR1_DESCRIPTION04 = "Clique ici et bascule vers la configuration du robot";
Blockly.Msg.TOUR1_DESCRIPTION05 = "Tu peux adapter la configuration du robot plus tard,<br>si tu as construit un autre robot.<br>Si tu n'as pas de robot et tu veux seulement tester ton programme avec la <br>cette configuration est utilisée.";
Blockly.Msg.TOUR1_DESCRIPTION06 = "Clique ici et retourne vers l'environnement de programmation";
Blockly.Msg.TOUR1_DESCRIPTION07 = "La boîte à outils.<br>Ici tu trouves les blocs de programmation.";
Blockly.Msg.TOUR1_DESCRIPTION07a = "Quand tu auras plus d'expérience, tu pourras utiliser la boîte à outil expert.<br>Tu y trouveras plus de blocs pour programmer ton robot.<br><span class='typcn typcn-media-stop-outline\"></span> mode débutant<br><span class=\"typcn typcn-star-outline\"></span> mode expert";
Blockly.Msg.TOUR1_DESCRIPTION08 = "Chaque programme débute avec le program-start-bloc«.<br>Les autres blocs que le robot doit exécuter, doivent être liés à ce start-bloc.<br>Fais glisser le bloc sélectionné en dessous du start bloc.";
Blockly.Msg.TOUR1_DESCRIPTION09 = "Ici, tu trouves quelques raccourcis!<br>De la gauche vers la droitet:<br><span class='typcn typcn-media-play'></span> Clique ici pour exécuter le programme sur le robot réel<br><span class='typcn typcn-media-play-outline'></span> Clique ici pour démarrer le programme avec la simulation<br><span class='typcn typcn-cloud-storage'></span> Enregistre ton programme, mais donne lui d'abord un nom<br><span class='typcn typcn-zoom'></span> Clique ici pour agrandir les blocs<br><span class='typcn typcn-archive'></span> La poubelle! Si tu fais glisser les blocs dans la poubelle, ils seront supprimés.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attention: You cannot recover blocks once they are deleted!<br>";
Blockly.Msg.TOUR1_DESCRIPTION10 = "Clique sur »Action«";
Blockly.Msg.TOUR1_DESCRIPTION12 = "Maintenant fais glisser le nouveau bloc en dessous du start-bloc afin qu'ils soient connectés";
Blockly.Msg.TOUR1_DESCRIPTION13 = "Maintenant, ouvre la simulation...";
Blockly.Msg.TOUR1_DESCRIPTION13a = "et teste ton programme !";
Blockly.Msg.TOUR1_DESCRIPTION15 = "Parfait, <br>ton robot a roulé 20 cm tout droit,<br>c'est ce que tu as programmé!";
Blockly.Msg.TOUR1_DESCRIPTION16 = "Salut et amuse-toi en essayant encore plus!";
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor in cm. Maximum distance to measure is 255 cm.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "représente un capteur ultra-son";
Blockly.Msg.UNDO = "Annuler";
Blockly.Msg.USERGROUP_ADD_MEMBERS = "Add members";  // untranslated
Blockly.Msg.USERGROUP_CREATE = "Create new user group";  // untranslated
Blockly.Msg.USERGROUP_CREATE_TOOLTIP = "Click here to create a new usergroup";  // untranslated
Blockly.Msg.USERGROUP_DELETE_WITH_MEMBERS_WARNING = "Are your sure that you want to delete the usergroup including all members? No member did log in so far.";  // untranslated
Blockly.Msg.USERGROUP_GENERATED_MEMBERS = "Automatically generated members";  // untranslated
Blockly.Msg.USERGROUP_GENERATED_MEMBERS_TOOLTIP = "Automatically genertated members are normal members of a user group. They are generated with a number as username, which you can change afterwards.";  // untranslated
Blockly.Msg.USERGROUP_LIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected user groups.";  // untranslated
Blockly.Msg.USERGROUP_LIST_DELETE_TOOLTIP = "Click here to delete the user group.";  // untranslated
Blockly.Msg.USERGROUP_LOGIN_LOST_PASSWORD_HINT = "If you forgot your password, you can ask the owner of your user group to reset the password to the initial password for you. It will be the password you had to enter when you logged in first.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_CREATE_TOOLTIP = "Click here to add members to your usergroup.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_DEFAULT_PASSWORD_HINT = "The password for your account is not safe. Set your own password, so that only you can login to your account.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_DELETE_ALL_TOOLTIP = "Click here to delete all selected user group members.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_DELETE_TOOLTIP = "Click here to delete this user group member.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_RESET_ALL_PASSWORDS_TOOLTIP = "Click here to reset the password of all selected user group members to their corresponding default password.";  // untranslated
Blockly.Msg.USERGROUP_MEMBER_LIST_RESET_PASSWORD_TOOLTIP = "Click here to reset the password of this user group member to the default password.";  // untranslated
Blockly.Msg.USERGROUP_NAME_HINT = "The user group to which you want to log in has a name. Enter it here.";  // untranslated
Blockly.Msg.VACUUM_OFF = "arrêter l'aspiration";
Blockly.Msg.VACUUM_OFF_TOOLTIP = "Arrête l'aspiration";
Blockly.Msg.VACUUM_ON = "allumer l'aspiration %";
Blockly.Msg.VACUUM_ON_TOOLTIP = "Met en marche l'aspiration à la vitesse donnée en pourcentage";
Blockly.Msg.VALIDATION_CONTAINS_SPECIAL_CHARACTERS = "Caractères spéciaux autorisés : «=+!?.,%#+&^@_-»";
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "Il faut remplir cette case!";
Blockly.Msg.VALIDATION_MAX_LENGTH = "La longueur maximale est de 25 caractères";
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Le mot de passe doit contenir au moins 6 caractères !";
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "Les deux mots de passe doivent être identiques !";
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "L'identificateur a 8 caractères !";
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Donne une adresse mail valide s'il te plaît !";
Blockly.Msg.VALUE_TO = "value to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "élément";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Créer 'fixer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Renvoie la valeur de cette variable.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "déclare une variable globale";
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "déclare une variable locale";
Blockly.Msg.VARIABLES_SET = "fixer %1 à %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Créer 'obtenir %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fixe cette variable pour qu’elle soit égale à la valeur de l’entrée.";
Blockly.Msg.VARIABLES_TITLE = "variable";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "liste de valeurs logiques";
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "liste de couleurs";
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "liste de connexions";
Blockly.Msg.VARIABLES_TYPE_ARRAY_IMAGE = "liste d'images";
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "liste de nombres";
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "liste de textes";
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "valeur logique";
Blockly.Msg.VARIABLES_TYPE_COLOUR = "couleur";
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "connexion";
Blockly.Msg.VARIABLES_TYPE_IMAGE = "image";
Blockly.Msg.VARIABLES_TYPE_NUMBER = "nombre";
Blockly.Msg.VARIABLES_TYPE_STRING = "texte";
Blockly.Msg.VARIABLE_USED_BEFORE_DECLARATION = "La variable est utilisée avant d'être déclarée";
Blockly.Msg.VOICE_PITCH = "hauteur de la voix";
Blockly.Msg.VOICE_SPEED = "vitesse";
Blockly.Msg.WAIT = "attendre ms";
Blockly.Msg.WAIT_FOR_TOOLTIP = "attend que la valeur d'un capteur remplisse une condition";
Blockly.Msg.WAIT_OR = "ou attendre jusqu'à ce que";
Blockly.Msg.WAIT_TIME_TOOLTIP = "attend pendant un certain nombre de millisecondes";
Blockly.Msg.WAIT_TOOLTIP = "attend jusqu'à ce qu'une condition soit vraie";
Blockly.Msg.WAIT_UNTIL = "attendre jusqu'à ce que";
Blockly.Msg.WIRELESS_TOOLTIP = "Represents a wireless connection.";  // untranslated
Blockly.Msg.WRITE_TO_PIN_TOOLTIP = "Sends the value to chosen pin.";  // untranslated
Blockly.Msg.X = "x";
Blockly.Msg.XEND = "end of X axis";  // untranslated
Blockly.Msg.XLABEL = "X axis label";  // untranslated
Blockly.Msg.XSTART = "start of X axis";  // untranslated
Blockly.Msg.XTICK = "distance between X ticks";  // untranslated
Blockly.Msg.Y = "y";
Blockly.Msg.YAW = "yaw";  // untranslated
Blockly.Msg.YEND = "end of Y axis";  // untranslated
Blockly.Msg.YES = "oui";
Blockly.Msg.YLABEL = "Y axis label";  // untranslated
Blockly.Msg.YOUNGER_THEN_14 = "J'ai moins de 16 ans !";
Blockly.Msg.YSTART = "start of Y axis";  // untranslated
Blockly.Msg.YTICK = "distance between Y ticks";  // untranslated
Blockly.Msg.Z = "z";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.ACTION_LEDBAR = Blockly.Msg.LEDBAR;
Blockly.Msg.KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_ISPRESSED_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_PINTOUCH_PRESSED_GETSAMPLE_TOOLTIP = Blockly.Msg.PIN_ISTOUCHED_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ACCELEROMETER_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HUMIDITY_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_DOWN = Blockly.Msg.SENSOR_GESTURE_DOWN;
Blockly.Msg.SENSOR_COLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ULTRASONIC_GETSAMPLE_TOOLTIP = Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_UP = Blockly.Msg.SENSOR_GESTURE_UP;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_HTCOLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_ENCODER_GETSAMPLE_TOOLTIP = Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FACE_UP = Blockly.Msg.SENSOR_GESTURE_FACE_UP;
Blockly.Msg.SENSOR_HTCOLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.MODE_FACE_DOWN = Blockly.Msg.SENSOR_GESTURE_FACE_DOWN;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.SENSOR_COLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP_CALLIOPE = Blockly.Msg.MICROPHONE_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_FREEFALL = Blockly.Msg.SENSOR_GESTURE_FREEFALL;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.SENSOR_TIMER_GETSAMPLE_TOOLTIP = Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.SENSOR_ACCELEROMETER_VALUE_GETSAMPLE_TOOLTIP = Blockly.Msg.ACCELEROMETER_ROTATION_TOOLTIP;
Blockly.Msg.ORA_ROBOT_PUSH_RUN = Blockly.Msg.MESSAGE_EDIT_START;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_HUMIDITY_HUMIDITY_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_HUMIDITY_GETSAMPLE_TOOLTIP;
Blockly.Msg.MODE_SHAKE = Blockly.Msg.SENSOR_GESTURE_SHAKE;
Blockly.Msg.SENSOR_TEMPERATURE_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.SENSOR_GYRO_GETSAMPLE_TOOLTIP = Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_BATTERY_GETSAMPLE_TOOLTIP = Blockly.Msg.BATTERY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_INFRARED_PRESENCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_PRESENCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_COMPASS_GETSAMPLE_TOOLTIP = Blockly.Msg.COMPASS_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HTCOLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.SENSOR_SOUND_GETSAMPLE_TOOLTIP = Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_FLAME_GETSAMPLE_TOOLTIP = Blockly.Msg.FLAME_GETSAMPLE_TOOLTIP;
Blockly.Msg.ACTION_FOURDIGITDISPLAY = Blockly.Msg.FOURDIGITDISPLAY;
Blockly.Msg.SENSOR_HTCOLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_AMBIENTLIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_COLOUR_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_COLOUR_GETSAMPLE_TOOLTIP;
Blockly.Msg.HTCOLOUR_LIGHT_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_LIGHT_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_INFRARED_DISTANCE_GETSAMPLE_TOOLTIP = Blockly.Msg.INFRARED_DISTANCE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_HTCOLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.SENSOR_COLOUR_RGB_GETSAMPLE_TOOLTIP;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.SENSOR_KEY_GETSAMPLE_TOOLTIP = Blockly.Msg.KEY_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TEMPERATURE_GETSAMPLE_TOOLTIP = Blockly.Msg.TEMPERATURE_GETSAMPLE_TOOLTIP;
Blockly.Msg.SENSOR_TOUCH_GETSAMPLE_TOOLTIP = Blockly.Msg.TOUCH_GETSAMPLE_TOOLTIP;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.HTCOLOUR_RGB_GETSAMPLE_TOOLTIP = Blockly.Msg.COLOUR_RGB_GETSAMPLE_TOOLTIP;