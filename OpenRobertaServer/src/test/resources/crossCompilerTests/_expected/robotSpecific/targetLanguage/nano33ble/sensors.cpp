// This file is automatically generated by the Open Roberta Lab.

#define _ARDUINO_STL_NOT_NEEDED
#include <Arduino.h>

#include <Arduino_APDS9960.h>
#include <Arduino_LSM9DS1.h>
#include <Arduino_HTS221.h>
#include <Arduino_LPS22HB.h>
#include <NEPODefs.h>

void sensorsWaitUntil();
void sensors();

int _input_S3 = 5;
int _output_B = 4;
int _SensorPin_P2 = A4;
int _output_L2 = A3;
int _led_L = LED_BUILTIN;
int rAsInt, gAsInt, bAsInt;
int _output_P = A2;
int _input_S = 3;
float xAsFloat, yAsFloat, zAsFloat;
int _taster_T = 2;
int _trigger_U = 7;
int _echo_U = 6;
int _TMP36_T2 = A0;
int _input_S2 = A1;
int _S_T3 = A5;
unsigned long __time_1 = millis();
double _getUltrasonicDistance(int trigger, int echo)
{
    digitalWrite(trigger, LOW);
    delay(5);
    digitalWrite(trigger, HIGH);
    delay(10);
    digitalWrite(trigger, LOW);
    return pulseIn(echo, HIGH) * 0.03432/2;
}


void sensorsWaitUntil() {
    while (true) {
        if ( analogRead(_input_S2) == 50 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( digitalRead(_input_S) == 1 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( digitalRead(_input_S3) == 0 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( digitalRead(_taster_T) == true ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( (int) (millis() - __time_1) > 500 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( map(analogRead(_TMP36_T2), 0, 410, -50, 150) < 20 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( _getUltrasonicDistance(_trigger_U, _echo_U) < 30 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( analogRead(_output_L2)/10.24 < 30 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( ((double)analogRead(_output_P))*5/1024 < 30 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( digitalRead(_output_B) == true ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( analogRead(_SensorPin_P2) < 30 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( analogRead(_S_T3)/10.24 < 30 ) {
            break;
        }
        delay(1);
    }
}

void sensors() {
    Serial.println(analogRead(_input_S2));
    Serial.println(digitalRead(_input_S));
    Serial.println(digitalRead(_input_S3));
    Serial.println(digitalRead(_taster_T));
    Serial.println((int) (millis() - __time_1));
    __time_1 = millis();
    Serial.println(map(analogRead(_TMP36_T2), 0, 410, -50, 150));
    Serial.println(_getUltrasonicDistance(_trigger_U, _echo_U));
    Serial.println(analogRead(_output_L2)/10.24);
    Serial.println(((double)analogRead(_output_P))*5/1024);
    Serial.println(digitalRead(_output_B));
    Serial.println(analogRead(_S_T3)/10.24);
    Serial.println(analogRead(_SensorPin_P2));
}

void setup()
{
    Serial.begin(9600);
    pinMode(_input_S3, INPUT_PULLUP);
    pinMode(_output_B, INPUT);
    pinMode(_led_L, OUTPUT);
    APDS.begin();
    pinMode(_input_S, INPUT);
    IMU.begin();
    pinMode(_taster_T, INPUT);
    pinMode(_trigger_U, OUTPUT);
    pinMode(_echo_U, INPUT);
    HTS.begin();
    BARO.begin();
    pinMode(_input_S2, INPUT);
}

void loop()
{
    sensors();
    sensorsWaitUntil();
}