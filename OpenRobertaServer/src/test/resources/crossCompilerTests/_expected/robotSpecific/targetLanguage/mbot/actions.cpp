// This file is automatically generated by the Open Roberta Lab.

#define ANALOG2PERCENT 0.0978

#include <MeMCore.h>
#include <MeDrive.h>
#include <NEPODefs.h>

MeDrive _meDrive(M1, M2);
MeDCMotor _meDCmotor1(M1);
MeDCMotor _meDCmotor2(M2);
MeLEDMatrix __meLEDMatrix_1(1);
MeBuzzer _meBuzzer;
MeRGBLed _meRgbLed(7, 2);
int _v_colour_temp;


void ____actions();
void ____drive();
void ____move();
void ____display();
void ____sounds();
void ____light();
const std::vector<uint8_t> __ledMatrix0 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const std::vector<uint8_t> __ledMatrix1 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const std::vector<uint8_t> __ledMatrix2 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const std::vector<uint8_t> __ledMatrix3 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};

double ___numVar;
bool ___boolVar;
String ___stringVar;
unsigned int ___colourVar;
std::vector<uint8_t> ___imageVar;
std::list<double> ___numList;
std::list<bool> ___boolList;
std::list<String> ___stringList;
std::list<unsigned int> ___colourList;
std::list<std::vector<uint8_t>> ___imageList;


void ____actions() {
    ____drive();
    ____move();
    ____display();
    ____sounds();
    ____light();
}

void ____drive() {
    _meDrive.drive(___numVar, 1, ___numVar);
    _meDrive.drive(___numVar, 0, ___numVar);
    _meDrive.drive(___numVar, 1);
    _meDrive.drive(___numVar, 0);
    _meDrive.turn(___numVar, 0, ___numVar);
    _meDrive.turn(___numVar, 1, ___numVar);
    _meDrive.turn(___numVar, 0);
    _meDrive.turn(___numVar, 1);
    _meDrive.steer(___numVar, ___numVar, 1, ___numVar);
    _meDrive.steer(___numVar, ___numVar, 0, ___numVar);
    _meDrive.steer(___numVar, ___numVar, 1);
    _meDrive.steer(___numVar, ___numVar, 0);
    _meDrive.stop();
}

void ____move() {
    _meDCmotor1.run(-1*(___numVar)*255/100);
    delay(___numVar);
    _meDCmotor1.stop();
    _meDCmotor2.run((___numVar)*255/100);
    delay(___numVar);
    _meDCmotor2.stop();
    _meDCmotor1.run(-1*(___numVar)*255/100);
    _meDCmotor2.run((___numVar)*255/100);
    _meDCmotor1.stop();
    _meDCmotor2.stop();
}

void ____display() {
    Serial.println(___numVar);
    Serial.println(___boolVar);
    Serial.println(___stringVar);
    Serial.println(___colourVar);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___boolVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, ___stringVar, 100);
    __meLEDMatrix_1.drawBitmap(0, 0, 16, &___imageVar[0]);
    drawAnimationLEDMatrix(&__meLEDMatrix_1, ___imageList, 200);
    __meLEDMatrix_1.clearScreen();
    __meLEDMatrix_1.setBrightness(___numVar);
}

void ____sounds() {
    _meBuzzer.tone(8, ___numVar, ___numVar);
    _meBuzzer.tone(8, 261.626, 2000);
    _meBuzzer.tone(8, 293.665, 1000);
    _meBuzzer.tone(8, 329.628, 500);
    _meBuzzer.tone(8, 349.228, 250);
    _meBuzzer.tone(8, 391.995, 125);
}

void ____light() {
    _meRgbLed.setColor(2, RCHANNEL(___colourVar), GCHANNEL(___colourVar), BCHANNEL(___colourVar));
    _meRgbLed.show();
    _meRgbLed.setColor(1, RCHANNEL(___colourVar), GCHANNEL(___colourVar), BCHANNEL(___colourVar));
    _meRgbLed.show();
    _meRgbLed.setColor(2, 0, 0, 0);
    _meRgbLed.show();
    _meRgbLed.setColor(1, 0, 0, 0);
    _meRgbLed.show();
}

void setup()
{
    Serial.begin(9600);
    ___numVar = 0;
    ___boolVar = true;
    ___stringVar = "";
    ___colourVar = RGB(0xFF, 0xFF, 0xFF);
    ___imageVar = __ledMatrix0;
    ___numList = {0, 0, 0};
    ___boolList = {true, true, true};
    ___stringList = {"", "", ""};
    ___colourList = {RGB(0xFF, 0xFF, 0xFF), RGB(0xFF, 0xFF, 0xFF), RGB(0xFF, 0xFF, 0xFF)};
    ___imageList = {__ledMatrix1, __ledMatrix2, __ledMatrix3};
}

void loop()
{
    ____actions();
}