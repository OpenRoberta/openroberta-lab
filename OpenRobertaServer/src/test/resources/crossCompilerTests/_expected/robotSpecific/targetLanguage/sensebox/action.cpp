// This file is automatically generated by the Open Roberta Lab.
#define _ARDUINO_STL_NOT_NEEDED
#include "SenseBoxMCU.h"
#undef max
#undef min
#include <NEPODefs.h>
#include <SD.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Plot.h>
#include <stdlib.h>
#include <Adafruit_NeoPixel.h>



void ____action();


double ___n;
bool ___b;
String ___s;
unsigned int ___c;
std::list<double> ___nl;
std::list<bool> ___bl;
std::list<String> ___sl;
std::list<unsigned int> ___cl;
Adafruit_NeoPixel _rgbled_R2 = Adafruit_NeoPixel(1, 1, NEO_RGB + NEO_KHZ800);
int _v_colour_temp;
char* _ID1 = "";
int _output_A = 4;
int _led_G = 8;
int _buzzer_B2 = 6;
int _output_A2 = 5;
int _led_R = 7;
File _dataFile;
Bee* _bee_ = new Bee();
OpenSenseMap _osm("", _bee_);
#define OLED_RESET 4
Adafruit_SSD1306 _display_myDisplay(OLED_RESET);
Plot _plot_myDisplay(&_display_myDisplay);


void ____action() {
    Serial.println(___n);
    Serial.println(___b);
    Serial.println(___s);
    Serial.println(___c);
    _display_myDisplay.setCursor(___n, ___n);
    _display_myDisplay.setTextSize(1);
    _display_myDisplay.setTextColor(WHITE, BLACK);
    _display_myDisplay.println(___n);
    _display_myDisplay.display();
    
    _display_myDisplay.setCursor(___n, ___n);
    _display_myDisplay.setTextSize(1);
    _display_myDisplay.setTextColor(WHITE, BLACK);
    _display_myDisplay.println(___b);
    _display_myDisplay.display();
    
    _display_myDisplay.setCursor(___n, ___n);
    _display_myDisplay.setTextSize(1);
    _display_myDisplay.setTextColor(WHITE, BLACK);
    _display_myDisplay.println(___s);
    _display_myDisplay.display();
    
    _display_myDisplay.setCursor(___n, ___n);
    _display_myDisplay.setTextSize(1);
    _display_myDisplay.setTextColor(WHITE, BLACK);
    _display_myDisplay.println(___c);
    _display_myDisplay.display();
    
    _display_myDisplay.clearDisplay();
    tone(_buzzer_B2, ___n);
    delay(___n);
    noTone(_buzzer_B2);
    digitalWrite(_led_R, HIGH);
    digitalWrite(_led_R, LOW);
    digitalWrite(_led_R, HIGH);
    digitalWrite(_led_R, LOW);
    _rgbled_R2.setPixelColor(0, _rgbled_R2.Color(RCHANNEL(___c), GCHANNEL(___c), BCHANNEL(___c)));
    _rgbled_R2.show();
    _rgbled_R2.setPixelColor(0, _rgbled_R2.Color(0,0,0));
    _rgbled_R2.show();
    
    _osm.uploadMeasurement(___n, _ID1);
    
    _dataFile = SD.open("FILE.TXT", FILE_WRITE);
    _dataFile.print(_ID1);
    _dataFile.print(" : ");
    _dataFile.println(___n);
    _dataFile.close();
    _plot_myDisplay.clear();
    _plot_myDisplay.drawPlot();
    
    _plot_myDisplay.addDataPoint(___n, ___n);
    
    digitalWrite(_output_A, ___n);
    analogWrite(_output_A2, 1);
}

void setup()
{
    Serial.begin(9600);
    
    _rgbled_R2.begin();
    pinMode(_output_A, OUTPUT);
    pinMode(_led_G, OUTPUT);
    pinMode(_output_A2, OUTPUT);
    pinMode(_led_R, OUTPUT);
    SD.begin(28);
    _dataFile = SD.open("FILE.TXT", FILE_WRITE);
    _dataFile.close();
    _bee_->connectToWifi("test","test");
    delay(1000);
    senseBoxIO.powerI2C(true);
    delay(2000);
    _display_myDisplay.begin(SSD1306_SWITCHCAPVCC, 0x3D);
    _display_myDisplay.display();
    delay(100);
    _display_myDisplay.clearDisplay();
    _plot_myDisplay.setTitle("P");
    _plot_myDisplay.setXLabel("X");
    _plot_myDisplay.setYLabel("Y");
    _plot_myDisplay.setXRange(0, 100);
    _plot_myDisplay.setYRange(0, 50);
    _plot_myDisplay.setXTick(10);
    _plot_myDisplay.setYTick(10);
    _plot_myDisplay.setXPrecision(0);
    _plot_myDisplay.setYPrecision(0);
    _plot_myDisplay.clear();
    ___n = 0;
    ___b = true;
    ___s = "";
    ___c = RGB(0xFF, 0xFF, 0xFF);
    ___nl = {0, 0, 0};
    ___bl = {true, true, true};
    ___sl = {"", "", ""};
    ___cl = {RGB(0xFF, 0xFF, 0xFF), RGB(0xFF, 0xFF, 0xFF), RGB(0xFF, 0xFF, 0xFF)};
}

void loop()
{
    ____action();
}