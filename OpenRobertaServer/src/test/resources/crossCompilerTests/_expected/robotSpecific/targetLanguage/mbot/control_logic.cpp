// This file is automatically generated by the Open Roberta Lab.

#define ANALOG2PERCENT 0.0978

#include <MeMCore.h>
#include <MeDrive.h>
#include <NEPODefs.h>

MeUltrasonicSensor _meUltraSensor3(PORT_3);
MeLineFollower __meLineFollower2(PORT_2);
MeLightSensor _meLight4(PORT_4);
MeLEDMatrix __meLEDMatrix_1(1);


void control();
void logic();
const std::vector<uint8_t> __ledMatrix0 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const std::vector<uint8_t> __ledMatrix1 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const std::vector<uint8_t> __ledMatrix2 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const std::vector<uint8_t> __ledMatrix3 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};

double ___numVar;
bool ___boolVar;
String ___stringVar;
unsigned int ___colourVar;
std::vector<uint8_t> ___imageVar;
std::list<double> ___numList;
std::list<bool> ___boolList;
std::list<String> ___stringList;
std::list<unsigned int> ___colourList;
std::list<std::vector<uint8_t>> ___imageList;

unsigned long __time_1 = millis();

void control() {
    if ( ___boolVar ) {
    }
    if ( ___boolVar ) {
    } else if ( ___boolVar ) {
    }
    if ( ___boolVar ) {
    }
    while ( true ) {
        break;
        delay(1);
    }
    while ( true ) {
        continue;
        delay(1);
    }
    for (int ___k0 = 0; ___k0 < ___numVar; ___k0 += 1) {
        delay(1);
    }
    while ( ! ___boolVar ) {
        delay(1);
    }
    while ( ___boolVar ) {
        delay(1);
    }
    for (int ___i = ___numVar; ___i < ___numVar; ___i += ___numVar) {
        delay(1);
    }
    for ( double ___item : ___numList ) {
        delay(1);
    }
    while (true) {
        if ( ___boolVar ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( ___boolVar ) {
            break;
        }
        if ( ___boolVar ) {
            break;
        }
        delay(1);
    }
    delay(___numVar);
    while (true) {
        if ( (analogRead(PORT_7) < 512) == true ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( _meUltraSensor3.distanceCm() < 30 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( !__meLineFollower2.readSensor1() == true ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( _meLight4.read() * ANALOG2PERCENT < 50 ) {
            break;
        }
        delay(1);
    }
    while (true) {
        if ( (int) (millis() - __time_1) > 500 ) {
            break;
        }
        delay(1);
    }
}

void logic() {
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar == ___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar != ___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar < ___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar <= ___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar > ___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___numVar < ___numVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___boolVar && ___boolVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(___boolVar || ___boolVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(! ___boolVar), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(NULL), 100);
    drawStrLEDMatrix(&__meLEDMatrix_1, String(( ( ___boolVar ) ? ( ___numVar ) : ( ___numVar) )), 100);
}

void setup()
{
    Serial.begin(9600);
    ___numVar = 0;
    ___boolVar = true;
    ___stringVar = "";
    ___colourVar = RGB(0xFF, 0xFF, 0xFF);
    ___imageVar = __ledMatrix0;
    ___numList = {0, 0, 0};
    ___boolList = {true, true, true};
    ___stringList = {"", "", ""};
    ___colourList = {RGB(0xFF, 0xFF, 0xFF), RGB(0xFF, 0xFF, 0xFF), RGB(0xFF, 0xFF, 0xFF)};
    ___imageList = {__ledMatrix1, __ledMatrix2, __ledMatrix3};
}

void loop()
{
    control();
    logic();
}