SerialWriteAction[value: StringConst[value: callibiot sensor tests press a to go through]]
WaitTimeStmt[time: NumConst[value: 500]]
SerialWriteAction[value: StringConst[value: line ]]

(repeat [FOREVER, BoolConst[value: true]]
AktionStmt [SerialWriteAction[value: FunctionExpr [TextJoinFunct [StringConst[value: I1: ], SensorExpr [InfraredSensor [I, LINE, - EMPTY_SLOT -]]]]]]
AktionStmt [SerialWriteAction[value: FunctionExpr [TextJoinFunct [StringConst[value: I2: ], SensorExpr [InfraredSensor [I2, LINE, - EMPTY_SLOT -]]]]]]
if SensorExpr [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]
,thenStmtFlowCon[flow: BREAK]

)
WaitTimeStmt[time: NumConst[value: 500]]
SerialWriteAction[value: StringConst[value: distance ultrasonic]]

(repeat [FOREVER, BoolConst[value: true]]
AktionStmt [SerialWriteAction[value: SensorExpr [UltrasonicSensor [U, DISTANCE, - EMPTY_SLOT -]]]]
if SensorExpr [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]
,thenStmtFlowCon[flow: BREAK]

)
WaitTimeStmt[time: NumConst[value: 500]]
SerialWriteAction[value: StringConst[value: front key]]

(repeat [FOREVER, BoolConst[value: true]]
AktionStmt [SerialWriteAction[value: FunctionExpr [TextJoinFunct [StringConst[value: K1: ], SensorExpr [CallibotKeysSensor [K1, PRESSED, - EMPTY_SLOT -]]]]]]
AktionStmt [SerialWriteAction[value: FunctionExpr [TextJoinFunct [StringConst[value: K2: ], SensorExpr [CallibotKeysSensor [K1, PRESSED, - EMPTY_SLOT -]]]]]]
if SensorExpr [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]
,thenStmtFlowCon[flow: BREAK]

)
