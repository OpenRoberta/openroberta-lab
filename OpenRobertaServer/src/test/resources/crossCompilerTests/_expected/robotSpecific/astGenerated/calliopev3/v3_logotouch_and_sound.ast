SoundToggleAction[mode: ON]
SerialWriteAction[value: StringConst[value: Press Logo to start A to step through]]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [LogoTouchSensor [_LO, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
ToneAction[frequency: NumConst[value: 300], duration: NumConst[value: 100], port: _B]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: Press logo one more time]]

(repeat [FOREVER, BoolConst[value: true]]WaitTimeStmt[time: NumConst[value: 50]]
if SensorExpr [LogoTouchSensor [_LO, PRESSED, - EMPTY_SLOT -]]
,thenStmtFlowCon[flow: BREAK]

)
WaitTimeStmt[time: NumConst[value: 500]]
PlayNoteAction[duration: 2000, frequency: 261.626, port: _B]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: dadadadum file]]
PlayFileAction[port: - EMPTY_PORT -, fileName: DADADADUM]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: entertainer file]]
PlayFileAction[port: - EMPTY_PORT -, fileName: ENTERTAINER]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: prelude file]]
PlayFileAction[port: - EMPTY_PORT -, fileName: PRELUDE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: ode file]]
PlayFileAction[port: - EMPTY_PORT -, fileName: ODE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: nyan file]]
PlayFileAction[port: - EMPTY_PORT -, fileName: NYAN]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: ringtone]]
PlayFileAction[port: - EMPTY_PORT -, fileName: RINGTONE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: funk]]
PlayFileAction[port: - EMPTY_PORT -, fileName: FUNK]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: blues]]
PlayFileAction[port: - EMPTY_PORT -, fileName: BLUES]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: birthday]]
PlayFileAction[port: - EMPTY_PORT -, fileName: BIRTHDAY]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: wedding]]
PlayFileAction[port: - EMPTY_PORT -, fileName: WEDDING]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: funeral]]
PlayFileAction[port: - EMPTY_PORT -, fileName: FUNERAL]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: punchline]]
PlayFileAction[port: - EMPTY_PORT -, fileName: PUNCHLINE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: python]]
PlayFileAction[port: - EMPTY_PORT -, fileName: PYTHON]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: baddy]]
PlayFileAction[port: - EMPTY_PORT -, fileName: BADDY]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: chase]]
PlayFileAction[port: - EMPTY_PORT -, fileName: CHASE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: chase]]
PlayFileAction[port: - EMPTY_PORT -, fileName: CHASE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: ba ding]]
PlayFileAction[port: - EMPTY_PORT -, fileName: BA_DING]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: wawawawawa]]
PlayFileAction[port: - EMPTY_PORT -, fileName: WAWAWAWAA]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: jump up]]
PlayFileAction[port: - EMPTY_PORT -, fileName: JUMP_UP]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: jump down]]
PlayFileAction[port: - EMPTY_PORT -, fileName: JUMP_DOWN]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: power up]]
PlayFileAction[port: - EMPTY_PORT -, fileName: POWER_UP]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: power down]]
PlayFileAction[port: - EMPTY_PORT -, fileName: POWER_DOWN]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: set Volume to 50%]]
SetVolumeAction[port: - EMPTY_PORT -, volume: NumConst[value: 50]]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: giggle]]
PlayFileAction[port: - EMPTY_PORT -, fileName: GIGGLE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: set Volume to 100%]]
SetVolumeAction[port: - EMPTY_PORT -, volume: NumConst[value: 100]]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: happy]]
PlayFileAction[port: - EMPTY_PORT -, fileName: HAPPY]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: hello]]
PlayFileAction[port: - EMPTY_PORT -, fileName: HELLO]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: mysterious]]
PlayFileAction[port: - EMPTY_PORT -, fileName: MYSTERIOUS]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: sad]]
PlayFileAction[port: - EMPTY_PORT -, fileName: SAD]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: slide]]
PlayFileAction[port: - EMPTY_PORT -, fileName: SLIDE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: soaring]]
PlayFileAction[port: - EMPTY_PORT -, fileName: SOARING]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: spring]]
PlayFileAction[port: - EMPTY_PORT -, fileName: SPRING]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: twinkle]]
PlayFileAction[port: - EMPTY_PORT -, fileName: TWINKLE]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: yawn]]
PlayFileAction[port: - EMPTY_PORT -, fileName: YAWN]
WaitStmt [
(repeat [WAIT, Binary [EQ, SensorExpr [GetSampleSensor [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]], BoolConst[value: true]]]
)]
DisplayTextAction[mode: TEXT, msg: StringConst[value: speaker off]]
SoundToggleAction[mode: OFF]
WaitTimeStmt[time: NumConst[value: 500]]
DisplayTextAction[mode: TEXT, msg: StringConst[value: giggle with off speaker]]
PlayFileAction[port: - EMPTY_PORT -, fileName: GIGGLE]
DisplayTextAction[mode: TEXT, msg: StringConst[value: done]]
