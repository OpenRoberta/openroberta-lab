   0:            expr            expr: NUM_CONST, value: 0,                  > +: ["f+KVK%Y1kDKKR{ftIR1Q","Zw/`4D0dJfs=1No0}L1]"], -: ["f+KVK%Y1kDKKR{ftIR1Q"], 
   1:            VarDeclaration  name: ergebnis, type: NUMBER,               > -: ["Zw/`4D0dJfs=1No0}L1]"], 
   2:            comment         value: Grundrechenarten Basics  --START--,  > +: ["E{@Zwgcb]W8ewSF-DQ^@"], -: ["E{@Zwgcb]W8ewSF-DQ^@"], possibleDebugStop: ["E{@Zwgcb]W8ewSF-DQ^@"], 
   3:            expr            expr: NUM_CONST, value: 2,                  > +: ["3{8z:nTl.AR09q2Bc.XA","PlBZ0bU+{9jZO)3e1Y{W","fI?v?mMf%Yj[tT*#P}wb"], -: ["PlBZ0bU+{9jZO)3e1Y{W"], possibleDebugStop: ["fI?v?mMf%Yj[tT*#P}wb"], 
   4:            expr            expr: NUM_CONST, value: 3,                  > +: ["G4Wv?_Up~]{|pviYyIS#","ai[46:!486lwhv`P:SAP","{j4T!yhA79~^fY1K{;8["], -: ["ai[46:!486lwhv`P:SAP"], 
   5:            expr            expr: NUM_CONST, value: 4,                  > +: ["L96Oq~VKThZ]1717d+4l"], -: ["L96Oq~VKThZ]1717d+4l"], 
   6:            expr            expr: Binary, op: MULTIPLY,                 > -: ["G4Wv?_Up~]{|pviYyIS#"], 
   7:            expr            expr: NUM_CONST, value: 5,                  > +: ["%G3#Uw2{[?@3d~%GMu[_"], -: ["%G3#Uw2{[?@3d~%GMu[_"], 
   8:            expr            expr: Binary, op: DIVIDE,                   > -: ["{j4T!yhA79~^fY1K{;8["], 
   9:            expr            expr: Binary, op: ADD,                      > -: ["3{8z:nTl.AR09q2Bc.XA"], 
  10:            AssignStmt      name: ergebnis,                             > -: ["fI?v?mMf%Yj[tT*#P}wb"], 
  11:            expr            expr: NUM_CONST, value: 4.4,                > +: ["JLCI!v9kX)%G,T^zoT!~","Uj55~Wp0?7/qD}()R.kf","imQ@^c27T#]an7%auy;a"], -: ["imQ@^c27T#]an7%auy;a"], possibleDebugStop: ["Uj55~Wp0?7/qD}()R.kf"], 
  12:            expr            expr: Var, name: ergebnis,                  > +: ["gq5Cx?I%a*KhgdsRc[ay"], -: ["gq5Cx?I%a*KhgdsRc[ay"], 
  13:            expr            expr: Binary, op: EQ,                       > -: ["JLCI!v9kX)%G,T^zoT!~"], 
  14:            expr            expr: NUM_CONST, value: 4.4,                > +: ["imQ@^c27T#]an7%auy;a"], -: ["imQ@^c27T#]an7%auy;a"], 
  15:            expr            expr: Var, name: ergebnis,                  > +: ["gq5Cx?I%a*KhgdsRc[ay"], -: ["gq5Cx?I%a*KhgdsRc[ay"], 
  16:            AssertAction    msg: POS-1, op: EQ,                         > -: ["Uj55~Wp0?7/qD}()R.kf"], 
  17:            expr            expr: Var, name: ergebnis,                  > +: ["Bb=orLW^J`%,7n;4Ic()","LZm!1{cp}q#o.ogluc-+","*4zAc(nd;^HBs{C:L/vx"], -: ["*4zAc(nd;^HBs{C:L/vx"], possibleDebugStop: ["Bb=orLW^J`%,7n;4Ic()"], 
  18:            expr            expr: NUM_CONST, value: 2,                  > +: ["tdE-XynUN?@0_6Vnj,LA","Z}_|J.;Y|fLSuyU~iH-)"], -: ["Z}_|J.;Y|fLSuyU~iH-)"], 
  19:            expr            expr: NUM_CONST, value: 3,                  > +: ["Y3sWxxJbdw=?SpObHLcJ","U-f.a8T~/2h,C5n^6Jfv","dSf8T}+XlPT}cg19Y^Cw"], -: ["Y3sWxxJbdw=?SpObHLcJ"], 
  20:            expr            expr: NUM_CONST, value: 4,                  > +: ["=QZ|}Jei1hL~t=?o-;N6"], -: ["=QZ|}Jei1hL~t=?o-;N6"], 
  21:            expr            expr: Binary, op: ADD,                      > -: ["U-f.a8T~/2h,C5n^6Jfv"], 
  22:            expr            expr: NUM_CONST, value: 5,                  > +: ["(R{my4yxgN4b/?PI)wd9"], -: ["(R{my4yxgN4b/?PI)wd9"], 
  23:            expr            expr: Binary, op: MULTIPLY,                 > -: ["dSf8T}+XlPT}cg19Y^Cw"], 
  24:            expr            expr: Binary, op: MULTIPLY,                 > -: ["tdE-XynUN?@0_6Vnj,LA"], 
  25:            expr            expr: Binary, op: ADD,                      > -: ["LZm!1{cp}q#o.ogluc-+"], 
  26:            AssignStmt      name: ergebnis,                             > -: ["Bb=orLW^J`%,7n;4Ic()"], 
  27:            expr            expr: NUM_CONST, value: 74.4,               > +: ["-vH!xu7jJ|4rHa++IR}h","mOsA`aCgKr)eeS`pH=/a","qq8`[BMWD6oO2T1USe%z"], -: ["-vH!xu7jJ|4rHa++IR}h"], possibleDebugStop: ["mOsA`aCgKr)eeS`pH=/a"], 
  28:            expr            expr: Var, name: ergebnis,                  > +: ["@;[XC^!vYckaYZj[hjc-"], -: ["@;[XC^!vYckaYZj[hjc-"], 
  29:            expr            expr: Binary, op: EQ,                       > -: ["qq8`[BMWD6oO2T1USe%z"], 
  30:            expr            expr: NUM_CONST, value: 74.4,               > +: ["-vH!xu7jJ|4rHa++IR}h"], -: ["-vH!xu7jJ|4rHa++IR}h"], 
  31:            expr            expr: Var, name: ergebnis,                  > +: ["@;[XC^!vYckaYZj[hjc-"], -: ["@;[XC^!vYckaYZj[hjc-"], 
  32:            AssertAction    msg: POS-2, op: EQ,                         > -: ["mOsA`aCgKr)eeS`pH=/a"], 
  33:            expr            expr: Var, name: ergebnis,                  > +: ["v;W8hU-Z]RJ+/ub}f%U5","BIPZJ;tQg6CbO8d2|L_=","yZ[4Fp5/g5i6cYu?EeOV"], -: ["v;W8hU-Z]RJ+/ub}f%U5"], possibleDebugStop: ["yZ[4Fp5/g5i6cYu?EeOV"], 
  34:            expr            expr: NUM_CONST, value: 2,                  > +: ["Su?MbaV!F)cz**:`.o88","T`4=%j}0zQ4k0#RB^Srq"], -: ["T`4=%j}0zQ4k0#RB^Srq"], 
  35:            expr            expr: NUM_CONST, value: 3,                  > +: ["MFnxSMk+r%PVT15r;^}n",")d;PKgf=0?{2?ni]ixfY"], -: [")d;PKgf=0?{2?ni]ixfY"], 
  36:            expr            expr: NUM_CONST, value: 4,                  > +: ["^2_)M_:YVYG}-1Kmj{C{","?fV^Y8DDVck1%l*::p51"], -: ["?fV^Y8DDVck1%l*::p51"], 
  37:            expr            expr: NUM_CONST, value: 5,                  > +: ["Uo(a)bpx2e8c|PIrHH37"], -: ["Uo(a)bpx2e8c|PIrHH37"], 
  38:            expr            expr: Binary, op: ADD,                      > -: ["^2_)M_:YVYG}-1Kmj{C{"], 
  39:            expr            expr: Binary, op: MULTIPLY,                 > -: ["MFnxSMk+r%PVT15r;^}n"], 
  40:            expr            expr: Binary, op: MULTIPLY,                 > -: ["Su?MbaV!F)cz**:`.o88"], 
  41:            expr            expr: Binary, op: ADD,                      > -: ["BIPZJ;tQg6CbO8d2|L_="], 
  42:            AssignStmt      name: ergebnis,                             > -: ["yZ[4Fp5/g5i6cYu?EeOV"], 
  43:            expr            expr: NUM_CONST, value: 128.4,              > +: ["S)7yjp9R2}UTn]#QUp{B","dV*yq_NKa[{Ut_dyF1I=","YZ{1gzI]tDP8?^z,(RI/"], -: ["S)7yjp9R2}UTn]#QUp{B"], possibleDebugStop: ["dV*yq_NKa[{Ut_dyF1I="], 
  44:            expr            expr: Var, name: ergebnis,                  > +: ["Zzi9*G=xH_ui~3h?/l:v"], -: ["Zzi9*G=xH_ui~3h?/l:v"], 
  45:            expr            expr: Binary, op: EQ,                       > -: ["YZ{1gzI]tDP8?^z,(RI/"], 
  46:            expr            expr: NUM_CONST, value: 128.4,              > +: ["S)7yjp9R2}UTn]#QUp{B"], -: ["S)7yjp9R2}UTn]#QUp{B"], 
  47:            expr            expr: Var, name: ergebnis,                  > +: ["Zzi9*G=xH_ui~3h?/l:v"], -: ["Zzi9*G=xH_ui~3h?/l:v"], 
  48:            AssertAction    msg: POS-3, op: EQ,                         > -: ["dV*yq_NKa[{Ut_dyF1I="], 
  49:            expr            expr: Var, name: ergebnis,                  > +: ["ttyiwY=P(:2Gy%3eTm~B","--1C/in8T#gRDTkYRC~]","YJP++V|okzbPk[*16OTw"], -: ["--1C/in8T#gRDTkYRC~]"], possibleDebugStop: ["YJP++V|okzbPk[*16OTw"], 
  50:            expr            expr: NUM_CONST, value: 2,                  > +: ["j|I#|4X_z+MsJ^+r=5IA","|zzx8=[x%oqmQ!!uMk6z"], -: ["j|I#|4X_z+MsJ^+r=5IA"], 
  51:            expr            expr: NUM_CONST, value: 3,                  > +: ["Q)im/8N85.Xd2hFm05)u","UZhV4xpQeDgcUwDZ]`k9","w_`}dD#@[k_x9k~8:phh","Q8wJGlP^SXjtKj.R-q~p"], -: ["w_`}dD#@[k_x9k~8:phh"], 
  52:            expr            expr: NUM_CONST, value: 4,                  > +: ["%r^Nx0Z[Cp`8k1}_E]}N"], -: ["%r^Nx0Z[Cp`8k1}_E]}N"], 
  53:            expr            expr: Binary, op: MULTIPLY,                 > -: ["Q)im/8N85.Xd2hFm05)u"], 
  54:            expr            expr: NUM_CONST, value: 5,                  > +: ["1lS/jg1-M=geApaVBn!@"], -: ["1lS/jg1-M=geApaVBn!@"], 
  55:            expr            expr: Binary, op: MINUS,                    > -: ["Q8wJGlP^SXjtKj.R-q~p"], 
  56:            expr            expr: NUM_CONST, value: 6,                  > +: ["U~^x!d`+OcQw1G|=7TzQ"], -: ["U~^x!d`+OcQw1G|=7TzQ"], 
  57:            expr            expr: Binary, op: MULTIPLY,                 > -: ["UZhV4xpQeDgcUwDZ]`k9"], 
  58:            expr            expr: Binary, op: ADD,                      > -: ["|zzx8=[x%oqmQ!!uMk6z"], 
  59:            expr            expr: Binary, op: ADD,                      > -: ["ttyiwY=P(:2Gy%3eTm~B"], 
  60:            AssignStmt      name: ergebnis,                             > -: ["YJP++V|okzbPk[*16OTw"], 
  61:            expr            expr: NUM_CONST, value: 172.4,              > +: ["nmn_7#r=4(DZLrKZVmLY","C0QLldkE9S]^`G}%`9p,","H*IVCa{=R4w[VcOMcz|V"], -: ["C0QLldkE9S]^`G}%`9p,"], possibleDebugStop: ["nmn_7#r=4(DZLrKZVmLY"], 
  62:            expr            expr: Var, name: ergebnis,                  > +: ["|Rp^?K;EZqskt8I6#7Ef"], -: ["|Rp^?K;EZqskt8I6#7Ef"], 
  63:            expr            expr: Binary, op: EQ,                       > -: ["H*IVCa{=R4w[VcOMcz|V"], 
  64:            expr            expr: NUM_CONST, value: 172.4,              > +: ["C0QLldkE9S]^`G}%`9p,"], -: ["C0QLldkE9S]^`G}%`9p,"], 
  65:            expr            expr: Var, name: ergebnis,                  > +: ["|Rp^?K;EZqskt8I6#7Ef"], -: ["|Rp^?K;EZqskt8I6#7Ef"], 
  66:            AssertAction    msg: POS-4, op: EQ,                         > -: ["nmn_7#r=4(DZLrKZVmLY"], 
  67:            expr            expr: Var, name: ergebnis,                  > +: ["K(d8cB~U*9l}y3xm{KqR","j2#vl3e},+sylJMJY*PW","@Kqpo1wagzcW|}EIy*%I"], -: ["K(d8cB~U*9l}y3xm{KqR"], possibleDebugStop: ["@Kqpo1wagzcW|}EIy*%I"], 
  68:            expr            expr: NUM_CONST, value: 2,                  > +: ["iBxHb6u8N!=Z_OL]:I5Z","Kx?PY;jcS}D~O,e94r33"], -: ["iBxHb6u8N!=Z_OL]:I5Z"], 
  69:            expr            expr: NUM_CONST, value: 3,                  > +: ["C@3*VXqe;IZ4y|5(IePp","aU]R6!/)-6(Ewi*Xc(gE","GGN34LrJ/mrfs|,n]w0a","@e#zXHe|N2)~@mc6@%3h"], -: ["GGN34LrJ/mrfs|,n]w0a"], 
  70:            expr            expr: NUM_CONST, value: 4,                  > +: ["1wIEb]r_[gmBQ/P(2sli"], -: ["1wIEb]r_[gmBQ/P(2sli"], 
  71:            expr            expr: Binary, op: ADD,                      > -: ["aU]R6!/)-6(Ewi*Xc(gE"], 
  72:            expr            expr: NUM_CONST, value: 5,                  > +: ["Bf_MEr[cv[f?b9[H,_ne"], -: ["Bf_MEr[cv[f?b9[H,_ne"], 
  73:            expr            expr: Binary, op: MULTIPLY,                 > -: ["@e#zXHe|N2)~@mc6@%3h"], 
  74:            expr            expr: NUM_CONST, value: 6,                  > +: ["]Gl`bQCW@:T/ZcdY=Vkd"], -: ["]Gl`bQCW@:T/ZcdY=Vkd"], 
  75:            expr            expr: Binary, op: MULTIPLY,                 > -: ["C@3*VXqe;IZ4y|5(IePp"], 
  76:            expr            expr: Binary, op: MULTIPLY,                 > -: ["Kx?PY;jcS}D~O,e94r33"], 
  77:            expr            expr: Binary, op: ADD,                      > -: ["j2#vl3e},+sylJMJY*PW"], 
  78:            AssignStmt      name: ergebnis,                             > -: ["@Kqpo1wagzcW|}EIy*%I"], 
  79:            expr            expr: NUM_CONST, value: 592.4,              > +: ["7GK{nUf49gh@)W5YB6BZ","y9LJkyMA,JsKNQ,fG^uZ","(zx3sJuk![W,2;CwPJ0/"], -: ["(zx3sJuk![W,2;CwPJ0/"], possibleDebugStop: ["y9LJkyMA,JsKNQ,fG^uZ"], 
  80:            expr            expr: Var, name: ergebnis,                  > +: ["V2P!D:L3#s?7)P{wMto("], -: ["V2P!D:L3#s?7)P{wMto("], 
  81:            expr            expr: Binary, op: EQ,                       > -: ["7GK{nUf49gh@)W5YB6BZ"], 
  82:            expr            expr: NUM_CONST, value: 592.4,              > +: ["(zx3sJuk![W,2;CwPJ0/"], -: ["(zx3sJuk![W,2;CwPJ0/"], 
  83:            expr            expr: Var, name: ergebnis,                  > +: ["V2P!D:L3#s?7)P{wMto("], -: ["V2P!D:L3#s?7)P{wMto("], 
  84:            AssertAction    msg: POS-5, op: EQ,                         > -: ["y9LJkyMA,JsKNQ,fG^uZ"], 
  85:            expr            expr: Var, name: ergebnis,                  > +: ["(FWkBE=fW;bf.?5q0937","0;CygcD5BX}[~fJ`4TI?","DbZ=sV%ofsL:?y%HN{fP"], -: ["0;CygcD5BX}[~fJ`4TI?"], possibleDebugStop: ["(FWkBE=fW;bf.?5q0937"], 
  86:            expr            expr: NUM_CONST, value: 2,                  > +: ["({qzXB9E]xuLrc;4gCp%","i+!%`m}c/yq_la{oI.+!"], -: ["i+!%`m}c/yq_la{oI.+!"], 
  87:            expr            expr: NUM_CONST, value: 6,                  > +: [")e%XgyD;Z!cxtTEHejGm","Ma2@b2(v_Mi0R}XO=G!B"], -: ["Ma2@b2(v_Mi0R}XO=G!B"], 
  88:            expr            expr: NUM_CONST, value: 3,                  > +: ["XyS=X=5C9)0Zvw[1SQOh","47^uOIIZx(qC:qr8@P*e","]D2%+5^ntC_B#NYq_a?b"], -: ["]D2%+5^ntC_B#NYq_a?b"], 
  89:            expr            expr: NUM_CONST, value: 4,                  > +: ["-BEon}2[?{RLimVMbdZG"], -: ["-BEon}2[?{RLimVMbdZG"], 
  90:            expr            expr: Binary, op: ADD,                      > -: ["XyS=X=5C9)0Zvw[1SQOh"], 
  91:            expr            expr: NUM_CONST, value: 5,                  > +: ["2UzIGGb.g{n:4uC?cQl@"], -: ["2UzIGGb.g{n:4uC?cQl@"], 
  92:            expr            expr: Binary, op: MULTIPLY,                 > -: ["47^uOIIZx(qC:qr8@P*e"], 
  93:            expr            expr: Binary, op: MULTIPLY,                 > -: [")e%XgyD;Z!cxtTEHejGm"], 
  94:            expr            expr: Binary, op: MULTIPLY,                 > -: ["({qzXB9E]xuLrc;4gCp%"], 
  95:            expr            expr: Binary, op: ADD,                      > -: ["DbZ=sV%ofsL:?y%HN{fP"], 
  96:            AssignStmt      name: ergebnis,                             > -: ["(FWkBE=fW;bf.?5q0937"], 
  97:            expr            expr: NUM_CONST, value: 1012.4,             > +: ["l*4X+s0e`BZ:uKJk4W}R","hJUpW,J[sNjy0]~ZMmEk","?VZP+2l|p.kG8qC;q%*^"], -: ["l*4X+s0e`BZ:uKJk4W}R"], possibleDebugStop: ["?VZP+2l|p.kG8qC;q%*^"], 
  98:            expr            expr: Var, name: ergebnis,                  > +: ["B}sDoc8o(%%OBt?Q-E-w"], -: ["B}sDoc8o(%%OBt?Q-E-w"], 
  99:            expr            expr: Binary, op: EQ,                       > -: ["hJUpW,J[sNjy0]~ZMmEk"], 
 100:            expr            expr: NUM_CONST, value: 1012.4,             > +: ["l*4X+s0e`BZ:uKJk4W}R"], -: ["l*4X+s0e`BZ:uKJk4W}R"], 
 101:            expr            expr: Var, name: ergebnis,                  > +: ["B}sDoc8o(%%OBt?Q-E-w"], -: ["B}sDoc8o(%%OBt?Q-E-w"], 
 102:            AssertAction    msg: POS-7, op: EQ,                         > -: ["?VZP+2l|p.kG8qC;q%*^"], 
 103:            expr            expr: Var, name: ergebnis,                  > +: ["8Npt~!%ijMaPtN=4[]sV","]XeIVkSf%!U+#vu?})~m",":BLzDZCP2)j/UpRCYmAC"], -: ["8Npt~!%ijMaPtN=4[]sV"], possibleDebugStop: [":BLzDZCP2)j/UpRCYmAC"], 
 104:            expr            expr: NUM_CONST, value: 2,                  > +: ["sk`xHtlLdvxjGR2oYzO6","+}s82z%NSe*xttFrv7K5"], -: ["sk`xHtlLdvxjGR2oYzO6"], 
 105:            expr            expr: NUM_CONST, value: 3,                  > +: ["}a,bKS12U[}*5jATgl8-","hvKkUC~PM44.ass)1b|h","3B%#[]smUEO~Y)YO-ZrS","n%DmyApPwzLOajbfC%gO"], -: ["n%DmyApPwzLOajbfC%gO"], 
 106:            expr            expr: NUM_CONST, value: 4,                  > +: ["?;@WdhH|zA1BockzniqD"], -: ["?;@WdhH|zA1BockzniqD"], 
 107:            expr            expr: Binary, op: ADD,                      > -: ["}a,bKS12U[}*5jATgl8-"], 
 108:            expr            expr: NUM_CONST, value: 5,                  > +: ["[z[DKcvIaidbHe9ZW:={","vNUgFA_EYqop0)486w*Q"], -: ["[z[DKcvIaidbHe9ZW:={"], 
 109:            expr            expr: NUM_CONST, value: 6,                  > +: ["54.;?|qvpx0Z_4x)|TJ~"], -: ["54.;?|qvpx0Z_4x)|TJ~"], 
 110:            expr            expr: Binary, op: MINUS,                    > -: ["vNUgFA_EYqop0)486w*Q"], 
 111:            expr            expr: Binary, op: DIVIDE,                   > -: ["3B%#[]smUEO~Y)YO-ZrS"], 
 112:            expr            expr: NUM_CONST, value: 7,                  > +: ["}4]u}~~YSiye0u[zY6g(","jmVWK=/.z80vr+#QSCPr","?G|8+hz%Tg/Qqfh[g9ol"], -: ["jmVWK=/.z80vr+#QSCPr"], 
 113:            expr            expr: NUM_CONST, value: 8,                  > +: [":?b@s2}TGEke(LrAj-(s"], -: [":?b@s2}TGEke(LrAj-(s"], 
 114:            expr            expr: Binary, op: MULTIPLY,                 > -: ["}4]u}~~YSiye0u[zY6g("], 
 115:            expr            expr: NUM_CONST, value: 9,                  > +: ["C:UYfp?M*=egkrm8~vi4","abbXL|mmNzy^nYv#lb[M"], -: ["abbXL|mmNzy^nYv#lb[M"], 
 116:            expr            expr: NUM_CONST, value: 10,                 > +: ["tq!A--1jq[cI;6rJSC?("], -: ["tq!A--1jq[cI;6rJSC?("], 
 117:            expr            expr: Binary, op: ADD,                      > -: ["C:UYfp?M*=egkrm8~vi4"], 
 118:            expr            expr: Binary, op: ADD,                      > -: ["?G|8+hz%Tg/Qqfh[g9ol"], 
 119:            expr            expr: Binary, op: MINUS,                    > -: ["hvKkUC~PM44.ass)1b|h"], 
 120:            expr            expr: Binary, op: ADD,                      > -: ["+}s82z%NSe*xttFrv7K5"], 
 121:            expr            expr: Binary, op: ADD,                      > -: ["]XeIVkSf%!U+#vu?})~m"], 
 122:            AssignStmt      name: ergebnis,                             > -: [":BLzDZCP2)j/UpRCYmAC"], 
 123:            expr            expr: NUM_CONST, value: 932.4,              > +: ["%wd`N1%!xnDQ`G!na82q",",VR`aKGFAcKT+?Wg/w,b","w_cWT[6pWXMgvhSEod8#"], -: ["w_cWT[6pWXMgvhSEod8#"], possibleDebugStop: ["%wd`N1%!xnDQ`G!na82q"], 
 124:            expr            expr: Var, name: ergebnis,                  > +: ["}P%/TfByW1=[rA=dk]Kx"], -: ["}P%/TfByW1=[rA=dk]Kx"], 
 125:            expr            expr: Binary, op: EQ,                       > -: [",VR`aKGFAcKT+?Wg/w,b"], 
 126:            expr            expr: NUM_CONST, value: 932.4,              > +: ["w_cWT[6pWXMgvhSEod8#"], -: ["w_cWT[6pWXMgvhSEod8#"], 
 127:            expr            expr: Var, name: ergebnis,                  > +: ["}P%/TfByW1=[rA=dk]Kx"], -: ["}P%/TfByW1=[rA=dk]Kx"], 
 128:            AssertAction    msg: POS-13, op: EQ,                        > -: ["%wd`N1%!xnDQ`G!na82q"], 
 129:            expr            expr: Var, name: ergebnis,                  > +: ["hBZf/g~/RY9lCOh/T)S]","rDFJ;fkC={)cv_R|`J^)","PyQeM.[38/Qi9f@;]FM^"], -: ["PyQeM.[38/Qi9f@;]FM^"], possibleDebugStop: ["hBZf/g~/RY9lCOh/T)S]"], 
 130:            expr            expr: NUM_CONST, value: 2,                  > +: [".Iv^puPl40OZZi9EVkI_","sEQm^+rBCW(B%[RW51V7"], -: [".Iv^puPl40OZZi9EVkI_"], 
 131:            expr            expr: NUM_CONST, value: 3,                  > +: ["0tf(!Ok[#-08yO]vw!0?","^0V7NO2jfOba7+4M8;c[","[Ik.tzgile;0pnh3:lIi","NLdfJ;U]-QAa%O4hCQua"], -: ["NLdfJ;U]-QAa%O4hCQua"], 
 132:            expr            expr: NUM_CONST, value: 4,                  > +: ["CH02}dCMU3z@HBMB4ll%"], -: ["CH02}dCMU3z@HBMB4ll%"], 
 133:            expr            expr: Binary, op: ADD,                      > -: ["[Ik.tzgile;0pnh3:lIi"], 
 134:            expr            expr: NUM_CONST, value: 5,                  > +: ["/Yy+[{8.O!A7T;,zxFYS","CJ,7}:3YG(UmY3Usk+Zc"], -: ["CJ,7}:3YG(UmY3Usk+Zc"], 
 135:            expr            expr: NUM_CONST, value: 6,                  > +: ["Hx^_fw_lk?sS5|33NN?h"], -: ["Hx^_fw_lk?sS5|33NN?h"], 
 136:            expr            expr: Binary, op: MULTIPLY,                 > -: ["/Yy+[{8.O!A7T;,zxFYS"], 
 137:            expr            expr: Binary, op: ADD,                      > -: ["0tf(!Ok[#-08yO]vw!0?"], 
 138:            expr            expr: NUM_CONST, value: 7,                  > +: ["r7kC/Srd!YbBEp`xX;Li","^Iostv!wMbeHas~[na)!","=oq;E)1w|O#^Z.O02Flu"], -: ["=oq;E)1w|O#^Z.O02Flu"], 
 139:            expr            expr: NUM_CONST, value: 8,                  > +: ["6%5:f?rN.clw6hZafO[!"], -: ["6%5:f?rN.clw6hZafO[!"], 
 140:            expr            expr: Binary, op: MULTIPLY,                 > -: ["r7kC/Srd!YbBEp`xX;Li"], 
 141:            expr            expr: NUM_CONST, value: 9,                  > +: ["C%}gw5RkuanxFi+a{{3W","U/[U(L3{P9?M*_QUL_!5"], -: ["U/[U(L3{P9?M*_QUL_!5"], 
 142:            expr            expr: NUM_CONST, value: 10,                 > +: ["qe?1?6d_fj34EdN2qt9P"], -: ["qe?1?6d_fj34EdN2qt9P"], 
 143:            expr            expr: Binary, op: MINUS,                    > -: ["C%}gw5RkuanxFi+a{{3W"], 
 144:            expr            expr: Binary, op: ADD,                      > -: ["^Iostv!wMbeHas~[na)!"], 
 145:            expr            expr: Binary, op: MULTIPLY,                 > -: ["^0V7NO2jfOba7+4M8;c["], 
 146:            expr            expr: Binary, op: MULTIPLY,                 > -: ["sEQm^+rBCW(B%[RW51V7"], 
 147:            expr            expr: Binary, op: ADD,                      > -: ["rDFJ;fkC={)cv_R|`J^)"], 
 148:            AssignStmt      name: ergebnis,                             > -: ["hBZf/g~/RY9lCOh/T)S]"], 
 149:            comment         n: 1, text: ternary, type: start,           > +: ["G]_8Q^GJ(Mmxr-SJ}+X=","]H8n_exy-goJv8^[dQ*h"], possibleDebugStop: ["]H8n_exy-goJv8^[dQ*h"], 
 150:            expr            expr: Var, name: ergebnis,                  > +: ["(@W,g(u~=[B^%C9?g9eO","Uw%KWDY=FzXT:!d7I0U!"], -: ["Uw%KWDY=FzXT:!d7I0U!"], 
 151:            expr            expr: NUM_CONST, value: 5002.4,             > +: ["XC?BzI3wrGUaca3P:YYN"], -: ["XC?BzI3wrGUaca3P:YYN"], 
 152:            expr            expr: Binary, op: EQ,                       > -: ["(@W,g(u~=[B^%C9?g9eO"], 
 153:            jump            conditional: false, target: t_m_1,          > 
 154:            expr            expr: STRING_CONST, value: SUCCESS,         > +: ["=#Fq@gZv%;tUihzXKHrY"], -: ["=#Fq@gZv%;tUihzXKHrY"], 
 155:            jump            conditional: always, target: t_e_1,         > 
 156: t_m_1      comment         text: ternary,                              > 
 157:            expr            expr: STRING_CONST, value: FAIL,            > +: ["C[Cq)P-Vu|qa*|%,~D[1"], -: ["C[Cq)P-Vu|qa*|%,~D[1"], 
 158: t_e_1      comment         text: ternary, type: end,                   > -: ["G]_8Q^GJ(Mmxr-SJ}+X="], 
 159:            DebugAction                                                 > -: ["]H8n_exy-goJv8^[dQ*h"], 
 160:            comment         value: Grundrechenarten Basics  --END--,    > +: ["^P%5Q9{)cM|+?-+]{#QX"], -: ["^P%5Q9{)cM|+?-+]{#QX"], possibleDebugStop: ["^P%5Q9{)cM|+?-+]{#QX"], 
 161:            stop                                                        > 
