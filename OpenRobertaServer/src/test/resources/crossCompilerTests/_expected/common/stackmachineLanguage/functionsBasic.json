   0:            expr            expr: NUM_CONST, value: 0,                      > +: ["Z-;qom#^A|JE6(QMER?T","|P+ydDEb,Yl,iv7SGjO7"], -: ["|P+ydDEb,Yl,iv7SGjO7"], 
   1:            VarDeclaration  name: n1, type: NUMBER,                         > -: ["Z-;qom#^A|JE6(QMER?T"], 
   2:            expr            expr: BOOL_CONST, value: false,                 > +: ["Z]ok0K17skw(r|cl;Ta(","Q?9Xk1*Dk?bn~Yl*i)^P"], -: ["Z]ok0K17skw(r|cl;Ta("], 
   3:            VarDeclaration  name: b, type: BOOLEAN,                         > -: ["Q?9Xk1*Dk?bn~Yl*i)^P"], 
   4:            expr            expr: NUM_CONST, value: 1,                      > +: ["O-Y-;F(#6^%W=riHRHBx","P.YdhBL+2Nq{Hihjl-%@"], -: ["O-Y-;F(#6^%W=riHRHBx"], 
   5:            VarDeclaration  name: n2, type: NUMBER,                         > -: ["P.YdhBL+2Nq{Hihjl-%@"], 
   6:            expr            expr: NUM_CONST, value: 4,                      > +: ["EhW#%0?OX{kZA3rRhiD0","Lv.CphX;O^#^!Rf|}W+Z"], -: ["Lv.CphX;O^#^!Rf|}W+Z"], 
   7:            VarDeclaration  name: n3, type: NUMBER,                         > -: ["EhW#%0?OX{kZA3rRhiD0"], 
   8:            comment         value: Basic Functions START,                   > +: ["?/;Knn|oaZR36aGo:ci_"], -: ["?/;Knn|oaZR36aGo:ci_"], possibleDebugStop: ["?/;Knn|oaZR36aGo:ci_"], 
   9:            returnAddress   target: rtn_1,                                  > +: ["Ze_P9Jz#qTm9n(!rOPWV"], possibleDebugStop: ["Ze_P9Jz#qTm9n(!rOPWV"], 
  10:            call            target: mthd_s_number,                          > 
  11: rtn_1      comment         text: call, type: end,                          > -: ["Ze_P9Jz#qTm9n(!rOPWV"], 
  12:            returnAddress   target: rtn_2,                                  > +: ["qMHm.DA.d^N%EoE%Ys#t"], possibleDebugStop: ["qMHm.DA.d^N%EoE%Ys#t"], 
  13:            call            target: mthd_s_breakFunct,                      > 
  14: rtn_2      comment         text: call, type: end,                          > -: ["qMHm.DA.d^N%EoE%Ys#t"], 
  15:            expr            expr: NUM_CONST, value: 5,                      > +: ["yAYobFibCl?)8+MApj6w","xn+3(y(:Xr,-DL.u/IIz","CZ|9^zV6yy.d8e(IfUbC"], -: ["CZ|9^zV6yy.d8e(IfUbC"], possibleDebugStop: ["yAYobFibCl?)8+MApj6w"], 
  16:            expr            expr: Var, name: n1,                            > +: [";szEIWZQwuEEn-i[.AI3"], -: [";szEIWZQwuEEn-i[.AI3"], 
  17:            expr            expr: Binary, op: EQ,                           > -: ["xn+3(y(:Xr,-DL.u/IIz"], 
  18:            expr            expr: NUM_CONST, value: 5,                      > +: ["CZ|9^zV6yy.d8e(IfUbC"], -: ["CZ|9^zV6yy.d8e(IfUbC"], 
  19:            expr            expr: Var, name: n1,                            > +: [";szEIWZQwuEEn-i[.AI3"], -: [";szEIWZQwuEEn-i[.AI3"], 
  20:            AssertAction    msg: pos-1, op: EQ,                             > -: ["yAYobFibCl?)8+MApj6w"], 
  21:            returnAddress   target: rtn_3,                                  > +: ["Vn^B|A1*o5vNa9uy7}5;","okM37Q-nsDtLb=XrAPX`"], possibleDebugStop: ["okM37Q-nsDtLb=XrAPX`"], 
  22:            call            target: mthd_s_retNumber,                       > 
  23: rtn_3      comment         text: call, type: end,                          > -: ["Vn^B|A1*o5vNa9uy7}5;"], 
  24:            AssignStmt      name: n1,                                       > -: ["okM37Q-nsDtLb=XrAPX`"], 
  25:            returnAddress   target: rtn_4,                                  > +: ["6HL4AHl4TZ`|EdKAk!|1","l{`x;38#peOpR;#xC{Yx"], possibleDebugStop: ["6HL4AHl4TZ`|EdKAk!|1"], 
  26:            call            target: mthd_s_retBool,                         > 
  27: rtn_4      comment         text: call, type: end,                          > -: ["l{`x;38#peOpR;#xC{Yx"], 
  28:            AssignStmt      name: b,                                        > -: ["6HL4AHl4TZ`|EdKAk!|1"], 
  29:            returnAddress   target: rtn_5,                                  > +: ["r{7kKn.O{*/yJd|Q%u4D","R-!w~FQ1?QMnA8~hNFos"], possibleDebugStop: ["r{7kKn.O{*/yJd|Q%u4D"], 
  30:            expr            expr: NUM_CONST, value: 10,                     > +: ["G:I,,92EdK.zw-|[*;]R"], -: ["G:I,,92EdK.zw-|[*;]R"], 
  31:            call            target: mthd_s_retNumber2,                      > 
  32: rtn_5      comment         text: call, type: end,                          > -: ["R-!w~FQ1?QMnA8~hNFos"], 
  33:            AssignStmt      name: n1,                                       > -: ["r{7kKn.O{*/yJd|Q%u4D"], 
  34:            comment         value: Basic Functions END,                     > +: ["HEs[1q%~w{%Z8v7zOwpn"], -: ["HEs[1q%~w{%Z8v7zOwpn"], possibleDebugStop: ["HEs[1q%~w{%Z8v7zOwpn"], 
  35:            stop                                                            > 
  36: mthd_s_number comment         text: createMethodVoid, type: start,         > +: ["Ht?E}Ks,Z,Du|-[B{1.~"], possibleDebugStop: ["Ht?E}Ks,Z,Du|-[B{1.~"], 
  37:            expr            expr: Var, name: n2,                            > +: ["fqV:hW%x{L2l8`-S%/mm","sNMsXK%=HK(U4=eFD(`#","/D8M]_q+ax)ergRw9}EB"], -: ["sNMsXK%=HK(U4=eFD(`#"], possibleDebugStop: ["/D8M]_q+ax)ergRw9}EB"], 
  38:            expr            expr: Var, name: n3,                            > +: ["UFESbh6BK1o1g0ZeLbq7"], -: ["UFESbh6BK1o1g0ZeLbq7"], 
  39:            expr            expr: Binary, op: ADD,                          > -: ["fqV:hW%x{L2l8`-S%/mm"], 
  40:            AssignStmt      name: n1,                                       > -: ["/D8M]_q+ax)ergRw9}EB"], 
  41: mthd_e_6   comment         text: createMethodVoid, type: start,            > 
  42:            return          values: false,                                  > 
  43:            comment         text: createMethodVoid, type: end,              > -: ["Ht?E}Ks,Z,Du|-[B{1.~"], 
  44: mthd_s_breakFunct comment         text: createMethodVoid, type: start,     > +: ["g@jdS~EKBwqlf9f^ZVIz"], possibleDebugStop: ["g@jdS~EKBwqlf9f^ZVIz"], 
  45:            comment         n: 7, text: createMethodIfReturn, type: start,  > +: ["Pyk7^-E0rh`~dIVtIT}t"], possibleDebugStop: ["Pyk7^-E0rh`~dIVtIT}t"], 
  46:            expr            expr: NUM_CONST, value: 5,                      > +: ["w]C{(G_7KL*_fd,hOD^o","u.f4N5g-hH#Ss^ADy/Z{"], -: ["u.f4N5g-hH#Ss^ADy/Z{"], 
  47:            expr            expr: Var, name: n1,                            > +: ["]AI:B4IH_(Ke(?:JdD*3"], -: ["]AI:B4IH_(Ke(?:JdD*3"], 
  48:            expr            expr: Binary, op: EQ,                           > -: ["w]C{(G_7KL*_fd,hOD^o"], 
  49:            jump            conditional: false, target: rtn_8,              > 
  50:            expr            expr: null,                                     > 
  51:            jump            conditional: always, target: mthd_e_7,          > -: ["Pyk7^-E0rh`~dIVtIT}t","g@jdS~EKBwqlf9f^ZVIz"], 
  52: rtn_8      comment         text: createMethodIfReturn, type: end,          > -: ["Pyk7^-E0rh`~dIVtIT}t"], 
  53:            expr            expr: Var, name: n1,                            > +: ["IQ!eZmT*2(Mj{=Q[5Sp@","k/JWz2;]AB_oQy2bL]7I","2%H;5g52Trj;-[_Bsb^}"], -: ["2%H;5g52Trj;-[_Bsb^}"], possibleDebugStop: ["IQ!eZmT*2(Mj{=Q[5Sp@"], 
  54:            expr            expr: NUM_CONST, value: 1000,                   > +: ["xs`2,oV#w^j7/_8nT*LY"], -: ["xs`2,oV#w^j7/_8nT*LY"], 
  55:            expr            expr: Binary, op: ADD,                          > -: ["k/JWz2;]AB_oQy2bL]7I"], 
  56:            AssignStmt      name: n1,                                       > -: ["IQ!eZmT*2(Mj{=Q[5Sp@"], 
  57: mthd_e_7   comment         text: createMethodVoid, type: start,            > 
  58:            return          values: false,                                  > 
  59:            comment         text: createMethodVoid, type: end,              > -: ["g@jdS~EKBwqlf9f^ZVIz"], 
  60: mthd_s_retBool comment         text: createMethodReturn, type: start,      > +: ["FIFs2~xb1b`)KnELi;`X"], possibleDebugStop: ["FIFs2~xb1b`)KnELi;`X"], 
  61:            expr            expr: Var, name: n1,                            > +: ["B_k~^F6)[?PRt9=[UWl[","KS*oUITWR5XoF=]tY+eO"], -: ["KS*oUITWR5XoF=]tY+eO"], possibleDebugStop: ["B_k~^F6)[?PRt9=[UWl["], 
  62:            AssignStmt      name: n1,                                       > -: ["B_k~^F6)[?PRt9=[UWl["], 
  63:            expr            expr: Var, name: b,                             > +: ["pBvAry6K[xBZq{)j;[ky"], -: ["pBvAry6K[xBZq{)j;[ky"], 
  64: mthd_e_9   comment         text: createMethodVoid, type: start,            > 
  65:            return          values: true,                                   > 
  66:            comment         text: createMethodReturn, type: end,            > -: ["FIFs2~xb1b`)KnELi;`X"], 
  67: mthd_s_retNumber comment         text: createMethodReturn, type: start,    > +: ["d.5SESU`(`ZkilXou)7o"], possibleDebugStop: ["d.5SESU`(`ZkilXou)7o"], 
  68:            expr            expr: Var, name: n1,                            > +: ["-uQs,n{PNKp`lLw3CCJe","%?W|*1%Wc=-M(JUwjNRF"], -: ["-uQs,n{PNKp`lLw3CCJe"], possibleDebugStop: ["%?W|*1%Wc=-M(JUwjNRF"], 
  69:            AssignStmt      name: n1,                                       > -: ["%?W|*1%Wc=-M(JUwjNRF"], 
  70:            expr            expr: Var, name: n1,                            > +: [",Q/]KIU?mIB~?.b)Xc`n"], -: [",Q/]KIU?mIB~?.b)Xc`n"], 
  71: mthd_e_10  comment         text: createMethodVoid, type: start,            > 
  72:            return          values: true,                                   > 
  73:            comment         text: createMethodReturn, type: end,            > -: ["d.5SESU`(`ZkilXou)7o"], 
  74: mthd_s_retNumber2 comment         text: createMethodReturn, type: start,   > +: ["g1G/xU8/~B`xou/]1l=="], possibleDebugStop: ["g1G/xU8/~B`xou/]1l=="], 
  75:            VarDeclaration  name: x, type: NUMBER,                          > 
  76:            expr            expr: Var, name: x,                             > +: ["jdEU`cMfkmP^4]|`B5r2","Y^4EzUFHB5XS4Vpr*^d;","fS)0DR5+uiv5zs!_AQv7"], -: ["fS)0DR5+uiv5zs!_AQv7"], possibleDebugStop: ["jdEU`cMfkmP^4]|`B5r2"], 
  77:            expr            expr: NUM_CONST, value: 2,                      > +: ["af~[?sz@R?)*y*!Cq@0^"], -: ["af~[?sz@R?)*y*!Cq@0^"], 
  78:            expr            expr: Binary, op: DIVIDE,                       > -: ["Y^4EzUFHB5XS4Vpr*^d;"], 
  79:            AssignStmt      name: x,                                        > -: ["jdEU`cMfkmP^4]|`B5r2"], 
  80:            expr            expr: Var, name: x,                             > +: ["qXY6MjJ/q!!%KF/Z^/4u"], -: ["qXY6MjJ/q!!%KF/Z^/4u"], 
  81: mthd_e_11  comment         text: createMethodVoid, type: start,            > 
  82:            unbindVar       name: x,                                        > 
  83:            return          values: true,                                   > 
  84:            comment         text: createMethodReturn, type: end,            > -: ["g1G/xU8/~B`xou/]1l=="], 
