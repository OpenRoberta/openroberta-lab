StmtTextComment[textComment: Basis List Operations START]

if FunctionExpr [IsListEmptyFunct[value: Var [initialEmptyNumbers]]]
,then
Var [initialEmptyNumbers] := ListCreate [NUMBER, NumConst[value: 1], NumConst[value: 2]]

Var [item] := FunctionExpr [LengthOfListFunct[value: Var [initialEmptyNumbers]]]

Var [item] := FunctionExpr [IndexOfFunct[location: FIRST, value: Var [initialEmptyNumbers], find: NumConst[value: 1]]]

Var [item] := FunctionExpr [IndexOfFunct[location: FIRST, value: Var [initialEmptyNumbers], find: NumConst[value: 5]]]
FunctionStmt [ListSetIndex [SET, FIRST, [Var [initialEmptyNumbers], NumConst[value: 2]]]]


if FunctionExpr [IsListEmptyFunct[value: Var [initialEmptyBoolean]]]
,then
Var [initialEmptyBoolean] := ListCreate [BOOLEAN, BoolConst[value: true], BoolConst[value: false]]

Var [item] := FunctionExpr [LengthOfListFunct[value: Var [initialEmptyBoolean]]]

Var [item] := FunctionExpr [IndexOfFunct[location: FIRST, value: Var [initialEmptyBoolean], find: Var [bool]]]
FunctionStmt [ListSetIndex [INSERT, LAST, [Var [initialEmptyBoolean], BoolConst[value: true]]]]


if FunctionExpr [IsListEmptyFunct[value: Var [initialEmptyStrings]]]
,then
Var [initialEmptyStrings] := ListCreate [STRING, StringConst[value: a], StringConst[value: b]]

Var [item] := FunctionExpr [LengthOfListFunct[value: Var [initialEmptyStrings]]]

Var [item] := FunctionExpr [IndexOfFunct[location: FIRST, value: Var [initialEmptyStrings], find: StringConst[value: a]]]
FunctionStmt [ListSetIndex [SET, FROM_END, [Var [initialEmptyStrings], StringConst[value: c], NumConst[value: 2]]]]FunctionStmt [ListSetIndex [INSERT, FROM_END, [Var [initialEmptyStrings], StringConst[value: d], NumConst[value: 1]]]]

StmtTextComment[textComment: Basis List Operations END]
