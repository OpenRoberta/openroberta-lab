
Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [ROOT, [NumConst[value: 4]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [ABS, [NumConst[value: -2]]]]]


Var [x] := Binary [ADD, Var [x], Unary [NEG, NumConst[value: -4]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [LN, [FunctionExpr [MathSingleFunct [EXP, [NumConst[value: 2]]]]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [LOG10, [NumConst[value: 100]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [POW10, [NumConst[value: 2]]]]]


Var [x] := Binary [ADD, Var [x], Binary [MOD, NumConst[value: 5], NumConst[value: 3]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [SIN, [Binary [DIVIDE, MathConst[mathConst: PI], NumConst[value: 2]]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [COS, [NumConst[value: 0]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [TAN, [NumConst[value: 0]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [ASIN, [NumConst[value: 0]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [ACOS, [NumConst[value: 1]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [ATAN, [NumConst[value: 0]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [ROUNDDOWN, [NumConst[value: 42.8]]]]]


Var [x] := Binary [ADD, Var [x], FunctionExpr [MathSingleFunct [SIN, [FunctionExpr [MathConstrainFunct [[NumConst[value: 2], NumConst[value: 1], NumConst[value: 100]]]]]]]]

StmtTextComment[textComment: expected: 170]
