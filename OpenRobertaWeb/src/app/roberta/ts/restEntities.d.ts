/*
 * This is a Typescript d.ts file GENERATED by the CommBeanGenerator maven plugin.

 * DON'T MODIFY IT. Don't modify it. DON'T MODIFY IT.
 * Otherwise your effort may be lost: the file will be overwritten automatically
 * when the json-file, it is derived from, is changed.
 */
export interface InitRequest {
    log: string[];
    data: any;
}

export interface FullRestRequest {
    initToken: string;
    log: string[];
    data: any;
}

export interface BaseRequest {
    cmd?: string;
}

export interface BaseResponse {
    cmd?: string;
    rc: string;
    message?: string;
    cause?: string;
    parameters?: any;
    initToken: string;
    serverTime: number;
    serverVersion: string;
    robotWait?: number;
    robotBattery?: string;
    robotName?: string;
    robotVersion?: string;
    robotFirmwareName?: string;
    robotSensorvalues?: any;
    robotNepoexitvalue?: number;
    robotState?: string;
    notificationsAvailable?: boolean;
}

export interface InitResponse extends BaseResponse {
    server: any;
}

export interface RobotInfo {
    wait: number;
    battery: string;
    name: string;
    version: string;
    firmwareName: string;
    sensorvalues: any;
    nepoexitvalue: number;
}

export interface SaveRequest extends BaseRequest {
    timestamp?: number;
    programName: string;
    progXML: string;
    configName?: string;
    confXML?: string;
    ownerAccount?: string;
}

export interface ShareCreateRequest extends BaseRequest {
    programName: string;
}

export interface SaveResponse extends BaseResponse {
    lastChanged: number;
}

export interface ShareDeleteRequest extends BaseRequest {
    programName: string;
    owner: string;
    author: string;
}

export interface ListingRequest extends BaseRequest {
    programName: string;
    owner: string;
    author: string;
    configName: string;
}

export interface ListingResponse extends BaseResponse {
    programName?: string;
    progXML: string;
    configName?: string;
    confXML?: string;
    lastChanged: number;
}

export interface ImportRequest extends BaseRequest {
    programName: string;
    progXML: string;
}

export interface ImportResponse extends BaseResponse {
    programName: string;
    progXML: string;
    confXML: string;
}

export interface ImportErrorResponse extends BaseResponse {
    robotTypes: string;
}

export interface ShareRequest extends BaseRequest {
    programName: string;
    shareData: any;
}

export interface ShareResponse extends BaseResponse {
    sharedWith: any[];
}

export interface LikeRequest extends BaseRequest {
    programName: string;
    robotName: string;
    author: string;
    like: boolean;
}

export interface EntityRequest extends BaseRequest {
    programName: string;
    owner: string;
    author: string;
    configName: string;
}

export interface EntityResponse extends BaseResponse {
    program: any[];
}

export interface ListingNamesResponse extends BaseResponse {
    programNames: any[];
}

export interface DeleteRequest extends BaseRequest {
    programName: string;
    author: string;
}

export interface SetTokenRequest extends BaseRequest {
    token: string;
}

export interface SetTokenResponse extends BaseResponse {
    update: number;
}

export interface SetRobotRequest extends BaseRequest {
    robot: string;
    extensions: any;
}

export interface SetRobotResponse extends BaseResponse {
    robot: string;
    program: any;
    configuration: any;
    sim: boolean;
    multipleSim: boolean;
    markerSim: boolean;
    nn: boolean;
    nnActivations: any[];
    webotsSim: boolean;
    webotsUrl?: string;
    vendor: string;
    configurationUsed: boolean;
    commandLine?: string;
    signature?: string;
    sourceCodeFileExtension: string;
    binaryFileExtension: string;
    firmwareDefault?: string;
}

export interface SaveConfRequest extends BaseRequest {
    name: string;
    configuration: string;
}

export interface ConfRequest extends BaseRequest {
    name: string;
    owner?: string;
}

export interface ConfResponse extends BaseResponse {
    confXML?: string;
    configurationNames?: any[];
}

export interface PingResponse extends BaseResponse {
    version: string;
    date: number;
    dateAsString: string;
}

export interface LoginRequest extends BaseRequest {
    accountName: string;
    password: string;
    userGroupOwner?: string;
    userGroupName?: string;
}

export interface LoginResponse extends BaseResponse {
    userId: number;
    userRole: string;
    userAccountName: string;
    userName?: string;
    isAccountActivated: boolean;
    userGroupOwner: string;
    userGroupName: string;
}

export interface GetUserResponse extends BaseResponse {
    userId: number;
    userAccountName: string;
    userName?: string;
    userEmail: string;
    isYoungerThen14: boolean;
}

export interface UserRequest extends BaseRequest {
    accountName: string;
    password?: string;
    userEmail: string;
    userName: string;
    role: string;
    language: string;
    isYoungerThen14: boolean;
}

export interface ChangePasswordRequest extends BaseRequest {
    accountName: string;
    oldPassword: string;
    newPassword?: string;
}

export interface DeleteUserRequest extends BaseRequest {
    accountName: string;
    password: string;
}

export interface ResetPasswordRequest extends BaseRequest {
    resetPasswordLink: string;
    newPassword?: string;
}

export interface IsResetPasswordLinkExpiredResponse extends BaseResponse {
    resetPasswordLinkExpired: boolean;
}

export interface PasswordRecoveryRequest extends BaseRequest {
    lostEmail: string;
    language: string;
}

export interface ResendActivationRequest extends BaseRequest {
    accountName: string;
    language: string;
}

export interface ActivateUserRequest extends BaseRequest {
    userActivationLink: string;
}

export interface GetStatusTextResponse extends BaseResponse {
    statustext: any[];
}

export interface SetStatusTextRequest extends BaseRequest {
    english: string;
    german: string;
    timestamp: number;
}

export interface ProjectWorkflowRequest extends BaseRequest {
    programName: string;
    configurationName?: string;
    progXML: string;
    confXML?: string;
    SSID?: string;
    password?: string;
    language?: string;
    robot?: string;
}

export interface ProjectWorkflowResetRequest extends BaseRequest {
    robot?: string;
}

export interface ProjectSourceResponse extends BaseResponse {
    sourceCode: string;
    progXML: string;
    confAnnos: any;
}

export interface ProjectSourceSimulationResponse extends BaseResponse {
    programName?: string;
    javaScriptProgram: string;
    fileExtension: string;
    progXML: string;
    confAnnos: any;
    configuration: any;
}

export interface ProjectNepoResponse extends BaseResponse {
    programName?: string;
    progXML?: string;
    confAnnos?: any;
    compiledCode: string;
    configuration?: any;
}

export interface ProjectNativeResponse extends BaseResponse {
    programName?: string;
    confAnnos?: any;
    compiledCode: string;
}

export interface UserGroupProgramListRequest extends BaseRequest {
    groupName: string;
}

export interface UserGroupRequest extends BaseRequest {
    groupName: string;
}

export interface UserGroupResponse extends BaseResponse {
    userGroup: any;
}

export interface UserGroupListResponse extends BaseResponse {
    userGroups: any[];
}

export interface ChangeUserGroupRequest extends BaseRequest {
    groupName: string;
    groupMemberNames: string[];
}

export interface UpdateUserGroupMemberAccountRequest extends BaseRequest {
    groupName: string;
    currentGroupMemberAccount: string;
    newGroupMemberAccount: string;
}

export interface UserGroupsRequest extends BaseRequest {
    groupNames: string[];
}

export interface UserGroupMembersRequest extends BaseRequest {
    groupName: string;
    groupMemberAccounts: string[];
}

export interface NotificationsResponse extends BaseResponse {
    notifications: any;
}
