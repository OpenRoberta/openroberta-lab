// This file is automatically generated by the Open Roberta Lab.
#undef max
#undef min
#define _ARDUINO_STL_NOT_NEEDED
#include <NEPODefs.h>
#include "SenseBoxMCU.h"

unsigned long _time = millis();

bool ___item;
double ___item2;
int _potentiometer_P = 3;

BMX055 _bmx055_A;
int _getValueFromBmx(int axis, int mode) {
    int _x_axis;
    int _y_axis;
    int _z_axis;
    switch (mode) {
        case 1:
            _bmx055_A.getRotation(&_x_axis, &_y_axis, &_z_axis);
            break;
        case 2:
            _bmx055_A.getMagnet(&_x_axis, &_y_axis, &_z_axis);
            break;
    }
    switch (axis) {
        case 1:
            return _x_axis;
        case 2:
            return _y_axis;
        case 3:
            return _z_axis;
    }
}

int _button_B = 2;
int _mic_S = 4;
Ultrasonic _hcsr04_U(5, 6);
int _output_L = 1;

void setup()
{ 
    _bmx055_A.beginAcc(0x03);
    pinMode(_button_B, INPUT);
    _bmx055_A.beginMagn();
    _bmx055_A.beginGyro();
    ___item = true;
    ___item2 = 0;
}

void loop()
{
    ___item = digitalRead(_button_B);
    ___item2 = analogRead(_output_L)/10.24;
    ___item2 = ((double)analogRead(_potentiometer_P))*5/1024;
    ___item2 = get_microphone_volume(_mic_S);
    ___item2 = _hcsr04_U.getDistance();
    ___item2 = (int) (millis() - _time);
    _time = millis();
    ___item2 = _bmx055_A.getAccelerationX();
    ___item2 = _bmx055_A.getAccelerationY();
    ___item2 = _bmx055_A.getAccelerationZ();
    ___item2 = _getValueFromBmx(1, 1);
    ___item2 = _getValueFromBmx(2, 1);
    ___item2 = _getValueFromBmx(3, 1);
    ___item2 = _getValueFromBmx(1, 2);
    ___item2 = _getValueFromBmx(2, 2);
    ___item2 = _getValueFromBmx(3, 2);
}